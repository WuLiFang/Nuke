# -*- coding=UTF-8 -*-
# This typing file was generated by typing_from_help.py
# pyright: reportUndefinedVariable=information,reportUnusedImport=false
"""
Qt.QtWidgets
"""

import typing
from . import QtCore, QtGui

class QAbstractButton(QWidget):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    clicked: ...
    """
    Signal
    """

    pressed: ...
    """
    Signal
    """

    released: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    toggled: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def animateClick(self, *args, **kwargs):
        """ """
        ...
    def autoExclusive(self, *args, **kwargs):
        """ """
        ...
    def autoRepeat(self, *args, **kwargs):
        """ """
        ...
    def autoRepeatDelay(self, *args, **kwargs):
        """ """
        ...
    def autoRepeatInterval(self, *args, **kwargs):
        """ """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def checkStateSet(self, *args, **kwargs):
        """ """
        ...
    def click(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def focusInEvent(self, *args, **kwargs):
        """ """
        ...
    def focusOutEvent(self, *args, **kwargs):
        """ """
        ...
    def group(self, *args, **kwargs):
        """ """
        ...
    def hitButton(self, *args, **kwargs):
        """ """
        ...
    def icon(self, *args, **kwargs):
        """ """
        ...
    def iconSize(self, *args, **kwargs):
        """ """
        ...
    def isCheckable(self, *args, **kwargs):
        """ """
        ...
    def isChecked(self, *args, **kwargs):
        """ """
        ...
    def isDown(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def keyReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def nextCheckState(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def setAutoExclusive(self, *args, **kwargs):
        """ """
        ...
    def setAutoRepeat(self, *args, **kwargs):
        """ """
        ...
    def setAutoRepeatDelay(self, *args, **kwargs):
        """ """
        ...
    def setAutoRepeatInterval(self, *args, **kwargs):
        """ """
        ...
    def setCheckable(self, *args, **kwargs):
        """ """
        ...
    def setChecked(self, *args, **kwargs):
        """ """
        ...
    def setDown(self, *args, **kwargs):
        """ """
        ...
    def setIcon(self, *args, **kwargs):
        """ """
        ...
    def setIconSize(self, *args, **kwargs):
        """ """
        ...
    def setShortcut(self, *args, **kwargs):
        """ """
        ...
    def setText(self, *args, **kwargs):
        """ """
        ...
    def shortcut(self, *args, **kwargs):
        """ """
        ...
    def text(self, *args, **kwargs):
        """ """
        ...
    def timerEvent(self, *args, **kwargs):
        """ """
        ...
    def toggle(self, *args, **kwargs):
        """ """
        ...
    ...

class QAbstractGraphicsShapeItem(QGraphicsItem):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def brush(self, *args, **kwargs):
        """ """
        ...
    def isObscuredBy(self, *args, **kwargs):
        """ """
        ...
    def opaqueArea(self, *args, **kwargs):
        """ """
        ...
    def pen(self, *args, **kwargs):
        """ """
        ...
    def setBrush(self, *args, **kwargs):
        """ """
        ...
    def setPen(self, *args, **kwargs):
        """ """
        ...
    ...

class QAbstractItemDelegate(PySide.QtCore.QObject):
    EditNextItem: ...
    """
    PySide.QtGui.QAbstractItemDelegate.EndEditHint.EditNext...
    """

    EditPreviousItem: ...
    """
    PySide.QtGui.QAbstractItemDelegate.EndEditHint.Edit...
    """

    EndEditHint: ...
    """
    <type 'PySide.QtGui.QAbstractItemDelegate.EndEditHint'>
    """

    NoHint: ... = PySide.QtGui.QAbstractItemDelegate.EndEditHint.NoHint
    """
    """

    RevertModelCache: ...
    """
    PySide.QtGui.QAbstractItemDelegate.EndEditHint.Reve...
    """

    SubmitModelCache: ...
    """
    PySide.QtGui.QAbstractItemDelegate.EndEditHint.Subm...
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    closeEditor: ...
    """
    Signal
    """

    commitData: ...
    """
    Signal
    """

    sizeHintChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def createEditor(self, *args, **kwargs):
        """ """
        ...
    def editorEvent(self, *args, **kwargs):
        """ """
        ...
    def helpEvent(self, *args, **kwargs):
        """ """
        ...
    def paint(self, *args, **kwargs):
        """ """
        ...
    def setEditorData(self, *args, **kwargs):
        """ """
        ...
    def setModelData(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def updateEditorGeometry(self, *args, **kwargs):
        """ """
        ...
    ...

class QAbstractItemView(QAbstractScrollArea):
    AboveItem: ...
    """
    PySide.QtGui.QAbstractItemView.DropIndicatorPosition.Above...
    """

    AllEditTriggers: ...
    """
    PySide.QtGui.QAbstractItemView.EditTrigger.AllEditTr...
    """

    AnimatingState: ... = PySide.QtGui.QAbstractItemView.State.AnimatingState
    """
    """

    AnyKeyPressed: ...
    """
    PySide.QtGui.QAbstractItemView.EditTrigger.AnyKeyPress...
    """

    BelowItem: ...
    """
    PySide.QtGui.QAbstractItemView.DropIndicatorPosition.Below...
    """

    CollapsingState: ... = PySide.QtGui.QAbstractItemView.State.CollapsingState
    """
    """

    ContiguousSelection: ...
    """
    PySide.QtGui.QAbstractItemView.SelectionMode.Con...
    """

    CurrentChanged: ...
    """
    PySide.QtGui.QAbstractItemView.EditTrigger.CurrentCha...
    """

    CursorAction: ...
    """
    <type 'PySide.QtGui.QAbstractItemView.CursorAction'>
    """

    DoubleClicked: ...
    """
    PySide.QtGui.QAbstractItemView.EditTrigger.DoubleClick...
    """

    DragDrop: ... = PySide.QtGui.QAbstractItemView.DragDropMode.DragDrop
    """
    """

    DragDropMode: ...
    """
    <type 'PySide.QtGui.QAbstractItemView.DragDropMode'>
    """

    DragOnly: ... = PySide.QtGui.QAbstractItemView.DragDropMode.DragOnly
    """
    """

    DragSelectingState: ...
    """
    PySide.QtGui.QAbstractItemView.State.DragSelectin...
    """

    DraggingState: ... = PySide.QtGui.QAbstractItemView.State.DraggingState
    """
    """

    DropIndicatorPosition: ...
    """
    <type 'PySide.QtGui.QAbstractItemView.DropIndi...
    """

    DropOnly: ... = PySide.QtGui.QAbstractItemView.DragDropMode.DropOnly
    """
    """

    EditKeyPressed: ...
    """
    PySide.QtGui.QAbstractItemView.EditTrigger.EditKeyPre...
    """

    EditTrigger: ...
    """
    <type 'PySide.QtGui.QAbstractItemView.EditTrigger'>
    """

    EditTriggers: ...
    """
    <type 'EditTriggers'>
    """

    EditingState: ... = PySide.QtGui.QAbstractItemView.State.EditingState
    """
    """

    EnsureVisible: ...
    """
    PySide.QtGui.QAbstractItemView.ScrollHint.EnsureVisibl...
    """

    ExpandingState: ... = PySide.QtGui.QAbstractItemView.State.ExpandingState
    """
    """

    ExtendedSelection: ...
    """
    PySide.QtGui.QAbstractItemView.SelectionMode.Exten...
    """

    InternalMove: ...
    """
    PySide.QtGui.QAbstractItemView.DragDropMode.InternalMov...
    """

    MoveDown: ... = PySide.QtGui.QAbstractItemView.CursorAction.MoveDown
    """
    """

    MoveEnd: ... = PySide.QtGui.QAbstractItemView.CursorAction.MoveEnd
    """
    """

    MoveHome: ... = PySide.QtGui.QAbstractItemView.CursorAction.MoveHome
    """
    """

    MoveLeft: ... = PySide.QtGui.QAbstractItemView.CursorAction.MoveLeft
    """
    """

    MoveNext: ... = PySide.QtGui.QAbstractItemView.CursorAction.MoveNext
    """
    """

    MovePageDown: ...
    """
    PySide.QtGui.QAbstractItemView.CursorAction.MovePageDow...
    """

    MovePageUp: ... = PySide.QtGui.QAbstractItemView.CursorAction.MovePageUp
    """
    """

    MovePrevious: ...
    """
    PySide.QtGui.QAbstractItemView.CursorAction.MovePreviou...
    """

    MoveRight: ... = PySide.QtGui.QAbstractItemView.CursorAction.MoveRight
    """
    """

    MoveUp: ... = PySide.QtGui.QAbstractItemView.CursorAction.MoveUp
    """
    """

    MultiSelection: ...
    """
    PySide.QtGui.QAbstractItemView.SelectionMode.MultiSel...
    """

    NoDragDrop: ... = PySide.QtGui.QAbstractItemView.DragDropMode.NoDragDrop
    """
    """

    NoEditTriggers: ...
    """
    PySide.QtGui.QAbstractItemView.EditTrigger.NoEditTrig...
    """

    NoSelection: ... = PySide.QtGui.QAbstractItemView.SelectionMode.NoSelection
    """
    """

    NoState: ... = PySide.QtGui.QAbstractItemView.State.NoState
    """
    """

    OnItem: ... = PySide.QtGui.QAbstractItemView.DropIndicatorPosition.OnItem
    """
    """

    OnViewport: ...
    """
    PySide.QtGui.QAbstractItemView.DropIndicatorPosition.OnVi...
    """

    PositionAtBottom: ...
    """
    PySide.QtGui.QAbstractItemView.ScrollHint.PositionA...
    """

    PositionAtCenter: ...
    """
    PySide.QtGui.QAbstractItemView.ScrollHint.PositionA...
    """

    PositionAtTop: ...
    """
    PySide.QtGui.QAbstractItemView.ScrollHint.PositionAtTo...
    """

    ScrollHint: ...
    """
    <type 'PySide.QtGui.QAbstractItemView.ScrollHint'>
    """

    ScrollMode: ...
    """
    <type 'PySide.QtGui.QAbstractItemView.ScrollMode'>
    """

    ScrollPerItem: ...
    """
    PySide.QtGui.QAbstractItemView.ScrollMode.ScrollPerIte...
    """

    ScrollPerPixel: ...
    """
    PySide.QtGui.QAbstractItemView.ScrollMode.ScrollPerPi...
    """

    SelectColumns: ...
    """
    PySide.QtGui.QAbstractItemView.SelectionBehavior.Selec...
    """

    SelectItems: ...
    """
    PySide.QtGui.QAbstractItemView.SelectionBehavior.SelectI...
    """

    SelectRows: ...
    """
    PySide.QtGui.QAbstractItemView.SelectionBehavior.SelectRo...
    """

    SelectedClicked: ...
    """
    PySide.QtGui.QAbstractItemView.EditTrigger.SelectedC...
    """

    SelectionBehavior: ...
    """
    <type 'PySide.QtGui.QAbstractItemView.SelectionBeh...
    """

    SelectionMode: ...
    """
    <type 'PySide.QtGui.QAbstractItemView.SelectionMode'>
    """

    SingleSelection: ...
    """
    PySide.QtGui.QAbstractItemView.SelectionMode.SingleS...
    """

    State: ...
    """
    <type 'PySide.QtGui.QAbstractItemView.State'>
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    activated: ...
    """
    Signal
    """

    clicked: ...
    """
    Signal
    """

    doubleClicked: ...
    """
    Signal
    """

    entered: ...
    """
    Signal
    """

    pressed: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    viewportEntered: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def alternatingRowColors(self, *args, **kwargs):
        """ """
        ...
    def autoScrollMargin(self, *args, **kwargs):
        """ """
        ...
    def clearSelection(self, *args, **kwargs):
        """ """
        ...
    def closeEditor(self, *args, **kwargs):
        """ """
        ...
    def closePersistentEditor(self, *args, **kwargs):
        """ """
        ...
    def commitData(self, *args, **kwargs):
        """ """
        ...
    def currentChanged(self, *args, **kwargs):
        """ """
        ...
    def currentIndex(self, *args, **kwargs):
        """ """
        ...
    def dataChanged(self, *args, **kwargs):
        """ """
        ...
    def defaultDropAction(self, *args, **kwargs):
        """ """
        ...
    def dirtyRegionOffset(self, *args, **kwargs):
        """ """
        ...
    def doAutoScroll(self, *args, **kwargs):
        """ """
        ...
    def doItemsLayout(self, *args, **kwargs):
        """ """
        ...
    def dragDropMode(self, *args, **kwargs):
        """ """
        ...
    def dragDropOverwriteMode(self, *args, **kwargs):
        """ """
        ...
    def dragEnabled(self, *args, **kwargs):
        """ """
        ...
    def dragEnterEvent(self, *args, **kwargs):
        """ """
        ...
    def dragLeaveEvent(self, *args, **kwargs):
        """ """
        ...
    def dragMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def dropEvent(self, *args, **kwargs):
        """ """
        ...
    def dropIndicatorPosition(self, *args, **kwargs):
        """ """
        ...
    def edit(self, *args, **kwargs):
        """ """
        ...
    def editTriggers(self, *args, **kwargs):
        """ """
        ...
    def editorDestroyed(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def executeDelayedItemsLayout(self, *args, **kwargs):
        """ """
        ...
    def focusInEvent(self, *args, **kwargs):
        """ """
        ...
    def focusNextPrevChild(self, *args, **kwargs):
        """ """
        ...
    def focusOutEvent(self, *args, **kwargs):
        """ """
        ...
    def hasAutoScroll(self, *args, **kwargs):
        """ """
        ...
    def horizontalOffset(self, *args, **kwargs):
        """ """
        ...
    def horizontalScrollMode(self, *args, **kwargs):
        """ """
        ...
    def horizontalScrollbarAction(self, *args, **kwargs):
        """ """
        ...
    def horizontalScrollbarValueChanged(self, *args, **kwargs):
        """ """
        ...
    def iconSize(self, *args, **kwargs):
        """ """
        ...
    def indexAt(self, *args, **kwargs):
        """ """
        ...
    def indexWidget(self, *args, **kwargs):
        """ """
        ...
    def inputMethodEvent(self, *args, **kwargs):
        """ """
        ...
    def inputMethodQuery(self, *args, **kwargs):
        """ """
        ...
    def isIndexHidden(self, *args, **kwargs):
        """ """
        ...
    def itemDelegate(self, *args, **kwargs):
        """ """
        ...
    def itemDelegateForColumn(self, *args, **kwargs):
        """ """
        ...
    def itemDelegateForRow(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def keyboardSearch(self, *args, **kwargs):
        """ """
        ...
    def model(self, *args, **kwargs):
        """ """
        ...
    def mouseDoubleClickEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def moveCursor(self, *args, **kwargs):
        """ """
        ...
    def openPersistentEditor(self, *args, **kwargs):
        """ """
        ...
    def reset(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def rootIndex(self, *args, **kwargs):
        """ """
        ...
    def rowsAboutToBeRemoved(self, *args, **kwargs):
        """ """
        ...
    def rowsInserted(self, *args, **kwargs):
        """ """
        ...
    def scheduleDelayedItemsLayout(self, *args, **kwargs):
        """ """
        ...
    def scrollDirtyRegion(self, *args, **kwargs):
        """ """
        ...
    def scrollTo(self, *args, **kwargs):
        """ """
        ...
    def scrollToBottom(self, *args, **kwargs):
        """ """
        ...
    def scrollToTop(self, *args, **kwargs):
        """ """
        ...
    def selectAll(self, *args, **kwargs):
        """ """
        ...
    def selectedIndexes(self, *args, **kwargs):
        """ """
        ...
    def selectionBehavior(self, *args, **kwargs):
        """ """
        ...
    def selectionChanged(self, *args, **kwargs):
        """ """
        ...
    def selectionCommand(self, *args, **kwargs):
        """ """
        ...
    def selectionMode(self, *args, **kwargs):
        """ """
        ...
    def selectionModel(self, *args, **kwargs):
        """ """
        ...
    def setAlternatingRowColors(self, *args, **kwargs):
        """ """
        ...
    def setAutoScroll(self, *args, **kwargs):
        """ """
        ...
    def setAutoScrollMargin(self, *args, **kwargs):
        """ """
        ...
    def setCurrentIndex(self, *args, **kwargs):
        """ """
        ...
    def setDefaultDropAction(self, *args, **kwargs):
        """ """
        ...
    def setDirtyRegion(self, *args, **kwargs):
        """ """
        ...
    def setDragDropMode(self, *args, **kwargs):
        """ """
        ...
    def setDragDropOverwriteMode(self, *args, **kwargs):
        """ """
        ...
    def setDragEnabled(self, *args, **kwargs):
        """ """
        ...
    def setDropIndicatorShown(self, *args, **kwargs):
        """ """
        ...
    def setEditTriggers(self, *args, **kwargs):
        """ """
        ...
    def setHorizontalScrollMode(self, *args, **kwargs):
        """ """
        ...
    def setIconSize(self, *args, **kwargs):
        """ """
        ...
    def setIndexWidget(self, *args, **kwargs):
        """ """
        ...
    def setItemDelegate(self, *args, **kwargs):
        """ """
        ...
    def setItemDelegateForColumn(self, *args, **kwargs):
        """ """
        ...
    def setItemDelegateForRow(self, *args, **kwargs):
        """ """
        ...
    def setModel(self, *args, **kwargs):
        """ """
        ...
    def setRootIndex(self, *args, **kwargs):
        """ """
        ...
    def setSelection(self, *args, **kwargs):
        """ """
        ...
    def setSelectionBehavior(self, *args, **kwargs):
        """ """
        ...
    def setSelectionMode(self, *args, **kwargs):
        """ """
        ...
    def setSelectionModel(self, *args, **kwargs):
        """ """
        ...
    def setState(self, *args, **kwargs):
        """ """
        ...
    def setTabKeyNavigation(self, *args, **kwargs):
        """ """
        ...
    def setTextElideMode(self, *args, **kwargs):
        """ """
        ...
    def setVerticalScrollMode(self, *args, **kwargs):
        """ """
        ...
    def showDropIndicator(self, *args, **kwargs):
        """ """
        ...
    def sizeHintForColumn(self, *args, **kwargs):
        """ """
        ...
    def sizeHintForIndex(self, *args, **kwargs):
        """ """
        ...
    def sizeHintForRow(self, *args, **kwargs):
        """ """
        ...
    def startAutoScroll(self, *args, **kwargs):
        """ """
        ...
    def startDrag(self, *args, **kwargs):
        """ """
        ...
    def state(self, *args, **kwargs):
        """ """
        ...
    def stopAutoScroll(self, *args, **kwargs):
        """ """
        ...
    def tabKeyNavigation(self, *args, **kwargs):
        """ """
        ...
    def textElideMode(self, *args, **kwargs):
        """ """
        ...
    def timerEvent(self, *args, **kwargs):
        """ """
        ...
    def update(self, *args, **kwargs):
        """ """
        ...
    def updateEditorData(self, *args, **kwargs):
        """ """
        ...
    def updateEditorGeometries(self, *args, **kwargs):
        """ """
        ...
    def updateGeometries(self, *args, **kwargs):
        """ """
        ...
    def verticalOffset(self, *args, **kwargs):
        """ """
        ...
    def verticalScrollMode(self, *args, **kwargs):
        """ """
        ...
    def verticalScrollbarAction(self, *args, **kwargs):
        """ """
        ...
    def verticalScrollbarValueChanged(self, *args, **kwargs):
        """ """
        ...
    def viewOptions(self, *args, **kwargs):
        """ """
        ...
    def viewportEvent(self, *args, **kwargs):
        """ """
        ...
    def visualRect(self, *args, **kwargs):
        """ """
        ...
    def visualRegionForSelection(self, *args, **kwargs):
        """ """
        ...
    ...

class QAbstractScrollArea(QFrame):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addScrollBarWidget(self, *args, **kwargs):
        """ """
        ...
    def contextMenuEvent(self, *args, **kwargs):
        """ """
        ...
    def cornerWidget(self, *args, **kwargs):
        """ """
        ...
    def dragEnterEvent(self, *args, **kwargs):
        """ """
        ...
    def dragLeaveEvent(self, *args, **kwargs):
        """ """
        ...
    def dragMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def dropEvent(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def horizontalScrollBar(self, *args, **kwargs):
        """ """
        ...
    def horizontalScrollBarPolicy(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def maximumViewportSize(self, *args, **kwargs):
        """ """
        ...
    def minimumSizeHint(self, *args, **kwargs):
        """ """
        ...
    def mouseDoubleClickEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def scrollBarWidgets(self, *args, **kwargs):
        """ """
        ...
    def scrollContentsBy(self, *args, **kwargs):
        """ """
        ...
    def setCornerWidget(self, *args, **kwargs):
        """ """
        ...
    def setHorizontalScrollBar(self, *args, **kwargs):
        """ """
        ...
    def setHorizontalScrollBarPolicy(self, *args, **kwargs):
        """ """
        ...
    def setVerticalScrollBar(self, *args, **kwargs):
        """ """
        ...
    def setVerticalScrollBarPolicy(self, *args, **kwargs):
        """ """
        ...
    def setViewport(self, *args, **kwargs):
        """ """
        ...
    def setViewportMargins(self, *args, **kwargs):
        """ """
        ...
    def setupViewport(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def verticalScrollBar(self, *args, **kwargs):
        """ """
        ...
    def verticalScrollBarPolicy(self, *args, **kwargs):
        """ """
        ...
    def viewport(self, *args, **kwargs):
        """ """
        ...
    def viewportEvent(self, *args, **kwargs):
        """ """
        ...
    def wheelEvent(self, *args, **kwargs):
        """ """
        ...
    ...

class QAbstractSlider(QWidget):
    SliderAction: ...
    """
    <type 'PySide.QtGui.QAbstractSlider.SliderAction'>
    """

    SliderChange: ...
    """
    <type 'PySide.QtGui.QAbstractSlider.SliderChange'>
    """

    SliderMove: ... = PySide.QtGui.QAbstractSlider.SliderAction.SliderMove
    """
    """

    SliderNoAction: ...
    """
    PySide.QtGui.QAbstractSlider.SliderAction.SliderNoAct...
    """

    SliderOrientationChange: ...
    """
    PySide.QtGui.QAbstractSlider.SliderChange.Sl...
    """

    SliderPageStepAdd: ...
    """
    PySide.QtGui.QAbstractSlider.SliderAction.SliderPa...
    """

    SliderPageStepSub: ...
    """
    PySide.QtGui.QAbstractSlider.SliderAction.SliderPa...
    """

    SliderRangeChange: ...
    """
    PySide.QtGui.QAbstractSlider.SliderChange.SliderRa...
    """

    SliderSingleStepAdd: ...
    """
    PySide.QtGui.QAbstractSlider.SliderAction.Slider...
    """

    SliderSingleStepSub: ...
    """
    PySide.QtGui.QAbstractSlider.SliderAction.Slider...
    """

    SliderStepsChange: ...
    """
    PySide.QtGui.QAbstractSlider.SliderChange.SliderSt...
    """

    SliderToMaximum: ...
    """
    PySide.QtGui.QAbstractSlider.SliderAction.SliderToMa...
    """

    SliderToMinimum: ...
    """
    PySide.QtGui.QAbstractSlider.SliderAction.SliderToMi...
    """

    SliderValueChange: ...
    """
    PySide.QtGui.QAbstractSlider.SliderChange.SliderVa...
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    actionTriggered: ...
    """
    Signal
    """

    rangeChanged: ...
    """
    Signal
    """

    sliderMoved: ...
    """
    Signal
    """

    sliderPressed: ...
    """
    Signal
    """

    sliderReleased: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    valueChanged: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def hasTracking(self, *args, **kwargs):
        """ """
        ...
    def invertedAppearance(self, *args, **kwargs):
        """ """
        ...
    def invertedControls(self, *args, **kwargs):
        """ """
        ...
    def isSliderDown(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def maximum(self, *args, **kwargs):
        """ """
        ...
    def minimum(self, *args, **kwargs):
        """ """
        ...
    def orientation(self, *args, **kwargs):
        """ """
        ...
    def pageStep(self, *args, **kwargs):
        """ """
        ...
    def repeatAction(self, *args, **kwargs):
        """ """
        ...
    def setInvertedAppearance(self, *args, **kwargs):
        """ """
        ...
    def setInvertedControls(self, *args, **kwargs):
        """ """
        ...
    def setMaximum(self, *args, **kwargs):
        """ """
        ...
    def setMinimum(self, *args, **kwargs):
        """ """
        ...
    def setOrientation(self, *args, **kwargs):
        """ """
        ...
    def setPageStep(self, *args, **kwargs):
        """ """
        ...
    def setRange(self, *args, **kwargs):
        """ """
        ...
    def setRepeatAction(self, *args, **kwargs):
        """ """
        ...
    def setSingleStep(self, *args, **kwargs):
        """ """
        ...
    def setSliderDown(self, *args, **kwargs):
        """ """
        ...
    def setSliderPosition(self, *args, **kwargs):
        """ """
        ...
    def setTracking(self, *args, **kwargs):
        """ """
        ...
    def setValue(self, *args, **kwargs):
        """ """
        ...
    def singleStep(self, *args, **kwargs):
        """ """
        ...
    def sliderChange(self, *args, **kwargs):
        """ """
        ...
    def sliderPosition(self, *args, **kwargs):
        """ """
        ...
    def timerEvent(self, *args, **kwargs):
        """ """
        ...
    def triggerAction(self, *args, **kwargs):
        """ """
        ...
    def value(self, *args, **kwargs):
        """ """
        ...
    def wheelEvent(self, *args, **kwargs):
        """ """
        ...
    ...

class QAbstractSpinBox(QWidget):
    ButtonSymbols: ...
    """
    <type 'PySide.QtGui.QAbstractSpinBox.ButtonSymbols'>
    """

    CorrectToNearestValue: ...
    """
    PySide.QtGui.QAbstractSpinBox.CorrectionMode.C...
    """

    CorrectToPreviousValue: ...
    """
    PySide.QtGui.QAbstractSpinBox.CorrectionMode....
    """

    CorrectionMode: ...
    """
    <type 'PySide.QtGui.QAbstractSpinBox.CorrectionMode'>
    """

    NoButtons: ... = PySide.QtGui.QAbstractSpinBox.ButtonSymbols.NoButtons
    """
    """

    PlusMinus: ... = PySide.QtGui.QAbstractSpinBox.ButtonSymbols.PlusMinus
    """
    """

    StepDownEnabled: ...
    """
    PySide.QtGui.QAbstractSpinBox.StepEnabledFlag.StepDo...
    """

    StepEnabled: ...
    """
    <type 'StepEnabled'>
    """

    StepEnabledFlag: ...
    """
    <type 'PySide.QtGui.QAbstractSpinBox.StepEnabledFlag...
    """

    StepNone: ... = PySide.QtGui.QAbstractSpinBox.StepEnabledFlag.StepNone
    """
    """

    StepUpEnabled: ...
    """
    PySide.QtGui.QAbstractSpinBox.StepEnabledFlag.StepUpEn...
    """

    UpDownArrows: ...
    """
    PySide.QtGui.QAbstractSpinBox.ButtonSymbols.UpDownArrow...
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    editingFinished: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def alignment(self, *args, **kwargs):
        """ """
        ...
    def buttonSymbols(self, *args, **kwargs):
        """ """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def clear(self, *args, **kwargs):
        """ """
        ...
    def closeEvent(self, *args, **kwargs):
        """ """
        ...
    def contextMenuEvent(self, *args, **kwargs):
        """ """
        ...
    def correctionMode(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def fixup(self, *args, **kwargs):
        """ """
        ...
    def focusInEvent(self, *args, **kwargs):
        """ """
        ...
    def focusOutEvent(self, *args, **kwargs):
        """ """
        ...
    def hasAcceptableInput(self, *args, **kwargs):
        """ """
        ...
    def hasFrame(self, *args, **kwargs):
        """ """
        ...
    def hideEvent(self, *args, **kwargs):
        """ """
        ...
    def initStyleOption(self, *args, **kwargs):
        """ """
        ...
    def inputMethodQuery(self, *args, **kwargs):
        """ """
        ...
    def interpretText(self, *args, **kwargs):
        """ """
        ...
    def isAccelerated(self, *args, **kwargs):
        """ """
        ...
    def isReadOnly(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def keyReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def keyboardTracking(self, *args, **kwargs):
        """ """
        ...
    def lineEdit(self, *args, **kwargs):
        """ """
        ...
    def minimumSizeHint(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def selectAll(self, *args, **kwargs):
        """ """
        ...
    def setAccelerated(self, *args, **kwargs):
        """ """
        ...
    def setAlignment(self, *args, **kwargs):
        """ """
        ...
    def setButtonSymbols(self, *args, **kwargs):
        """ """
        ...
    def setCorrectionMode(self, *args, **kwargs):
        """ """
        ...
    def setFrame(self, *args, **kwargs):
        """ """
        ...
    def setKeyboardTracking(self, *args, **kwargs):
        """ """
        ...
    def setLineEdit(self, *args, **kwargs):
        """ """
        ...
    def setReadOnly(self, *args, **kwargs):
        """ """
        ...
    def setSpecialValueText(self, *args, **kwargs):
        """ """
        ...
    def setWrapping(self, *args, **kwargs):
        """ """
        ...
    def showEvent(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def specialValueText(self, *args, **kwargs):
        """ """
        ...
    def stepBy(self, *args, **kwargs):
        """ """
        ...
    def stepDown(self, *args, **kwargs):
        """ """
        ...
    def stepEnabled(self, *args, **kwargs):
        """ """
        ...
    def stepUp(self, *args, **kwargs):
        """ """
        ...
    def text(self, *args, **kwargs):
        """ """
        ...
    def timerEvent(self, *args, **kwargs):
        """ """
        ...
    def validate(self, *args, **kwargs):
        """ """
        ...
    def wheelEvent(self, *args, **kwargs):
        """ """
        ...
    def wrapping(self, *args, **kwargs):
        """ """
        ...
    ...

class QAction(QtCore.QObject):
    AboutQtRole: ... = PySide.QtGui.QAction.MenuRole.AboutQtRole
    """
    """

    AboutRole: ... = PySide.QtGui.QAction.MenuRole.AboutRole
    """
    """

    ActionEvent: ...
    """
    <type 'PySide.QtGui.QAction.ActionEvent'>
    """

    ApplicationSpecificRole: ...
    """
    PySide.QtGui.QAction.MenuRole.ApplicationSpe...
    """

    HighPriority: ... = PySide.QtGui.QAction.Priority.HighPriority
    """
    """

    Hover: ... = PySide.QtGui.QAction.ActionEvent.Hover
    """
    """

    LowPriority: ... = PySide.QtGui.QAction.Priority.LowPriority
    """
    """

    MenuRole: ...
    """
    <type 'PySide.QtGui.QAction.MenuRole'>
    """

    NegativeSoftKey: ... = PySide.QtGui.QAction.SoftKeyRole.NegativeSoftKey
    """
    """

    NoRole: ... = PySide.QtGui.QAction.MenuRole.NoRole
    """
    """

    NoSoftKey: ... = PySide.QtGui.QAction.SoftKeyRole.NoSoftKey
    """
    """

    NormalPriority: ... = PySide.QtGui.QAction.Priority.NormalPriority
    """
    """

    PositiveSoftKey: ... = PySide.QtGui.QAction.SoftKeyRole.PositiveSoftKey
    """
    """

    PreferencesRole: ... = PySide.QtGui.QAction.MenuRole.PreferencesRole
    """
    """

    Priority: ...
    """
    <type 'PySide.QtGui.QAction.Priority'>
    """

    QuitRole: ... = PySide.QtGui.QAction.MenuRole.QuitRole
    """
    """

    SelectSoftKey: ... = PySide.QtGui.QAction.SoftKeyRole.SelectSoftKey
    """
    """

    SoftKeyRole: ...
    """
    <type 'PySide.QtGui.QAction.SoftKeyRole'>
    """

    TextHeuristicRole: ... = PySide.QtGui.QAction.MenuRole.TextHeuristicRole
    """
    """

    Trigger: ... = PySide.QtGui.QAction.ActionEvent.Trigger
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    activated: ...
    """
    Signal
    """

    changed: ...
    """
    Signal
    """

    hovered: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    toggled: QtCore.Signal
    """
    Signal
    """

    triggered: QtCore.Signal
    """
    Signal
    """
    @typing.overload
    def __init__(self, parent: typing.Optional[QtCore.QObject] = None, /): ...
    @typing.overload
    def __init__(
        self,
        icon: QtGui.QIcon,
        text: typing.Text,
        parent: typing.Optional[QtCore.QObject] = None,
        /,
    ): ...
    @typing.overload
    def __init__(
        self, text: typing.Text, parent: typing.Optional[QtCore.QObject] = None, /
    ):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def actionGroup(self, *args, **kwargs):
        """ """
        ...
    def activate(self, *args, **kwargs):
        """ """
        ...
    def associatedGraphicsWidgets(self, *args, **kwargs):
        """ """
        ...
    def associatedWidgets(self, *args, **kwargs):
        """ """
        ...
    def autoRepeat(self, *args, **kwargs):
        """ """
        ...
    def data(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def font(self, *args, **kwargs):
        """ """
        ...
    def hover(self, *args, **kwargs):
        """ """
        ...
    def icon(self, *args, **kwargs):
        """ """
        ...
    def iconText(self, *args, **kwargs):
        """ """
        ...
    def isCheckable(self, *args, **kwargs):
        """ """
        ...
    def isChecked(self, *args, **kwargs):
        """ """
        ...
    def isEnabled(self, *args, **kwargs):
        """ """
        ...
    def isIconVisibleInMenu(self, *args, **kwargs):
        """ """
        ...
    def isSeparator(self, *args, **kwargs):
        """ """
        ...
    def isVisible(self, *args, **kwargs):
        """ """
        ...
    def menu(self, *args, **kwargs):
        """ """
        ...
    def menuRole(self, *args, **kwargs):
        """ """
        ...
    def parentWidget(self, *args, **kwargs):
        """ """
        ...
    def priority(self, *args, **kwargs):
        """ """
        ...
    def setActionGroup(self, *args, **kwargs):
        """ """
        ...
    def setAutoRepeat(self, *args, **kwargs):
        """ """
        ...
    def setCheckable(self, *args, **kwargs):
        """ """
        ...
    def setChecked(self, *args, **kwargs):
        """ """
        ...
    def setData(self, *args, **kwargs):
        """ """
        ...
    def setDisabled(self, b: bool) -> None:
        """ """
        ...
    def setEnabled(self, b: bool) -> None:
        """ """
        ...
    def setFont(self, *args, **kwargs):
        """ """
        ...
    def setIcon(self, *args, **kwargs):
        """ """
        ...
    def setIconText(self, *args, **kwargs):
        """ """
        ...
    def setIconVisibleInMenu(self, *args, **kwargs):
        """ """
        ...
    def setMenu(self, *args, **kwargs):
        """ """
        ...
    def setMenuRole(self, *args, **kwargs):
        """ """
        ...
    def setPriority(self, *args, **kwargs):
        """ """
        ...
    def setSeparator(self, *args, **kwargs):
        """ """
        ...
    def setShortcut(self,shortcut: QtGui.QKeySequence) -> None:
        """ """
        ...
    def setShortcutContext(self, *args, **kwargs):
        """ """
        ...
    def setShortcuts(self, *args, **kwargs):
        """ """
        ...
    def setSoftKeyRole(self, *args, **kwargs):
        """ """
        ...
    def setStatusTip(self, *args, **kwargs):
        """ """
        ...
    def setText(self, *args, **kwargs):
        """ """
        ...
    def setToolTip(self, *args, **kwargs):
        """ """
        ...
    def setVisible(self, *args, **kwargs):
        """ """
        ...
    def setWhatsThis(self, *args, **kwargs):
        """ """
        ...
    def shortcut(self, *args, **kwargs):
        """ """
        ...
    def shortcutContext(self, *args, **kwargs):
        """ """
        ...
    def shortcuts(self, *args, **kwargs):
        """ """
        ...
    def showStatusText(self, *args, **kwargs):
        """ """
        ...
    def softKeyRole(self, *args, **kwargs):
        """ """
        ...
    def statusTip(self, *args, **kwargs):
        """ """
        ...
    def text(self) -> typing.Text:
        """ """
        ...
    def toggle(self, *args, **kwargs):
        """ """
        ...
    def toolTip(self, *args, **kwargs):
        """ """
        ...
    def trigger(self, *args, **kwargs):
        """ """
        ...
    def whatsThis(self, *args, **kwargs):
        """ """
        ...
    ...

class QActionGroup(PySide.QtCore.QObject):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    hovered: ...
    """
    Signal
    """

    selected: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    triggered: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def actions(self, *args, **kwargs):
        """ """
        ...
    def addAction(self, *args, **kwargs):
        """ """
        ...
    def checkedAction(self, *args, **kwargs):
        """ """
        ...
    def isEnabled(self, *args, **kwargs):
        """ """
        ...
    def isExclusive(self, *args, **kwargs):
        """ """
        ...
    def isVisible(self, *args, **kwargs):
        """ """
        ...
    def removeAction(self, *args, **kwargs):
        """ """
        ...
    def setDisabled(self, *args, **kwargs):
        """ """
        ...
    def setEnabled(self, *args, **kwargs):
        """ """
        ...
    def setExclusive(self, *args, **kwargs):
        """ """
        ...
    def setVisible(self, *args, **kwargs):
        """ """
        ...
    ...

class QApplication(QtCore.QCoreApplication):
    ColorSpec: ...
    """
    <type 'PySide.QtGui.QApplication.ColorSpec'>
    """

    CustomColor: ... = PySide.QtGui.QApplication.ColorSpec.CustomColor
    """
    """

    GuiClient: ... = PySide.QtGui.QApplication.Type.GuiClient
    """
    """

    GuiServer: ... = PySide.QtGui.QApplication.Type.GuiServer
    """
    """

    ManyColor: ... = PySide.QtGui.QApplication.ColorSpec.ManyColor
    """
    """

    NormalColor: ... = PySide.QtGui.QApplication.ColorSpec.NormalColor
    """
    """

    Tty: ... = PySide.QtGui.QApplication.Type.Tty
    """
    """

    Type: ...
    """
    <type 'PySide.QtGui.QApplication.Type'>
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    commitDataRequest: ...
    """
    Signal
    """

    focusChanged: ...
    """
    Signal
    """

    fontDatabaseChanged: ...
    """
    Signal
    """

    lastWindowClosed: ...
    """
    Signal
    """

    saveStateRequest: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    @staticmethod
    def aboutQt(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def activeModalWidget(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def activePopupWidget(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def activeWindow(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def alert(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def allWidgets(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def beep(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def changeOverrideCursor(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def clipboard(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def closeAllWindows(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def colorSpec(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def cursorFlashTime(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def desktop(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def desktopSettingsAware(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def doubleClickInterval(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def exec_(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def focusWidget(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def font(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def fontMetrics(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def globalStrut(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def isEffectEnabled(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def isLeftToRight(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def isRightToLeft(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def keyboardInputDirection(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def keyboardInputInterval(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def keyboardInputLocale(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def keyboardModifiers(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def layoutDirection(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def mouseButtons(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def overrideCursor(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def palette(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def queryKeyboardModifiers(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def quitOnLastWindowClosed(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def restoreOverrideCursor(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setActiveWindow(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setColorSpec(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setCursorFlashTime(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setDesktopSettingsAware(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setDoubleClickInterval(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setEffectEnabled(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setFont(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setGlobalStrut(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setGraphicsSystem(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setKeyboardInputInterval(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setLayoutDirection(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setOverrideCursor(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setPalette(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setQuitOnLastWindowClosed(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setStartDragDistance(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setStartDragTime(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setStyle(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setWheelScrollLines(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setWindowIcon(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def startDragDistance(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def startDragTime(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def style(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def syncX(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def topLevelAt(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def topLevelWidgets(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def type(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def wheelScrollLines(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def widgetAt(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def winMouseButtonUp(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def windowIcon(*args, **kwargs):
        """ """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def autoSipEnabled(self, *args, **kwargs):
        """ """
        ...
    def commitData(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def inputContext(self, *args, **kwargs):
        """ """
        ...
    def isSessionRestored(self, *args, **kwargs):
        """ """
        ...
    def notify(self, *args, **kwargs):
        """ """
        ...
    def saveState(self, *args, **kwargs):
        """ """
        ...
    def sessionId(self, *args, **kwargs):
        """ """
        ...
    def sessionKey(self, *args, **kwargs):
        """ """
        ...
    def setAutoSipEnabled(self, *args, **kwargs):
        """ """
        ...
    def setInputContext(self, *args, **kwargs):
        """ """
        ...
    def setStyleSheet(self, *args, **kwargs):
        """ """
        ...
    def styleSheet(self, *args, **kwargs):
        """ """
        ...
    def winFocus(self, *args, **kwargs):
        """ """
        ...
    ...

class QBoxLayout(QLayout):
    BottomToTop: ... = PySide.QtGui.QBoxLayout.Direction.BottomToTop
    """
    """

    Direction: ...
    """
    <type 'PySide.QtGui.QBoxLayout.Direction'>
    """

    Down: ... = PySide.QtGui.QBoxLayout.Direction.Down
    """
    """

    LeftToRight: ... = PySide.QtGui.QBoxLayout.Direction.LeftToRight
    """
    """

    RightToLeft: ... = PySide.QtGui.QBoxLayout.Direction.RightToLeft
    """
    """

    TopToBottom: ... = PySide.QtGui.QBoxLayout.Direction.TopToBottom
    """
    """

    Up: ... = PySide.QtGui.QBoxLayout.Direction.Up
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addItem(self, *args, **kwargs):
        """ """
        ...
    def addLayout(self, *args, **kwargs):
        """ """
        ...
    def addSpacerItem(self, *args, **kwargs):
        """ """
        ...
    def addSpacing(self, *args, **kwargs):
        """ """
        ...
    def addStretch(self, *args, **kwargs):
        """ """
        ...
    def addStrut(self, *args, **kwargs):
        """ """
        ...
    def addWidget(self, *args, **kwargs):
        """ """
        ...
    def count(self, *args, **kwargs):
        """ """
        ...
    def direction(self, *args, **kwargs):
        """ """
        ...
    def expandingDirections(self, *args, **kwargs):
        """ """
        ...
    def hasHeightForWidth(self, *args, **kwargs):
        """ """
        ...
    def heightForWidth(self, *args, **kwargs):
        """ """
        ...
    def insertItem(self, *args, **kwargs):
        """ """
        ...
    def insertLayout(self, *args, **kwargs):
        """ """
        ...
    def insertSpacerItem(self, *args, **kwargs):
        """ """
        ...
    def insertSpacing(self, *args, **kwargs):
        """ """
        ...
    def insertStretch(self, *args, **kwargs):
        """ """
        ...
    def insertWidget(self, *args, **kwargs):
        """ """
        ...
    def invalidate(self, *args, **kwargs):
        """ """
        ...
    def itemAt(self, *args, **kwargs):
        """ """
        ...
    def maximumSize(self, *args, **kwargs):
        """ """
        ...
    def minimumHeightForWidth(self, *args, **kwargs):
        """ """
        ...
    def minimumSize(self, *args, **kwargs):
        """ """
        ...
    def setDirection(self, *args, **kwargs):
        """ """
        ...
    def setGeometry(self, *args, **kwargs):
        """ """
        ...
    def setSpacing(self, *args, **kwargs):
        """ """
        ...
    def setStretch(self, *args, **kwargs):
        """ """
        ...
    def setStretchFactor(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def spacing(self, *args, **kwargs):
        """ """
        ...
    def stretch(self, *args, **kwargs):
        """ """
        ...
    def takeAt(self, *args, **kwargs):
        """ """
        ...
    ...

class QButtonGroup(PySide.QtCore.QObject):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    buttonClicked: ...
    """
    Signal
    """

    buttonPressed: ...
    """
    Signal
    """

    buttonReleased: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addButton(self, *args, **kwargs):
        """ """
        ...
    def button(self, *args, **kwargs):
        """ """
        ...
    def buttons(self, *args, **kwargs):
        """ """
        ...
    def checkedButton(self, *args, **kwargs):
        """ """
        ...
    def checkedId(self, *args, **kwargs):
        """ """
        ...
    def exclusive(self, *args, **kwargs):
        """ """
        ...
    def id(self, *args, **kwargs):
        """ """
        ...
    def removeButton(self, *args, **kwargs):
        """ """
        ...
    def setExclusive(self, *args, **kwargs):
        """ """
        ...
    def setId(self, *args, **kwargs):
        """ """
        ...
    ...

class QCalendarWidget(QWidget):
    HorizontalHeaderFormat: ...
    """
    <type 'PySide.QtGui.QCalendarWidget.Horizonta...
    """

    ISOWeekNumbers: ...
    """
    PySide.QtGui.QCalendarWidget.VerticalHeaderFormat.ISO...
    """

    LongDayNames: ...
    """
    PySide.QtGui.QCalendarWidget.HorizontalHeaderFormat.Lon...
    """

    NoHorizontalHeader: ...
    """
    PySide.QtGui.QCalendarWidget.HorizontalHeaderForm...
    """

    NoSelection: ... = PySide.QtGui.QCalendarWidget.SelectionMode.NoSelection
    """
    """

    NoVerticalHeader: ...
    """
    PySide.QtGui.QCalendarWidget.VerticalHeaderFormat.N...
    """

    SelectionMode: ...
    """
    <type 'PySide.QtGui.QCalendarWidget.SelectionMode'>
    """

    ShortDayNames: ...
    """
    PySide.QtGui.QCalendarWidget.HorizontalHeaderFormat.Sh...
    """

    SingleLetterDayNames: ...
    """
    PySide.QtGui.QCalendarWidget.HorizontalHeaderFo...
    """

    SingleSelection: ...
    """
    PySide.QtGui.QCalendarWidget.SelectionMode.SingleSel...
    """

    VerticalHeaderFormat: ...
    """
    <type 'PySide.QtGui.QCalendarWidget.VerticalHea...
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    activated: ...
    """
    Signal
    """

    clicked: ...
    """
    Signal
    """

    currentPageChanged: ...
    """
    Signal
    """

    selectionChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def dateEditAcceptDelay(self, *args, **kwargs):
        """ """
        ...
    def dateTextFormat(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def eventFilter(self, *args, **kwargs):
        """ """
        ...
    def firstDayOfWeek(self, *args, **kwargs):
        """ """
        ...
    def headerTextFormat(self, *args, **kwargs):
        """ """
        ...
    def horizontalHeaderFormat(self, *args, **kwargs):
        """ """
        ...
    def isDateEditEnabled(self, *args, **kwargs):
        """ """
        ...
    def isGridVisible(self, *args, **kwargs):
        """ """
        ...
    def isNavigationBarVisible(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def maximumDate(self, *args, **kwargs):
        """ """
        ...
    def minimumDate(self, *args, **kwargs):
        """ """
        ...
    def minimumSizeHint(self, *args, **kwargs):
        """ """
        ...
    def monthShown(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def paintCell(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def selectedDate(self, *args, **kwargs):
        """ """
        ...
    def selectionMode(self, *args, **kwargs):
        """ """
        ...
    def setCurrentPage(self, *args, **kwargs):
        """ """
        ...
    def setDateEditAcceptDelay(self, *args, **kwargs):
        """ """
        ...
    def setDateEditEnabled(self, *args, **kwargs):
        """ """
        ...
    def setDateRange(self, *args, **kwargs):
        """ """
        ...
    def setDateTextFormat(self, *args, **kwargs):
        """ """
        ...
    def setFirstDayOfWeek(self, *args, **kwargs):
        """ """
        ...
    def setGridVisible(self, *args, **kwargs):
        """ """
        ...
    def setHeaderTextFormat(self, *args, **kwargs):
        """ """
        ...
    def setHorizontalHeaderFormat(self, *args, **kwargs):
        """ """
        ...
    def setMaximumDate(self, *args, **kwargs):
        """ """
        ...
    def setMinimumDate(self, *args, **kwargs):
        """ """
        ...
    def setNavigationBarVisible(self, *args, **kwargs):
        """ """
        ...
    def setSelectedDate(self, *args, **kwargs):
        """ """
        ...
    def setSelectionMode(self, *args, **kwargs):
        """ """
        ...
    def setVerticalHeaderFormat(self, *args, **kwargs):
        """ """
        ...
    def setWeekdayTextFormat(self, *args, **kwargs):
        """ """
        ...
    def showNextMonth(self, *args, **kwargs):
        """ """
        ...
    def showNextYear(self, *args, **kwargs):
        """ """
        ...
    def showPreviousMonth(self, *args, **kwargs):
        """ """
        ...
    def showPreviousYear(self, *args, **kwargs):
        """ """
        ...
    def showSelectedDate(self, *args, **kwargs):
        """ """
        ...
    def showToday(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def updateCell(self, *args, **kwargs):
        """ """
        ...
    def updateCells(self, *args, **kwargs):
        """ """
        ...
    def verticalHeaderFormat(self, *args, **kwargs):
        """ """
        ...
    def weekdayTextFormat(self, *args, **kwargs):
        """ """
        ...
    def yearShown(self, *args, **kwargs):
        """ """
        ...
    ...

class QCheckBox(QAbstractButton):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    stateChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def checkState(self, *args, **kwargs):
        """ """
        ...
    def checkStateSet(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def hitButton(self, *args, **kwargs):
        """ """
        ...
    def initStyleOption(self, *args, **kwargs):
        """ """
        ...
    def isTristate(self, *args, **kwargs):
        """ """
        ...
    def minimumSizeHint(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def nextCheckState(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def setCheckState(self, *args, **kwargs):
        """ """
        ...
    def setTristate(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    ...

class QColorDialog(QDialog):
    ColorDialogOption: ...
    """
    <type 'PySide.QtGui.QColorDialog.ColorDialogOption...
    """

    ColorDialogOptions: ...
    """
    <type 'ColorDialogOptions'>
    """

    DontUseNativeDialog: ...
    """
    PySide.QtGui.QColorDialog.ColorDialogOption.Dont...
    """

    NoButtons: ... = PySide.QtGui.QColorDialog.ColorDialogOption.NoButtons
    """
    """

    ShowAlphaChannel: ...
    """
    PySide.QtGui.QColorDialog.ColorDialogOption.ShowAlp...
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    colorSelected: ...
    """
    Signal
    """

    currentColorChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    @staticmethod
    def customColor(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def customCount(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def getColor(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setCustomColor(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setStandardColor(*args, **kwargs):
        """ """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def currentColor(self, *args, **kwargs):
        """ """
        ...
    def done(self, *args, **kwargs):
        """ """
        ...
    def open(self, *args, **kwargs):
        """ """
        ...
    def options(self, *args, **kwargs):
        """ """
        ...
    def selectedColor(self, *args, **kwargs):
        """ """
        ...
    def setCurrentColor(self, *args, **kwargs):
        """ """
        ...
    def setOption(self, *args, **kwargs):
        """ """
        ...
    def setOptions(self, *args, **kwargs):
        """ """
        ...
    def setVisible(self, *args, **kwargs):
        """ """
        ...
    def testOption(self, *args, **kwargs):
        """ """
        ...
    ...

class QColumnView(QAbstractItemView):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    updatePreviewWidget: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def columnWidths(self, *args, **kwargs):
        """ """
        ...
    def createColumn(self, *args, **kwargs):
        """ """
        ...
    def currentChanged(self, *args, **kwargs):
        """ """
        ...
    def horizontalOffset(self, *args, **kwargs):
        """ """
        ...
    def indexAt(self, *args, **kwargs):
        """ """
        ...
    def initializeColumn(self, *args, **kwargs):
        """ """
        ...
    def isIndexHidden(self, *args, **kwargs):
        """ """
        ...
    def moveCursor(self, *args, **kwargs):
        """ """
        ...
    def previewWidget(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def resizeGripsVisible(self, *args, **kwargs):
        """ """
        ...
    def rowsInserted(self, *args, **kwargs):
        """ """
        ...
    def scrollContentsBy(self, *args, **kwargs):
        """ """
        ...
    def scrollTo(self, *args, **kwargs):
        """ """
        ...
    def selectAll(self, *args, **kwargs):
        """ """
        ...
    def setColumnWidths(self, *args, **kwargs):
        """ """
        ...
    def setModel(self, *args, **kwargs):
        """ """
        ...
    def setPreviewWidget(self, *args, **kwargs):
        """ """
        ...
    def setResizeGripsVisible(self, *args, **kwargs):
        """ """
        ...
    def setRootIndex(self, *args, **kwargs):
        """ """
        ...
    def setSelection(self, *args, **kwargs):
        """ """
        ...
    def setSelectionModel(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def verticalOffset(self, *args, **kwargs):
        """ """
        ...
    def visualRect(self, *args, **kwargs):
        """ """
        ...
    def visualRegionForSelection(self, *args, **kwargs):
        """ """
        ...
    ...

class QComboBox(QWidget):
    AdjustToContents: ...
    """
    PySide.QtGui.QComboBox.SizeAdjustPolicy.AdjustToCon...
    """

    AdjustToContentsOnFirstShow: ...
    """
    PySide.QtGui.QComboBox.SizeAdjustPolicy....
    """

    AdjustToMinimumContentsLength: ...
    """
    PySide.QtGui.QComboBox.SizeAdjustPolic...
    """

    AdjustToMinimumContentsLengthWithIcon: ...
    """
    PySide.QtGui.QComboBox.SizeAdj...
    """

    InsertAfterCurrent: ...
    """
    PySide.QtGui.QComboBox.InsertPolicy.InsertAfterCu...
    """

    InsertAlphabetically: ...
    """
    PySide.QtGui.QComboBox.InsertPolicy.InsertAlpha...
    """

    InsertAtBottom: ... = PySide.QtGui.QComboBox.InsertPolicy.InsertAtBottom
    """
    """

    InsertAtCurrent: ... = PySide.QtGui.QComboBox.InsertPolicy.InsertAtCurrent
    """
    """

    InsertAtTop: ... = PySide.QtGui.QComboBox.InsertPolicy.InsertAtTop
    """
    """

    InsertBeforeCurrent: ...
    """
    PySide.QtGui.QComboBox.InsertPolicy.InsertBefore...
    """

    InsertPolicy: ...
    """
    <type 'PySide.QtGui.QComboBox.InsertPolicy'>
    """

    NoInsert: ... = PySide.QtGui.QComboBox.InsertPolicy.NoInsert
    """
    """

    SizeAdjustPolicy: ...
    """
    <type 'PySide.QtGui.QComboBox.SizeAdjustPolicy'>
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    activated: ...
    """
    Signal
    """

    currentIndexChanged: ...
    """
    Signal
    """

    editTextChanged: ...
    """
    Signal
    """

    highlighted: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    textChanged: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addItem(self, *args, **kwargs):
        """ """
        ...
    def addItems(self, *args, **kwargs):
        """ """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def clear(self, *args, **kwargs):
        """ """
        ...
    def clearEditText(self, *args, **kwargs):
        """ """
        ...
    def completer(self, *args, **kwargs):
        """ """
        ...
    def contextMenuEvent(self, *args, **kwargs):
        """ """
        ...
    def count(self, *args, **kwargs):
        """ """
        ...
    def currentIndex(self, *args, **kwargs):
        """ """
        ...
    def currentText(self, *args, **kwargs):
        """ """
        ...
    def duplicatesEnabled(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def findData(self, *args, **kwargs):
        """ """
        ...
    def findText(self, *args, **kwargs):
        """ """
        ...
    def focusInEvent(self, *args, **kwargs):
        """ """
        ...
    def focusOutEvent(self, *args, **kwargs):
        """ """
        ...
    def hasFrame(self, *args, **kwargs):
        """ """
        ...
    def hideEvent(self, *args, **kwargs):
        """ """
        ...
    def hidePopup(self, *args, **kwargs):
        """ """
        ...
    def iconSize(self, *args, **kwargs):
        """ """
        ...
    def initStyleOption(self, *args, **kwargs):
        """ """
        ...
    def inputMethodEvent(self, *args, **kwargs):
        """ """
        ...
    def inputMethodQuery(self, *args, **kwargs):
        """ """
        ...
    def insertItem(self, *args, **kwargs):
        """ """
        ...
    def insertItems(self, *args, **kwargs):
        """ """
        ...
    def insertPolicy(self, *args, **kwargs):
        """ """
        ...
    def insertSeparator(self, *args, **kwargs):
        """ """
        ...
    def isEditable(self, *args, **kwargs):
        """ """
        ...
    def itemData(self, *args, **kwargs):
        """ """
        ...
    def itemDelegate(self, *args, **kwargs):
        """ """
        ...
    def itemIcon(self, *args, **kwargs):
        """ """
        ...
    def itemText(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def keyReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def lineEdit(self, *args, **kwargs):
        """ """
        ...
    def maxCount(self, *args, **kwargs):
        """ """
        ...
    def maxVisibleItems(self, *args, **kwargs):
        """ """
        ...
    def minimumContentsLength(self, *args, **kwargs):
        """ """
        ...
    def minimumSizeHint(self, *args, **kwargs):
        """ """
        ...
    def model(self, *args, **kwargs):
        """ """
        ...
    def modelColumn(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def removeItem(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def rootModelIndex(self, *args, **kwargs):
        """ """
        ...
    def setCompleter(self, *args, **kwargs):
        """ """
        ...
    def setCurrentIndex(self, *args, **kwargs):
        """ """
        ...
    def setDuplicatesEnabled(self, *args, **kwargs):
        """ """
        ...
    def setEditText(self, *args, **kwargs):
        """ """
        ...
    def setEditable(self, *args, **kwargs):
        """ """
        ...
    def setFrame(self, *args, **kwargs):
        """ """
        ...
    def setIconSize(self, *args, **kwargs):
        """ """
        ...
    def setInsertPolicy(self, *args, **kwargs):
        """ """
        ...
    def setItemData(self, *args, **kwargs):
        """ """
        ...
    def setItemDelegate(self, *args, **kwargs):
        """ """
        ...
    def setItemIcon(self, *args, **kwargs):
        """ """
        ...
    def setItemText(self, *args, **kwargs):
        """ """
        ...
    def setLineEdit(self, *args, **kwargs):
        """ """
        ...
    def setMaxCount(self, *args, **kwargs):
        """ """
        ...
    def setMaxVisibleItems(self, *args, **kwargs):
        """ """
        ...
    def setMinimumContentsLength(self, *args, **kwargs):
        """ """
        ...
    def setModel(self, *args, **kwargs):
        """ """
        ...
    def setModelColumn(self, *args, **kwargs):
        """ """
        ...
    def setRootModelIndex(self, *args, **kwargs):
        """ """
        ...
    def setSizeAdjustPolicy(self, *args, **kwargs):
        """ """
        ...
    def setValidator(self, *args, **kwargs):
        """ """
        ...
    def setView(self, *args, **kwargs):
        """ """
        ...
    def showEvent(self, *args, **kwargs):
        """ """
        ...
    def showPopup(self, *args, **kwargs):
        """ """
        ...
    def sizeAdjustPolicy(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def validator(self, *args, **kwargs):
        """ """
        ...
    def view(self, *args, **kwargs):
        """ """
        ...
    def wheelEvent(self, *args, **kwargs):
        """ """
        ...
    ...

class QCommandLinkButton(QPushButton):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def description(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def heightForWidth(self, *args, **kwargs):
        """ """
        ...
    def minimumSizeHint(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def setDescription(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    ...

class QCommonStyle(QStyle):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def drawComplexControl(self, *args, **kwargs):
        """ """
        ...
    def drawControl(self, *args, **kwargs):
        """ """
        ...
    def drawPrimitive(self, *args, **kwargs):
        """ """
        ...
    def generatedIconPixmap(self, *args, **kwargs):
        """ """
        ...
    def hitTestComplexControl(self, *args, **kwargs):
        """ """
        ...
    def pixelMetric(self, *args, **kwargs):
        """ """
        ...
    def polish(self, *args, **kwargs):
        """ """
        ...
    def sizeFromContents(self, *args, **kwargs):
        """ """
        ...
    def standardIconImplementation(self, *args, **kwargs):
        """ """
        ...
    def styleHint(self, *args, **kwargs):
        """ """
        ...
    def subControlRect(self, *args, **kwargs):
        """ """
        ...
    def subElementRect(self, *args, **kwargs):
        """ """
        ...
    def unpolish(self, *args, **kwargs):
        """ """
        ...
    ...

class QCompleter(PySide.QtCore.QObject):
    CaseInsensitivelySortedModel: ...
    """
    PySide.QtGui.QCompleter.ModelSorting.Ca...
    """

    CaseSensitivelySortedModel: ...
    """
    PySide.QtGui.QCompleter.ModelSorting.Case...
    """

    CompletionMode: ...
    """
    <type 'PySide.QtGui.QCompleter.CompletionMode'>
    """

    InlineCompletion: ...
    """
    PySide.QtGui.QCompleter.CompletionMode.InlineComple...
    """

    ModelSorting: ...
    """
    <type 'PySide.QtGui.QCompleter.ModelSorting'>
    """

    PopupCompletion: ...
    """
    PySide.QtGui.QCompleter.CompletionMode.PopupCompleti...
    """

    UnfilteredPopupCompletion: ...
    """
    PySide.QtGui.QCompleter.CompletionMode.Unf...
    """

    UnsortedModel: ... = PySide.QtGui.QCompleter.ModelSorting.UnsortedModel
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    activated: ...
    """
    Signal
    """

    highlighted: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def caseSensitivity(self, *args, **kwargs):
        """ """
        ...
    def complete(self, *args, **kwargs):
        """ """
        ...
    def completionColumn(self, *args, **kwargs):
        """ """
        ...
    def completionCount(self, *args, **kwargs):
        """ """
        ...
    def completionMode(self, *args, **kwargs):
        """ """
        ...
    def completionModel(self, *args, **kwargs):
        """ """
        ...
    def completionPrefix(self, *args, **kwargs):
        """ """
        ...
    def completionRole(self, *args, **kwargs):
        """ """
        ...
    def currentCompletion(self, *args, **kwargs):
        """ """
        ...
    def currentIndex(self, *args, **kwargs):
        """ """
        ...
    def currentRow(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def eventFilter(self, *args, **kwargs):
        """ """
        ...
    def maxVisibleItems(self, *args, **kwargs):
        """ """
        ...
    def model(self, *args, **kwargs):
        """ """
        ...
    def modelSorting(self, *args, **kwargs):
        """ """
        ...
    def pathFromIndex(self, *args, **kwargs):
        """ """
        ...
    def popup(self, *args, **kwargs):
        """ """
        ...
    def setCaseSensitivity(self, *args, **kwargs):
        """ """
        ...
    def setCompletionColumn(self, *args, **kwargs):
        """ """
        ...
    def setCompletionMode(self, *args, **kwargs):
        """ """
        ...
    def setCompletionPrefix(self, *args, **kwargs):
        """ """
        ...
    def setCompletionRole(self, *args, **kwargs):
        """ """
        ...
    def setCurrentRow(self, *args, **kwargs):
        """ """
        ...
    def setMaxVisibleItems(self, *args, **kwargs):
        """ """
        ...
    def setModel(self, *args, **kwargs):
        """ """
        ...
    def setModelSorting(self, *args, **kwargs):
        """ """
        ...
    def setPopup(self, *args, **kwargs):
        """ """
        ...
    def setWidget(self, *args, **kwargs):
        """ """
        ...
    def setWrapAround(self, *args, **kwargs):
        """ """
        ...
    def splitPath(self, *args, **kwargs):
        """ """
        ...
    def widget(self, *args, **kwargs):
        """ """
        ...
    def wrapAround(self, *args, **kwargs):
        """ """
        ...
    ...

class QDataWidgetMapper(PySide.QtCore.QObject):
    AutoSubmit: ... = PySide.QtGui.QDataWidgetMapper.SubmitPolicy.AutoSubmit
    """
    """

    ManualSubmit: ...
    """
    PySide.QtGui.QDataWidgetMapper.SubmitPolicy.ManualSubmi...
    """

    SubmitPolicy: ...
    """
    <type 'PySide.QtGui.QDataWidgetMapper.SubmitPolicy'>
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    currentIndexChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addMapping(self, *args, **kwargs):
        """ """
        ...
    def clearMapping(self, *args, **kwargs):
        """ """
        ...
    def currentIndex(self, *args, **kwargs):
        """ """
        ...
    def itemDelegate(self, *args, **kwargs):
        """ """
        ...
    def mappedPropertyName(self, *args, **kwargs):
        """ """
        ...
    def mappedSection(self, *args, **kwargs):
        """ """
        ...
    def mappedWidgetAt(self, *args, **kwargs):
        """ """
        ...
    def model(self, *args, **kwargs):
        """ """
        ...
    def orientation(self, *args, **kwargs):
        """ """
        ...
    def removeMapping(self, *args, **kwargs):
        """ """
        ...
    def revert(self, *args, **kwargs):
        """ """
        ...
    def rootIndex(self, *args, **kwargs):
        """ """
        ...
    def setCurrentIndex(self, *args, **kwargs):
        """ """
        ...
    def setCurrentModelIndex(self, *args, **kwargs):
        """ """
        ...
    def setItemDelegate(self, *args, **kwargs):
        """ """
        ...
    def setModel(self, *args, **kwargs):
        """ """
        ...
    def setOrientation(self, *args, **kwargs):
        """ """
        ...
    def setRootIndex(self, *args, **kwargs):
        """ """
        ...
    def setSubmitPolicy(self, *args, **kwargs):
        """ """
        ...
    def submit(self, *args, **kwargs):
        """ """
        ...
    def submitPolicy(self, *args, **kwargs):
        """ """
        ...
    def toFirst(self, *args, **kwargs):
        """ """
        ...
    def toLast(self, *args, **kwargs):
        """ """
        ...
    def toNext(self, *args, **kwargs):
        """ """
        ...
    def toPrevious(self, *args, **kwargs):
        """ """
        ...
    ...

class QDateEdit(QDateTimeEdit):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QDateTimeEdit(QAbstractSpinBox):
    AmPmSection: ... = PySide.QtGui.QDateTimeEdit.Section.AmPmSection
    """
    """

    DateSections_Mask: ...
    """
    PySide.QtGui.QDateTimeEdit.Section.DateSections_Ma...
    """

    DaySection: ... = PySide.QtGui.QDateTimeEdit.Section.DaySection
    """
    """

    HourSection: ... = PySide.QtGui.QDateTimeEdit.Section.HourSection
    """
    """

    MSecSection: ... = PySide.QtGui.QDateTimeEdit.Section.MSecSection
    """
    """

    MinuteSection: ... = PySide.QtGui.QDateTimeEdit.Section.MinuteSection
    """
    """

    MonthSection: ... = PySide.QtGui.QDateTimeEdit.Section.MonthSection
    """
    """

    NoSection: ... = PySide.QtGui.QDateTimeEdit.Section.NoSection
    """
    """

    SecondSection: ... = PySide.QtGui.QDateTimeEdit.Section.SecondSection
    """
    """

    Section: ...
    """
    <type 'PySide.QtGui.QDateTimeEdit.Section'>
    """

    Sections: ...
    """
    <type 'Sections'>
    """

    TimeSections_Mask: ...
    """
    PySide.QtGui.QDateTimeEdit.Section.TimeSections_Ma...
    """

    YearSection: ... = PySide.QtGui.QDateTimeEdit.Section.YearSection
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    dateChanged: ...
    """
    Signal
    """

    dateTimeChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    timeChanged: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def calendarPopup(self, *args, **kwargs):
        """ """
        ...
    def calendarWidget(self, *args, **kwargs):
        """ """
        ...
    def clear(self, *args, **kwargs):
        """ """
        ...
    def clearMaximumDate(self, *args, **kwargs):
        """ """
        ...
    def clearMaximumDateTime(self, *args, **kwargs):
        """ """
        ...
    def clearMaximumTime(self, *args, **kwargs):
        """ """
        ...
    def clearMinimumDate(self, *args, **kwargs):
        """ """
        ...
    def clearMinimumDateTime(self, *args, **kwargs):
        """ """
        ...
    def clearMinimumTime(self, *args, **kwargs):
        """ """
        ...
    def currentSection(self, *args, **kwargs):
        """ """
        ...
    def currentSectionIndex(self, *args, **kwargs):
        """ """
        ...
    def date(self, *args, **kwargs):
        """ """
        ...
    def dateTime(self, *args, **kwargs):
        """ """
        ...
    def dateTimeFromText(self, *args, **kwargs):
        """ """
        ...
    def displayFormat(self, *args, **kwargs):
        """ """
        ...
    def displayedSections(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def fixup(self, *args, **kwargs):
        """ """
        ...
    def focusInEvent(self, *args, **kwargs):
        """ """
        ...
    def focusNextPrevChild(self, *args, **kwargs):
        """ """
        ...
    def initStyleOption(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def maximumDate(self, *args, **kwargs):
        """ """
        ...
    def maximumDateTime(self, *args, **kwargs):
        """ """
        ...
    def maximumTime(self, *args, **kwargs):
        """ """
        ...
    def minimumDate(self, *args, **kwargs):
        """ """
        ...
    def minimumDateTime(self, *args, **kwargs):
        """ """
        ...
    def minimumTime(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def sectionAt(self, *args, **kwargs):
        """ """
        ...
    def sectionCount(self, *args, **kwargs):
        """ """
        ...
    def sectionText(self, *args, **kwargs):
        """ """
        ...
    def setCalendarPopup(self, *args, **kwargs):
        """ """
        ...
    def setCalendarWidget(self, *args, **kwargs):
        """ """
        ...
    def setCurrentSection(self, *args, **kwargs):
        """ """
        ...
    def setCurrentSectionIndex(self, *args, **kwargs):
        """ """
        ...
    def setDate(self, *args, **kwargs):
        """ """
        ...
    def setDateRange(self, *args, **kwargs):
        """ """
        ...
    def setDateTime(self, *args, **kwargs):
        """ """
        ...
    def setDateTimeRange(self, *args, **kwargs):
        """ """
        ...
    def setDisplayFormat(self, *args, **kwargs):
        """ """
        ...
    def setMaximumDate(self, *args, **kwargs):
        """ """
        ...
    def setMaximumDateTime(self, *args, **kwargs):
        """ """
        ...
    def setMaximumTime(self, *args, **kwargs):
        """ """
        ...
    def setMinimumDate(self, *args, **kwargs):
        """ """
        ...
    def setMinimumDateTime(self, *args, **kwargs):
        """ """
        ...
    def setMinimumTime(self, *args, **kwargs):
        """ """
        ...
    def setSelectedSection(self, *args, **kwargs):
        """ """
        ...
    def setTime(self, *args, **kwargs):
        """ """
        ...
    def setTimeRange(self, *args, **kwargs):
        """ """
        ...
    def setTimeSpec(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def stepBy(self, *args, **kwargs):
        """ """
        ...
    def stepEnabled(self, *args, **kwargs):
        """ """
        ...
    def textFromDateTime(self, *args, **kwargs):
        """ """
        ...
    def time(self, *args, **kwargs):
        """ """
        ...
    def timeSpec(self, *args, **kwargs):
        """ """
        ...
    def validate(self, *args, **kwargs):
        """ """
        ...
    def wheelEvent(self, *args, **kwargs):
        """ """
        ...
    ...

class QDesktopWidget(QWidget):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    resized: ...
    """
    Signal
    """

    screenCountChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    workAreaResized: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def availableGeometry(self, *args, **kwargs):
        """ """
        ...
    def isVirtualDesktop(self, *args, **kwargs):
        """ """
        ...
    def numScreens(self, *args, **kwargs):
        """ """
        ...
    def primaryScreen(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def screen(self, *args, **kwargs):
        """ """
        ...
    def screenCount(self, *args, **kwargs):
        """ """
        ...
    def screenGeometry(self, *args, **kwargs):
        """ """
        ...
    def screenNumber(self, *args, **kwargs):
        """ """
        ...
    ...

class QDial(QAbstractSlider):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    dialMoved: ...
    """
    Signal
    """

    dialPressed: ...
    """
    Signal
    """

    dialReleased: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def initStyleOption(self, *args, **kwargs):
        """ """
        ...
    def minimumSizeHint(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def notchSize(self, *args, **kwargs):
        """ """
        ...
    def notchTarget(self, *args, **kwargs):
        """ """
        ...
    def notchesVisible(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def setNotchTarget(self, *args, **kwargs):
        """ """
        ...
    def setNotchesVisible(self, *args, **kwargs):
        """ """
        ...
    def setWrapping(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def sliderChange(self, *args, **kwargs):
        """ """
        ...
    def wrapping(self, *args, **kwargs):
        """ """
        ...
    ...

class QDialog(QWidget):
    Accepted: ... = PySide.QtGui.QDialog.DialogCode.Accepted
    """
    """

    DialogCode: ...
    """
    <type 'PySide.QtGui.QDialog.DialogCode'>
    """

    Rejected: ... = PySide.QtGui.QDialog.DialogCode.Rejected
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    accepted: ...
    """
    Signal
    """

    finished: ...
    """
    Signal
    """

    rejected: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def accept(self, *args, **kwargs):
        """ """
        ...
    def adjustPosition(self, *args, **kwargs):
        """ """
        ...
    def closeEvent(self, *args, **kwargs):
        """ """
        ...
    def contextMenuEvent(self, *args, **kwargs):
        """ """
        ...
    def done(self, *args, **kwargs):
        """ """
        ...
    def eventFilter(self, *args, **kwargs):
        """ """
        ...
    def exec_(self, *args, **kwargs):
        """ """
        ...
    def isSizeGripEnabled(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def minimumSizeHint(self, *args, **kwargs):
        """ """
        ...
    def open(self, *args, **kwargs):
        """ """
        ...
    def reject(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def result(self, *args, **kwargs):
        """ """
        ...
    def setModal(self, *args, **kwargs):
        """ """
        ...
    def setResult(self, *args, **kwargs):
        """ """
        ...
    def setSizeGripEnabled(self, *args, **kwargs):
        """ """
        ...
    def setVisible(self, *args, **kwargs):
        """ """
        ...
    def showEvent(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    ...

class QDialogButtonBox(QWidget):
    Abort: ... = PySide.QtGui.QDialogButtonBox.StandardButton.Abort
    """
    """

    AcceptRole: ... = PySide.QtGui.QDialogButtonBox.ButtonRole.AcceptRole
    """
    """

    ActionRole: ... = PySide.QtGui.QDialogButtonBox.ButtonRole.ActionRole
    """
    """

    Apply: ... = PySide.QtGui.QDialogButtonBox.StandardButton.Apply
    """
    """

    ApplyRole: ... = PySide.QtGui.QDialogButtonBox.ButtonRole.ApplyRole
    """
    """

    ButtonLayout: ...
    """
    <type 'PySide.QtGui.QDialogButtonBox.ButtonLayout'>
    """

    ButtonRole: ...
    """
    <type 'PySide.QtGui.QDialogButtonBox.ButtonRole'>
    """

    Cancel: ... = PySide.QtGui.QDialogButtonBox.StandardButton.Cancel
    """
    """

    Close: ... = PySide.QtGui.QDialogButtonBox.StandardButton.Close
    """
    """

    DestructiveRole: ...
    """
    PySide.QtGui.QDialogButtonBox.ButtonRole.Destructive...
    """

    Discard: ... = PySide.QtGui.QDialogButtonBox.StandardButton.Discard
    """
    """

    FirstButton: ... = PySide.QtGui.QDialogButtonBox.StandardButton.FirstButton
    """
    """

    GnomeLayout: ... = PySide.QtGui.QDialogButtonBox.ButtonLayout.GnomeLayout
    """
    """

    Help: ... = PySide.QtGui.QDialogButtonBox.StandardButton.Help
    """
    """

    HelpRole: ... = PySide.QtGui.QDialogButtonBox.ButtonRole.HelpRole
    """
    """

    Ignore: ... = PySide.QtGui.QDialogButtonBox.StandardButton.Ignore
    """
    """

    InvalidRole: ... = PySide.QtGui.QDialogButtonBox.ButtonRole.InvalidRole
    """
    """

    KdeLayout: ... = PySide.QtGui.QDialogButtonBox.ButtonLayout.KdeLayout
    """
    """

    LastButton: ... = PySide.QtGui.QDialogButtonBox.StandardButton.LastButton
    """
    """

    MacLayout: ... = PySide.QtGui.QDialogButtonBox.ButtonLayout.MacLayout
    """
    """

    NRoles: ... = PySide.QtGui.QDialogButtonBox.ButtonRole.NRoles
    """
    """

    No: ... = PySide.QtGui.QDialogButtonBox.StandardButton.No
    """
    """

    NoButton: ... = PySide.QtGui.QDialogButtonBox.StandardButton.NoButton
    """
    """

    NoRole: ... = PySide.QtGui.QDialogButtonBox.ButtonRole.NoRole
    """
    """

    NoToAll: ... = PySide.QtGui.QDialogButtonBox.StandardButton.NoToAll
    """
    """

    Ok: ... = PySide.QtGui.QDialogButtonBox.StandardButton.Ok
    """
    """

    Open: ... = PySide.QtGui.QDialogButtonBox.StandardButton.Open
    """
    """

    RejectRole: ... = PySide.QtGui.QDialogButtonBox.ButtonRole.RejectRole
    """
    """

    Reset: ... = PySide.QtGui.QDialogButtonBox.StandardButton.Reset
    """
    """

    ResetRole: ... = PySide.QtGui.QDialogButtonBox.ButtonRole.ResetRole
    """
    """

    RestoreDefaults: ...
    """
    PySide.QtGui.QDialogButtonBox.StandardButton.Restore...
    """

    Retry: ... = PySide.QtGui.QDialogButtonBox.StandardButton.Retry
    """
    """

    Save: ... = PySide.QtGui.QDialogButtonBox.StandardButton.Save
    """
    """

    SaveAll: ... = PySide.QtGui.QDialogButtonBox.StandardButton.SaveAll
    """
    """

    StandardButton: ...
    """
    <type 'PySide.QtGui.QDialogButtonBox.StandardButton'>
    """

    StandardButtons: ...
    """
    <type 'StandardButtons'>
    """

    WinLayout: ... = PySide.QtGui.QDialogButtonBox.ButtonLayout.WinLayout
    """
    """

    Yes: ... = PySide.QtGui.QDialogButtonBox.StandardButton.Yes
    """
    """

    YesRole: ... = PySide.QtGui.QDialogButtonBox.ButtonRole.YesRole
    """
    """

    YesToAll: ... = PySide.QtGui.QDialogButtonBox.StandardButton.YesToAll
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    accepted: ...
    """
    Signal
    """

    clicked: ...
    """
    Signal
    """

    helpRequested: ...
    """
    Signal
    """

    rejected: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addButton(self, *args, **kwargs):
        """ """
        ...
    def button(self, *args, **kwargs):
        """ """
        ...
    def buttonRole(self, *args, **kwargs):
        """ """
        ...
    def buttons(self, *args, **kwargs):
        """ """
        ...
    def centerButtons(self, *args, **kwargs):
        """ """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def clear(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def orientation(self, *args, **kwargs):
        """ """
        ...
    def removeButton(self, *args, **kwargs):
        """ """
        ...
    def setCenterButtons(self, *args, **kwargs):
        """ """
        ...
    def setOrientation(self, *args, **kwargs):
        """ """
        ...
    def setStandardButtons(self, *args, **kwargs):
        """ """
        ...
    def standardButton(self, *args, **kwargs):
        """ """
        ...
    def standardButtons(self, *args, **kwargs):
        """ """
        ...
    ...

class QDirModel(PySide.QtCore.QAbstractItemModel):
    FileIconRole: ... = PySide.QtGui.QDirModel.Roles.FileIconRole
    """
    """

    FileNameRole: ... = PySide.QtGui.QDirModel.Roles.FileNameRole
    """
    """

    FilePathRole: ... = PySide.QtGui.QDirModel.Roles.FilePathRole
    """
    """

    Roles: ...
    """
    <type 'PySide.QtGui.QDirModel.Roles'>
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def columnCount(self, *args, **kwargs):
        """ """
        ...
    def data(self, *args, **kwargs):
        """ """
        ...
    def dropMimeData(self, *args, **kwargs):
        """ """
        ...
    def fileIcon(self, *args, **kwargs):
        """ """
        ...
    def fileInfo(self, *args, **kwargs):
        """ """
        ...
    def fileName(self, *args, **kwargs):
        """ """
        ...
    def filePath(self, *args, **kwargs):
        """ """
        ...
    def filter(self, *args, **kwargs):
        """ """
        ...
    def flags(self, *args, **kwargs):
        """ """
        ...
    def hasChildren(self, *args, **kwargs):
        """ """
        ...
    def headerData(self, *args, **kwargs):
        """ """
        ...
    def iconProvider(self, *args, **kwargs):
        """ """
        ...
    def index(self, *args, **kwargs):
        """ """
        ...
    def isDir(self, *args, **kwargs):
        """ """
        ...
    def isReadOnly(self, *args, **kwargs):
        """ """
        ...
    def lazyChildCount(self, *args, **kwargs):
        """ """
        ...
    def mimeData(self, *args, **kwargs):
        """ """
        ...
    def mimeTypes(self, *args, **kwargs):
        """ """
        ...
    def mkdir(self, *args, **kwargs):
        """ """
        ...
    def nameFilters(self, *args, **kwargs):
        """ """
        ...
    def parent(self, *args, **kwargs):
        """ """
        ...
    def refresh(self, *args, **kwargs):
        """ """
        ...
    def remove(self, *args, **kwargs):
        """ """
        ...
    def resolveSymlinks(self, *args, **kwargs):
        """ """
        ...
    def rmdir(self, *args, **kwargs):
        """ """
        ...
    def rowCount(self, *args, **kwargs):
        """ """
        ...
    def setData(self, *args, **kwargs):
        """ """
        ...
    def setFilter(self, *args, **kwargs):
        """ """
        ...
    def setIconProvider(self, *args, **kwargs):
        """ """
        ...
    def setLazyChildCount(self, *args, **kwargs):
        """ """
        ...
    def setNameFilters(self, *args, **kwargs):
        """ """
        ...
    def setReadOnly(self, *args, **kwargs):
        """ """
        ...
    def setResolveSymlinks(self, *args, **kwargs):
        """ """
        ...
    def setSorting(self, *args, **kwargs):
        """ """
        ...
    def sort(self, *args, **kwargs):
        """ """
        ...
    def sorting(self, *args, **kwargs):
        """ """
        ...
    def supportedDropActions(self, *args, **kwargs):
        """ """
        ...
    ...

class QDockWidget(QWidget):
    AllDockWidgetFeatures: ...
    """
    PySide.QtGui.QDockWidget.DockWidgetFeature.All...
    """

    DockWidgetClosable: ...
    """
    PySide.QtGui.QDockWidget.DockWidgetFeature.DockWi...
    """

    DockWidgetFeature: ...
    """
    <type 'PySide.QtGui.QDockWidget.DockWidgetFeature'...
    """

    DockWidgetFeatureMask: ...
    """
    PySide.QtGui.QDockWidget.DockWidgetFeature.Doc...
    """

    DockWidgetFeatures: ...
    """
    <type 'DockWidgetFeatures'>
    """

    DockWidgetFloatable: ...
    """
    PySide.QtGui.QDockWidget.DockWidgetFeature.DockW...
    """

    DockWidgetMovable: ...
    """
    PySide.QtGui.QDockWidget.DockWidgetFeature.DockWid...
    """

    DockWidgetVerticalTitleBar: ...
    """
    PySide.QtGui.QDockWidget.DockWidgetFeatur...
    """

    NoDockWidgetFeatures: ...
    """
    PySide.QtGui.QDockWidget.DockWidgetFeature.NoDo...
    """

    Reserved: ... = PySide.QtGui.QDockWidget.DockWidgetFeature.Reserved
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    allowedAreasChanged: ...
    """
    Signal
    """

    dockLocationChanged: ...
    """
    Signal
    """

    featuresChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    topLevelChanged: ...
    """
    Signal
    """

    visibilityChanged: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def allowedAreas(self, *args, **kwargs):
        """ """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def closeEvent(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def features(self, *args, **kwargs):
        """ """
        ...
    def initStyleOption(self, *args, **kwargs):
        """ """
        ...
    def isAreaAllowed(self, *args, **kwargs):
        """ """
        ...
    def isFloating(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def setAllowedAreas(self, *args, **kwargs):
        """ """
        ...
    def setFeatures(self, *args, **kwargs):
        """ """
        ...
    def setFloating(self, *args, **kwargs):
        """ """
        ...
    def setTitleBarWidget(self, *args, **kwargs):
        """ """
        ...
    def setWidget(self, *args, **kwargs):
        """ """
        ...
    def titleBarWidget(self, *args, **kwargs):
        """ """
        ...
    def toggleViewAction(self, *args, **kwargs):
        """ """
        ...
    def widget(self, *args, **kwargs):
        """ """
        ...
    ...

class QDoubleSpinBox(QAbstractSpinBox):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    valueChanged: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def cleanText(self, *args, **kwargs):
        """ """
        ...
    def decimals(self, *args, **kwargs):
        """ """
        ...
    def fixup(self, *args, **kwargs):
        """ """
        ...
    def maximum(self, *args, **kwargs):
        """ """
        ...
    def minimum(self, *args, **kwargs):
        """ """
        ...
    def prefix(self, *args, **kwargs):
        """ """
        ...
    def setDecimals(self, *args, **kwargs):
        """ """
        ...
    def setMaximum(self, *args, **kwargs):
        """ """
        ...
    def setMinimum(self, *args, **kwargs):
        """ """
        ...
    def setPrefix(self, *args, **kwargs):
        """ """
        ...
    def setRange(self, *args, **kwargs):
        """ """
        ...
    def setSingleStep(self, *args, **kwargs):
        """ """
        ...
    def setSuffix(self, *args, **kwargs):
        """ """
        ...
    def setValue(self, *args, **kwargs):
        """ """
        ...
    def singleStep(self, *args, **kwargs):
        """ """
        ...
    def suffix(self, *args, **kwargs):
        """ """
        ...
    def textFromValue(self, *args, **kwargs):
        """ """
        ...
    def validate(self, *args, **kwargs):
        """ """
        ...
    def value(self, *args, **kwargs):
        """ """
        ...
    def valueFromText(self, *args, **kwargs):
        """ """
        ...
    ...

class QErrorMessage(QDialog):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    @staticmethod
    def qtHandler(*args, **kwargs):
        """ """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def done(self, *args, **kwargs):
        """ """
        ...
    def showMessage(self, *args, **kwargs):
        """ """
        ...
    ...

class QFileDialog(QDialog):
    Accept: ... = PySide.QtGui.QFileDialog.DialogLabel.Accept
    """
    """

    AcceptMode: ...
    """
    <type 'PySide.QtGui.QFileDialog.AcceptMode'>
    """

    AcceptOpen: ... = PySide.QtGui.QFileDialog.AcceptMode.AcceptOpen
    """
    """

    AcceptSave: ... = PySide.QtGui.QFileDialog.AcceptMode.AcceptSave
    """
    """

    AnyFile: ... = PySide.QtGui.QFileDialog.FileMode.AnyFile
    """
    """

    Detail: ... = PySide.QtGui.QFileDialog.ViewMode.Detail
    """
    """

    DialogLabel: ...
    """
    <type 'PySide.QtGui.QFileDialog.DialogLabel'>
    """

    Directory: ... = PySide.QtGui.QFileDialog.FileMode.Directory
    """
    """

    DirectoryOnly: ... = PySide.QtGui.QFileDialog.FileMode.DirectoryOnly
    """
    """

    DontConfirmOverwrite: ...
    """
    PySide.QtGui.QFileDialog.Option.DontConfirmOver...
    """

    DontResolveSymlinks: ...
    """
    PySide.QtGui.QFileDialog.Option.DontResolveSymli...
    """

    DontUseNativeDialog: ...
    """
    PySide.QtGui.QFileDialog.Option.DontUseNativeDia...
    """

    DontUseSheet: ... = PySide.QtGui.QFileDialog.Option.DontUseSheet
    """
    """

    ExistingFile: ... = PySide.QtGui.QFileDialog.FileMode.ExistingFile
    """
    """

    ExistingFiles: ... = PySide.QtGui.QFileDialog.FileMode.ExistingFiles
    """
    """

    FileMode: ...
    """
    <type 'PySide.QtGui.QFileDialog.FileMode'>
    """

    FileName: ... = PySide.QtGui.QFileDialog.DialogLabel.FileName
    """
    """

    FileType: ... = PySide.QtGui.QFileDialog.DialogLabel.FileType
    """
    """

    HideNameFilterDetails: ...
    """
    PySide.QtGui.QFileDialog.Option.HideNameFilter...
    """

    List: ... = PySide.QtGui.QFileDialog.ViewMode.List
    """
    """

    LookIn: ... = PySide.QtGui.QFileDialog.DialogLabel.LookIn
    """
    """

    Option: ...
    """
    <type 'PySide.QtGui.QFileDialog.Option'>
    """

    Options: ...
    """
    <type 'Options'>
    """

    ReadOnly: ... = PySide.QtGui.QFileDialog.Option.ReadOnly
    """
    """

    Reject: ... = PySide.QtGui.QFileDialog.DialogLabel.Reject
    """
    """

    ShowDirsOnly: ... = PySide.QtGui.QFileDialog.Option.ShowDirsOnly
    """
    """

    ViewMode: ...
    """
    <type 'PySide.QtGui.QFileDialog.ViewMode'>
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    currentChanged: ...
    """
    Signal
    """

    directoryEntered: ...
    """
    Signal
    """

    fileSelected: ...
    """
    Signal
    """

    filesSelected: ...
    """
    Signal
    """

    filterSelected: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    @staticmethod
    def getExistingDirectory(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def getOpenFileName(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def getOpenFileNames(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def getSaveFileName(*args, **kwargs):
        """ """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def accept(self, *args, **kwargs):
        """ """
        ...
    def acceptMode(self, *args, **kwargs):
        """ """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def confirmOverwrite(self, *args, **kwargs):
        """ """
        ...
    def defaultSuffix(self, *args, **kwargs):
        """ """
        ...
    def directory(self, *args, **kwargs):
        """ """
        ...
    def done(self, *args, **kwargs):
        """ """
        ...
    def fileMode(self, *args, **kwargs):
        """ """
        ...
    def filter(self, *args, **kwargs):
        """ """
        ...
    def filters(self, *args, **kwargs):
        """ """
        ...
    def history(self, *args, **kwargs):
        """ """
        ...
    def iconProvider(self, *args, **kwargs):
        """ """
        ...
    def isNameFilterDetailsVisible(self, *args, **kwargs):
        """ """
        ...
    def isReadOnly(self, *args, **kwargs):
        """ """
        ...
    def itemDelegate(self, *args, **kwargs):
        """ """
        ...
    def labelText(self, *args, **kwargs):
        """ """
        ...
    def nameFilters(self, *args, **kwargs):
        """ """
        ...
    def open(self, *args, **kwargs):
        """ """
        ...
    def options(self, *args, **kwargs):
        """ """
        ...
    def proxyModel(self, *args, **kwargs):
        """ """
        ...
    def resolveSymlinks(self, *args, **kwargs):
        """ """
        ...
    def restoreState(self, *args, **kwargs):
        """ """
        ...
    def saveState(self, *args, **kwargs):
        """ """
        ...
    def selectFile(self, *args, **kwargs):
        """ """
        ...
    def selectFilter(self, *args, **kwargs):
        """ """
        ...
    def selectNameFilter(self, *args, **kwargs):
        """ """
        ...
    def selectedFiles(self, *args, **kwargs):
        """ """
        ...
    def selectedFilter(self, *args, **kwargs):
        """ """
        ...
    def selectedNameFilter(self, *args, **kwargs):
        """ """
        ...
    def setAcceptMode(self, *args, **kwargs):
        """ """
        ...
    def setConfirmOverwrite(self, *args, **kwargs):
        """ """
        ...
    def setDefaultSuffix(self, *args, **kwargs):
        """ """
        ...
    def setDirectory(self, *args, **kwargs):
        """ """
        ...
    def setFileMode(self, *args, **kwargs):
        """ """
        ...
    def setFilter(self, *args, **kwargs):
        """ """
        ...
    def setFilters(self, *args, **kwargs):
        """ """
        ...
    def setHistory(self, *args, **kwargs):
        """ """
        ...
    def setIconProvider(self, *args, **kwargs):
        """ """
        ...
    def setItemDelegate(self, *args, **kwargs):
        """ """
        ...
    def setLabelText(self, *args, **kwargs):
        """ """
        ...
    def setNameFilter(self, *args, **kwargs):
        """ """
        ...
    def setNameFilterDetailsVisible(self, *args, **kwargs):
        """ """
        ...
    def setNameFilters(self, *args, **kwargs):
        """ """
        ...
    def setOption(self, *args, **kwargs):
        """ """
        ...
    def setOptions(self, *args, **kwargs):
        """ """
        ...
    def setProxyModel(self, *args, **kwargs):
        """ """
        ...
    def setReadOnly(self, *args, **kwargs):
        """ """
        ...
    def setResolveSymlinks(self, *args, **kwargs):
        """ """
        ...
    def setSidebarUrls(self, *args, **kwargs):
        """ """
        ...
    def setViewMode(self, *args, **kwargs):
        """ """
        ...
    def setVisible(self, *args, **kwargs):
        """ """
        ...
    def sidebarUrls(self, *args, **kwargs):
        """ """
        ...
    def testOption(self, *args, **kwargs):
        """ """
        ...
    def viewMode(self, *args, **kwargs):
        """ """
        ...
    ...

class QFileIconProvider(Shiboken.Object):
    Computer: ... = PySide.QtGui.QFileIconProvider.IconType.Computer
    """
    """

    Desktop: ... = PySide.QtGui.QFileIconProvider.IconType.Desktop
    """
    """

    Drive: ... = PySide.QtGui.QFileIconProvider.IconType.Drive
    """
    """

    File: ... = PySide.QtGui.QFileIconProvider.IconType.File
    """
    """

    Folder: ... = PySide.QtGui.QFileIconProvider.IconType.Folder
    """
    """

    IconType: ...
    """
    <type 'PySide.QtGui.QFileIconProvider.IconType'>
    """

    Network: ... = PySide.QtGui.QFileIconProvider.IconType.Network
    """
    """

    Trashcan: ... = PySide.QtGui.QFileIconProvider.IconType.Trashcan
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def icon(self, *args, **kwargs):
        """ """
        ...
    def type(self, *args, **kwargs):
        """ """
        ...
    ...

class QFileSystemModel(PySide.QtCore.QAbstractItemModel):
    FileIconRole: ... = PySide.QtGui.QFileSystemModel.Roles.FileIconRole
    """
    """

    FileNameRole: ... = PySide.QtGui.QFileSystemModel.Roles.FileNameRole
    """
    """

    FilePathRole: ... = PySide.QtGui.QFileSystemModel.Roles.FilePathRole
    """
    """

    FilePermissions: ... = PySide.QtGui.QFileSystemModel.Roles.FilePermissions
    """
    """

    Roles: ...
    """
    <type 'PySide.QtGui.QFileSystemModel.Roles'>
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    directoryLoaded: ...
    """
    Signal
    """

    fileRenamed: ...
    """
    Signal
    """

    rootPathChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def canFetchMore(self, *args, **kwargs):
        """ """
        ...
    def columnCount(self, *args, **kwargs):
        """ """
        ...
    def data(self, *args, **kwargs):
        """ """
        ...
    def dropMimeData(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def fetchMore(self, *args, **kwargs):
        """ """
        ...
    def fileIcon(self, *args, **kwargs):
        """ """
        ...
    def fileInfo(self, *args, **kwargs):
        """ """
        ...
    def fileName(self, *args, **kwargs):
        """ """
        ...
    def filePath(self, *args, **kwargs):
        """ """
        ...
    def filter(self, *args, **kwargs):
        """ """
        ...
    def flags(self, *args, **kwargs):
        """ """
        ...
    def hasChildren(self, *args, **kwargs):
        """ """
        ...
    def headerData(self, *args, **kwargs):
        """ """
        ...
    def iconProvider(self, *args, **kwargs):
        """ """
        ...
    def index(self, *args, **kwargs):
        """ """
        ...
    def isDir(self, *args, **kwargs):
        """ """
        ...
    def isReadOnly(self, *args, **kwargs):
        """ """
        ...
    def lastModified(self, *args, **kwargs):
        """ """
        ...
    def mimeData(self, *args, **kwargs):
        """ """
        ...
    def mimeTypes(self, *args, **kwargs):
        """ """
        ...
    def mkdir(self, *args, **kwargs):
        """ """
        ...
    def myComputer(self, *args, **kwargs):
        """ """
        ...
    def nameFilterDisables(self, *args, **kwargs):
        """ """
        ...
    def nameFilters(self, *args, **kwargs):
        """ """
        ...
    def parent(self, *args, **kwargs):
        """ """
        ...
    def permissions(self, *args, **kwargs):
        """ """
        ...
    def remove(self, *args, **kwargs):
        """ """
        ...
    def resolveSymlinks(self, *args, **kwargs):
        """ """
        ...
    def rmdir(self, *args, **kwargs):
        """ """
        ...
    def rootDirectory(self, *args, **kwargs):
        """ """
        ...
    def rootPath(self, *args, **kwargs):
        """ """
        ...
    def rowCount(self, *args, **kwargs):
        """ """
        ...
    def setData(self, *args, **kwargs):
        """ """
        ...
    def setFilter(self, *args, **kwargs):
        """ """
        ...
    def setIconProvider(self, *args, **kwargs):
        """ """
        ...
    def setNameFilterDisables(self, *args, **kwargs):
        """ """
        ...
    def setNameFilters(self, *args, **kwargs):
        """ """
        ...
    def setReadOnly(self, *args, **kwargs):
        """ """
        ...
    def setResolveSymlinks(self, *args, **kwargs):
        """ """
        ...
    def setRootPath(self, *args, **kwargs):
        """ """
        ...
    def size(self, *args, **kwargs):
        """ """
        ...
    def sort(self, *args, **kwargs):
        """ """
        ...
    def supportedDropActions(self, *args, **kwargs):
        """ """
        ...
    def timerEvent(self, *args, **kwargs):
        """ """
        ...
    def type(self, *args, **kwargs):
        """ """
        ...
    ...

class QFocusFrame(QWidget):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def eventFilter(self, *args, **kwargs):
        """ """
        ...
    def initStyleOption(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def setWidget(self, *args, **kwargs):
        """ """
        ...
    def widget(self, *args, **kwargs):
        """ """
        ...
    ...

class QFontComboBox(QComboBox):
    AllFonts: ... = PySide.QtGui.QFontComboBox.FontFilter.AllFonts
    """
    """

    FontFilter: ...
    """
    <type 'PySide.QtGui.QFontComboBox.FontFilter'>
    """

    FontFilters: ...
    """
    <type 'FontFilters'>
    """

    MonospacedFonts: ...
    """
    PySide.QtGui.QFontComboBox.FontFilter.MonospacedFont...
    """

    NonScalableFonts: ...
    """
    PySide.QtGui.QFontComboBox.FontFilter.NonScalableFo...
    """

    ProportionalFonts: ...
    """
    PySide.QtGui.QFontComboBox.FontFilter.Proportional...
    """

    ScalableFonts: ... = PySide.QtGui.QFontComboBox.FontFilter.ScalableFonts
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    currentFontChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def currentFont(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def fontFilters(self, *args, **kwargs):
        """ """
        ...
    def setCurrentFont(self, *args, **kwargs):
        """ """
        ...
    def setFontFilters(self, *args, **kwargs):
        """ """
        ...
    def setWritingSystem(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def writingSystem(self, *args, **kwargs):
        """ """
        ...
    ...

class QFontDialog(QDialog):
    DontUseNativeDialog: ...
    """
    PySide.QtGui.QFontDialog.FontDialogOption.DontUs...
    """

    FontDialogOption: ...
    """
    <type 'PySide.QtGui.QFontDialog.FontDialogOption'>
    """

    FontDialogOptions: ...
    """
    <type 'FontDialogOptions'>
    """

    NoButtons: ... = PySide.QtGui.QFontDialog.FontDialogOption.NoButtons
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    currentFontChanged: ...
    """
    Signal
    """

    fontSelected: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    @staticmethod
    def getFont(*args, **kwargs):
        """ """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def currentFont(self, *args, **kwargs):
        """ """
        ...
    def done(self, *args, **kwargs):
        """ """
        ...
    def eventFilter(self, *args, **kwargs):
        """ """
        ...
    def open(self, *args, **kwargs):
        """ """
        ...
    def options(self, *args, **kwargs):
        """ """
        ...
    def selectedFont(self, *args, **kwargs):
        """ """
        ...
    def setCurrentFont(self, *args, **kwargs):
        """ """
        ...
    def setOption(self, *args, **kwargs):
        """ """
        ...
    def setOptions(self, *args, **kwargs):
        """ """
        ...
    def setVisible(self, *args, **kwargs):
        """ """
        ...
    def testOption(self, *args, **kwargs):
        """ """
        ...
    ...

class QFormLayout(QLayout):
    AllNonFixedFieldsGrow: ...
    """
    PySide.QtGui.QFormLayout.FieldGrowthPolicy.All...
    """

    DontWrapRows: ... = PySide.QtGui.QFormLayout.RowWrapPolicy.DontWrapRows
    """
    """

    ExpandingFieldsGrow: ...
    """
    PySide.QtGui.QFormLayout.FieldGrowthPolicy.Expan...
    """

    FieldGrowthPolicy: ...
    """
    <type 'PySide.QtGui.QFormLayout.FieldGrowthPolicy'...
    """

    FieldRole: ... = PySide.QtGui.QFormLayout.ItemRole.FieldRole
    """
    """

    FieldsStayAtSizeHint: ...
    """
    PySide.QtGui.QFormLayout.FieldGrowthPolicy.Fiel...
    """

    ItemRole: ...
    """
    <type 'PySide.QtGui.QFormLayout.ItemRole'>
    """

    LabelRole: ... = PySide.QtGui.QFormLayout.ItemRole.LabelRole
    """
    """

    RowWrapPolicy: ...
    """
    <type 'PySide.QtGui.QFormLayout.RowWrapPolicy'>
    """

    SpanningRole: ... = PySide.QtGui.QFormLayout.ItemRole.SpanningRole
    """
    """

    WrapAllRows: ... = PySide.QtGui.QFormLayout.RowWrapPolicy.WrapAllRows
    """
    """

    WrapLongRows: ... = PySide.QtGui.QFormLayout.RowWrapPolicy.WrapLongRows
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addItem(self, *args, **kwargs):
        """ """
        ...
    def addRow(self, *args, **kwargs):
        """ """
        ...
    def count(self, *args, **kwargs):
        """ """
        ...
    def expandingDirections(self, *args, **kwargs):
        """ """
        ...
    def fieldGrowthPolicy(self, *args, **kwargs):
        """ """
        ...
    def formAlignment(self, *args, **kwargs):
        """ """
        ...
    def getItemPosition(self, *args, **kwargs):
        """ """
        ...
    def getLayoutPosition(self, *args, **kwargs):
        """ """
        ...
    def getWidgetPosition(self, *args, **kwargs):
        """ """
        ...
    def hasHeightForWidth(self, *args, **kwargs):
        """ """
        ...
    def heightForWidth(self, *args, **kwargs):
        """ """
        ...
    def horizontalSpacing(self, *args, **kwargs):
        """ """
        ...
    def insertRow(self, *args, **kwargs):
        """ """
        ...
    def invalidate(self, *args, **kwargs):
        """ """
        ...
    def itemAt(self, *args, **kwargs):
        """ """
        ...
    def labelAlignment(self, *args, **kwargs):
        """ """
        ...
    def labelForField(self, *args, **kwargs):
        """ """
        ...
    def minimumSize(self, *args, **kwargs):
        """ """
        ...
    def rowCount(self, *args, **kwargs):
        """ """
        ...
    def rowWrapPolicy(self, *args, **kwargs):
        """ """
        ...
    def setFieldGrowthPolicy(self, *args, **kwargs):
        """ """
        ...
    def setFormAlignment(self, *args, **kwargs):
        """ """
        ...
    def setGeometry(self, *args, **kwargs):
        """ """
        ...
    def setHorizontalSpacing(self, *args, **kwargs):
        """ """
        ...
    def setItem(self, *args, **kwargs):
        """ """
        ...
    def setLabelAlignment(self, *args, **kwargs):
        """ """
        ...
    def setLayout(self, *args, **kwargs):
        """ """
        ...
    def setRowWrapPolicy(self, *args, **kwargs):
        """ """
        ...
    def setSpacing(self, *args, **kwargs):
        """ """
        ...
    def setVerticalSpacing(self, *args, **kwargs):
        """ """
        ...
    def setWidget(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def spacing(self, *args, **kwargs):
        """ """
        ...
    def takeAt(self, *args, **kwargs):
        """ """
        ...
    def verticalSpacing(self, *args, **kwargs):
        """ """
        ...
    ...

class QFrame(QWidget):
    Box: ... = PySide.QtGui.QFrame.Shape.Box
    """
    """

    HLine: ... = PySide.QtGui.QFrame.Shape.HLine
    """
    """

    NoFrame: ... = PySide.QtGui.QFrame.Shape.NoFrame
    """
    """

    Panel: ... = PySide.QtGui.QFrame.Shape.Panel
    """
    """

    Plain: ... = PySide.QtGui.QFrame.Shadow.Plain
    """
    """

    Raised: ... = PySide.QtGui.QFrame.Shadow.Raised
    """
    """

    Shadow: ...
    """
    <type 'PySide.QtGui.QFrame.Shadow'>
    """

    Shadow_Mask: ... = PySide.QtGui.QFrame.StyleMask.Shadow_Mask
    """
    """

    Shape: ...
    """
    <type 'PySide.QtGui.QFrame.Shape'>
    """

    Shape_Mask: ... = PySide.QtGui.QFrame.StyleMask.Shape_Mask
    """
    """

    StyleMask: ...
    """
    <type 'PySide.QtGui.QFrame.StyleMask'>
    """

    StyledPanel: ... = PySide.QtGui.QFrame.Shape.StyledPanel
    """
    """

    Sunken: ... = PySide.QtGui.QFrame.Shadow.Sunken
    """
    """

    VLine: ... = PySide.QtGui.QFrame.Shape.VLine
    """
    """

    WinPanel: ... = PySide.QtGui.QFrame.Shape.WinPanel
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def drawFrame(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def frameRect(self, *args, **kwargs):
        """ """
        ...
    def frameShadow(self, *args, **kwargs):
        """ """
        ...
    def frameShape(self, *args, **kwargs):
        """ """
        ...
    def frameStyle(self, *args, **kwargs):
        """ """
        ...
    def frameWidth(self, *args, **kwargs):
        """ """
        ...
    def lineWidth(self, *args, **kwargs):
        """ """
        ...
    def midLineWidth(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def setFrameRect(self, *args, **kwargs):
        """ """
        ...
    def setFrameShadow(self, *args, **kwargs):
        """ """
        ...
    def setFrameShape(self, *args, **kwargs):
        """ """
        ...
    def setFrameStyle(self, *args, **kwargs):
        """ """
        ...
    def setLineWidth(self, *args, **kwargs):
        """ """
        ...
    def setMidLineWidth(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    ...

class QGesture(PySide.QtCore.QObject):
    CancelAllInContext: ...
    """
    PySide.QtGui.QGesture.GestureCancelPolicy.CancelA...
    """

    CancelNone: ... = PySide.QtGui.QGesture.GestureCancelPolicy.CancelNone
    """
    """

    GestureCancelPolicy: ...
    """
    <type 'PySide.QtGui.QGesture.GestureCancelPolicy...
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def gestureCancelPolicy(self, *args, **kwargs):
        """ """
        ...
    def gestureType(self, *args, **kwargs):
        """ """
        ...
    def hasHotSpot(self, *args, **kwargs):
        """ """
        ...
    def hotSpot(self, *args, **kwargs):
        """ """
        ...
    def setGestureCancelPolicy(self, *args, **kwargs):
        """ """
        ...
    def setHotSpot(self, *args, **kwargs):
        """ """
        ...
    def state(self, *args, **kwargs):
        """ """
        ...
    def unsetHotSpot(self, *args, **kwargs):
        """ """
        ...
    ...

class QGestureEvent(PySide.QtCore.QEvent):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def accept(self, *args, **kwargs):
        """ """
        ...
    def activeGestures(self, *args, **kwargs):
        """ """
        ...
    def canceledGestures(self, *args, **kwargs):
        """ """
        ...
    def gesture(self, *args, **kwargs):
        """ """
        ...
    def gestures(self, *args, **kwargs):
        """ """
        ...
    def ignore(self, *args, **kwargs):
        """ """
        ...
    def isAccepted(self, *args, **kwargs):
        """ """
        ...
    def mapToGraphicsScene(self, *args, **kwargs):
        """ """
        ...
    def setAccepted(self, *args, **kwargs):
        """ """
        ...
    def setWidget(self, *args, **kwargs):
        """ """
        ...
    def widget(self, *args, **kwargs):
        """ """
        ...
    ...

class QGestureRecognizer(Shiboken.Object):
    CancelGesture: ...
    """
    PySide.QtGui.QGestureRecognizer.ResultFlag.CancelGestu...
    """

    ConsumeEventHint: ...
    """
    PySide.QtGui.QGestureRecognizer.ResultFlag.ConsumeE...
    """

    FinishGesture: ...
    """
    PySide.QtGui.QGestureRecognizer.ResultFlag.FinishGestu...
    """

    Ignore: ... = PySide.QtGui.QGestureRecognizer.ResultFlag.Ignore
    """
    """

    MayBeGesture: ... = PySide.QtGui.QGestureRecognizer.ResultFlag.MayBeGesture
    """
    """

    Result: ...
    """
    <type 'Result'>
    """

    ResultFlag: ...
    """
    <type 'PySide.QtGui.QGestureRecognizer.ResultFlag'>
    """

    ResultHint_Mask: ...
    """
    PySide.QtGui.QGestureRecognizer.ResultFlag.ResultHin...
    """

    ResultState_Mask: ...
    """
    PySide.QtGui.QGestureRecognizer.ResultFlag.ResultSt...
    """

    TriggerGesture: ...
    """
    PySide.QtGui.QGestureRecognizer.ResultFlag.TriggerGes...
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    @staticmethod
    def registerRecognizer(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def unregisterRecognizer(*args, **kwargs):
        """ """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def create(self, *args, **kwargs):
        """ """
        ...
    def recognize(self, *args, **kwargs):
        """ """
        ...
    def reset(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsAnchor(PySide.QtCore.QObject):
    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def setSizePolicy(self, *args, **kwargs):
        """ """
        ...
    def setSpacing(self, *args, **kwargs):
        """ """
        ...
    def sizePolicy(self, *args, **kwargs):
        """ """
        ...
    def spacing(self, *args, **kwargs):
        """ """
        ...
    def unsetSpacing(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsAnchorLayout(QGraphicsLayout):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addAnchor(self, *args, **kwargs):
        """ """
        ...
    def addAnchors(self, *args, **kwargs):
        """ """
        ...
    def addCornerAnchors(self, *args, **kwargs):
        """ """
        ...
    def anchor(self, *args, **kwargs):
        """ """
        ...
    def count(self, *args, **kwargs):
        """ """
        ...
    def horizontalSpacing(self, *args, **kwargs):
        """ """
        ...
    def invalidate(self, *args, **kwargs):
        """ """
        ...
    def itemAt(self, *args, **kwargs):
        """ """
        ...
    def removeAt(self, *args, **kwargs):
        """ """
        ...
    def setGeometry(self, *args, **kwargs):
        """ """
        ...
    def setHorizontalSpacing(self, *args, **kwargs):
        """ """
        ...
    def setSpacing(self, *args, **kwargs):
        """ """
        ...
    def setVerticalSpacing(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def verticalSpacing(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsBlurEffect(QGraphicsEffect):
    AnimationHint: ...
    """
    PySide.QtGui.QGraphicsBlurEffect.BlurHint.AnimationHin...
    """

    BlurHint: ...
    """
    <type 'PySide.QtGui.QGraphicsBlurEffect.BlurHint'>
    """

    BlurHints: ...
    """
    <type 'BlurHints'>
    """

    PerformanceHint: ...
    """
    PySide.QtGui.QGraphicsBlurEffect.BlurHint.Performanc...
    """

    QualityHint: ... = PySide.QtGui.QGraphicsBlurEffect.BlurHint.QualityHint
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    blurHintsChanged: ...
    """
    Signal
    """

    blurRadiusChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def blurHints(self, *args, **kwargs):
        """ """
        ...
    def blurRadius(self, *args, **kwargs):
        """ """
        ...
    def boundingRectFor(self, *args, **kwargs):
        """ """
        ...
    def draw(self, *args, **kwargs):
        """ """
        ...
    def setBlurHints(self, *args, **kwargs):
        """ """
        ...
    def setBlurRadius(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsColorizeEffect(QGraphicsEffect):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    colorChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    strengthChanged: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def color(self, *args, **kwargs):
        """ """
        ...
    def draw(self, *args, **kwargs):
        """ """
        ...
    def setColor(self, *args, **kwargs):
        """ """
        ...
    def setStrength(self, *args, **kwargs):
        """ """
        ...
    def strength(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsDropShadowEffect(QGraphicsEffect):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    blurRadiusChanged: ...
    """
    Signal
    """

    colorChanged: ...
    """
    Signal
    """

    offsetChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def blurRadius(self, *args, **kwargs):
        """ """
        ...
    def boundingRectFor(self, *args, **kwargs):
        """ """
        ...
    def color(self, *args, **kwargs):
        """ """
        ...
    def draw(self, *args, **kwargs):
        """ """
        ...
    def offset(self, *args, **kwargs):
        """ """
        ...
    def setBlurRadius(self, *args, **kwargs):
        """ """
        ...
    def setColor(self, *args, **kwargs):
        """ """
        ...
    def setOffset(self, *args, **kwargs):
        """ """
        ...
    def setXOffset(self, *args, **kwargs):
        """ """
        ...
    def setYOffset(self, *args, **kwargs):
        """ """
        ...
    def xOffset(self, *args, **kwargs):
        """ """
        ...
    def yOffset(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsEffect(PySide.QtCore.QObject):
    ChangeFlag: ...
    """
    <type 'PySide.QtGui.QGraphicsEffect.ChangeFlag'>
    """

    ChangeFlags: ...
    """
    <type 'ChangeFlags'>
    """

    NoPad: ... = PySide.QtGui.QGraphicsEffect.PixmapPadMode.NoPad
    """
    """

    PadToEffectiveBoundingRect: ...
    """
    PySide.QtGui.QGraphicsEffect.PixmapPadMod...
    """

    PadToTransparentBorder: ...
    """
    PySide.QtGui.QGraphicsEffect.PixmapPadMode.Pa...
    """

    PixmapPadMode: ...
    """
    <type 'PySide.QtGui.QGraphicsEffect.PixmapPadMode'>
    """

    SourceAttached: ...
    """
    PySide.QtGui.QGraphicsEffect.ChangeFlag.SourceAttache...
    """

    SourceBoundingRectChanged: ...
    """
    PySide.QtGui.QGraphicsEffect.ChangeFlag.So...
    """

    SourceDetached: ...
    """
    PySide.QtGui.QGraphicsEffect.ChangeFlag.SourceDetache...
    """

    SourceInvalidated: ...
    """
    PySide.QtGui.QGraphicsEffect.ChangeFlag.SourceInva...
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    enabledChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def boundingRect(self, *args, **kwargs):
        """ """
        ...
    def boundingRectFor(self, *args, **kwargs):
        """ """
        ...
    def draw(self, *args, **kwargs):
        """ """
        ...
    def drawSource(self, *args, **kwargs):
        """ """
        ...
    def isEnabled(self, *args, **kwargs):
        """ """
        ...
    def setEnabled(self, *args, **kwargs):
        """ """
        ...
    def sourceBoundingRect(self, *args, **kwargs):
        """ """
        ...
    def sourceChanged(self, *args, **kwargs):
        """ """
        ...
    def sourceIsPixmap(self, *args, **kwargs):
        """ """
        ...
    def sourcePixmap(self, *args, **kwargs):
        """ """
        ...
    def update(self, *args, **kwargs):
        """ """
        ...
    def updateBoundingRect(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsEllipseItem(QAbstractGraphicsShapeItem):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def boundingRect(self, *args, **kwargs):
        """ """
        ...
    def contains(self, *args, **kwargs):
        """ """
        ...
    def extension(self, *args, **kwargs):
        """ """
        ...
    def isObscuredBy(self, *args, **kwargs):
        """ """
        ...
    def opaqueArea(self, *args, **kwargs):
        """ """
        ...
    def paint(self, *args, **kwargs):
        """ """
        ...
    def rect(self, *args, **kwargs):
        """ """
        ...
    def setRect(self, *args, **kwargs):
        """ """
        ...
    def setSpanAngle(self, *args, **kwargs):
        """ """
        ...
    def setStartAngle(self, *args, **kwargs):
        """ """
        ...
    def shape(self, *args, **kwargs):
        """ """
        ...
    def spanAngle(self, *args, **kwargs):
        """ """
        ...
    def startAngle(self, *args, **kwargs):
        """ """
        ...
    def type(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsGridLayout(QGraphicsLayout):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addItem(self, *args, **kwargs):
        """ """
        ...
    def alignment(self, *args, **kwargs):
        """ """
        ...
    def columnAlignment(self, *args, **kwargs):
        """ """
        ...
    def columnCount(self, *args, **kwargs):
        """ """
        ...
    def columnMaximumWidth(self, *args, **kwargs):
        """ """
        ...
    def columnMinimumWidth(self, *args, **kwargs):
        """ """
        ...
    def columnPreferredWidth(self, *args, **kwargs):
        """ """
        ...
    def columnSpacing(self, *args, **kwargs):
        """ """
        ...
    def columnStretchFactor(self, *args, **kwargs):
        """ """
        ...
    def count(self, *args, **kwargs):
        """ """
        ...
    def horizontalSpacing(self, *args, **kwargs):
        """ """
        ...
    def invalidate(self, *args, **kwargs):
        """ """
        ...
    def itemAt(self, *args, **kwargs):
        """ """
        ...
    def removeAt(self, *args, **kwargs):
        """ """
        ...
    def removeItem(self, *args, **kwargs):
        """ """
        ...
    def rowAlignment(self, *args, **kwargs):
        """ """
        ...
    def rowCount(self, *args, **kwargs):
        """ """
        ...
    def rowMaximumHeight(self, *args, **kwargs):
        """ """
        ...
    def rowMinimumHeight(self, *args, **kwargs):
        """ """
        ...
    def rowPreferredHeight(self, *args, **kwargs):
        """ """
        ...
    def rowSpacing(self, *args, **kwargs):
        """ """
        ...
    def rowStretchFactor(self, *args, **kwargs):
        """ """
        ...
    def setAlignment(self, *args, **kwargs):
        """ """
        ...
    def setColumnAlignment(self, *args, **kwargs):
        """ """
        ...
    def setColumnFixedWidth(self, *args, **kwargs):
        """ """
        ...
    def setColumnMaximumWidth(self, *args, **kwargs):
        """ """
        ...
    def setColumnMinimumWidth(self, *args, **kwargs):
        """ """
        ...
    def setColumnPreferredWidth(self, *args, **kwargs):
        """ """
        ...
    def setColumnSpacing(self, *args, **kwargs):
        """ """
        ...
    def setColumnStretchFactor(self, *args, **kwargs):
        """ """
        ...
    def setGeometry(self, *args, **kwargs):
        """ """
        ...
    def setHorizontalSpacing(self, *args, **kwargs):
        """ """
        ...
    def setRowAlignment(self, *args, **kwargs):
        """ """
        ...
    def setRowFixedHeight(self, *args, **kwargs):
        """ """
        ...
    def setRowMaximumHeight(self, *args, **kwargs):
        """ """
        ...
    def setRowMinimumHeight(self, *args, **kwargs):
        """ """
        ...
    def setRowPreferredHeight(self, *args, **kwargs):
        """ """
        ...
    def setRowSpacing(self, *args, **kwargs):
        """ """
        ...
    def setRowStretchFactor(self, *args, **kwargs):
        """ """
        ...
    def setSpacing(self, *args, **kwargs):
        """ """
        ...
    def setVerticalSpacing(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def verticalSpacing(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsItem(Shiboken.Object):
    CacheMode: ...
    """
    <type 'PySide.QtGui.QGraphicsItem.CacheMode'>
    """

    DeviceCoordinateCache: ...
    """
    PySide.QtGui.QGraphicsItem.CacheMode.DeviceCoo...
    """

    Extension: ...
    """
    <type 'PySide.QtGui.QGraphicsItem.Extension'>
    """

    GraphicsItemChange: ...
    """
    <type 'PySide.QtGui.QGraphicsItem.GraphicsItemCha...
    """

    GraphicsItemFlag: ...
    """
    <type 'PySide.QtGui.QGraphicsItem.GraphicsItemFlag'...
    """

    GraphicsItemFlags: ...
    """
    <type 'GraphicsItemFlags'>
    """

    ItemAcceptsInputMethod: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemFlag.I...
    """

    ItemChildAddedChange: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange.I...
    """

    ItemChildRemovedChange: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange...
    """

    ItemClipsChildrenToShape: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemFlag...
    """

    ItemClipsToShape: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemFlag.ItemCli...
    """

    ItemCoordinateCache: ...
    """
    PySide.QtGui.QGraphicsItem.CacheMode.ItemCoordin...
    """

    ItemCursorChange: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange.ItemC...
    """

    ItemCursorHasChanged: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange.I...
    """

    ItemDoesntPropagateOpacityToChildren: ...
    """
    PySide.QtGui.QGraphicsItem.Grap...
    """

    ItemEnabledChange: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange.Item...
    """

    ItemEnabledHasChanged: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange....
    """

    ItemFlagsChange: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange.ItemFl...
    """

    ItemFlagsHaveChanged: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange.I...
    """

    ItemHasNoContents: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemFlag.ItemHa...
    """

    ItemIgnoresParentOpacity: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemFlag...
    """

    ItemIgnoresTransformations: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemFl...
    """

    ItemIsFocusScope: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemFlag.ItemIsF...
    """

    ItemIsFocusable: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemFlag.ItemIsFo...
    """

    ItemIsMovable: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemFlag.ItemIsMova...
    """

    ItemIsPanel: ... = PySide.QtGui.QGraphicsItem.GraphicsItemFlag.ItemIsPanel
    """
    """

    ItemIsSelectable: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemFlag.ItemIsS...
    """

    ItemMatrixChange: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange.ItemM...
    """

    ItemNegativeZStacksBehindParent: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsI...
    """

    ItemOpacityChange: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange.Item...
    """

    ItemOpacityHasChanged: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange....
    """

    ItemParentChange: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange.ItemP...
    """

    ItemParentHasChanged: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange.I...
    """

    ItemPositionChange: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange.Ite...
    """

    ItemPositionHasChanged: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange...
    """

    ItemRotationChange: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange.Ite...
    """

    ItemRotationHasChanged: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange...
    """

    ItemScaleChange: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange.ItemSc...
    """

    ItemScaleHasChanged: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange.It...
    """

    ItemSceneChange: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange.ItemSc...
    """

    ItemSceneHasChanged: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange.It...
    """

    ItemScenePositionHasChanged: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemC...
    """

    ItemSelectedChange: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange.Ite...
    """

    ItemSelectedHasChanged: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange...
    """

    ItemSendsGeometryChanges: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemFlag...
    """

    ItemSendsScenePositionChanges: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsIte...
    """

    ItemStacksBehindParent: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemFlag.I...
    """

    ItemStopsClickFocusPropagation: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsIt...
    """

    ItemStopsFocusHandling: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemFlag.I...
    """

    ItemToolTipChange: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange.Item...
    """

    ItemToolTipHasChanged: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange....
    """

    ItemTransformChange: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange.It...
    """

    ItemTransformHasChanged: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChang...
    """

    ItemTransformOriginPointChange: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsIt...
    """

    ItemTransformOriginPointHasChanged: ...
    """
    PySide.QtGui.QGraphicsItem.Graphi...
    """

    ItemUsesExtendedStyleOption: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemF...
    """

    ItemVisibleChange: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange.Item...
    """

    ItemVisibleHasChanged: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange....
    """

    ItemZValueChange: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange.ItemZ...
    """

    ItemZValueHasChanged: ...
    """
    PySide.QtGui.QGraphicsItem.GraphicsItemChange.I...
    """

    NoCache: ... = PySide.QtGui.QGraphicsItem.CacheMode.NoCache
    """
    """

    NonModal: ... = PySide.QtGui.QGraphicsItem.PanelModality.NonModal
    """
    """

    PanelModal: ... = PySide.QtGui.QGraphicsItem.PanelModality.PanelModal
    """
    """

    PanelModality: ...
    """
    <type 'PySide.QtGui.QGraphicsItem.PanelModality'>
    """

    SceneModal: ... = PySide.QtGui.QGraphicsItem.PanelModality.SceneModal
    """
    """

    UserExtension: ... = PySide.QtGui.QGraphicsItem.Extension.UserExtension
    """
    """

    UserType: ... = 65536
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def __repr__(self, *args, **kwargs):
        """
        x.__repr__() <==> repr(x)
        """
        ...
    def acceptDrops(self, *args, **kwargs):
        """ """
        ...
    def acceptHoverEvents(self, *args, **kwargs):
        """ """
        ...
    def acceptTouchEvents(self, *args, **kwargs):
        """ """
        ...
    def acceptedMouseButtons(self, *args, **kwargs):
        """ """
        ...
    def acceptsHoverEvents(self, *args, **kwargs):
        """ """
        ...
    def addToIndex(self, *args, **kwargs):
        """ """
        ...
    def advance(self, *args, **kwargs):
        """ """
        ...
    def boundingRect(self, *args, **kwargs):
        """ """
        ...
    def boundingRegion(self, *args, **kwargs):
        """ """
        ...
    def boundingRegionGranularity(self, *args, **kwargs):
        """ """
        ...
    def cacheMode(self, *args, **kwargs):
        """ """
        ...
    def childItems(self, *args, **kwargs):
        """ """
        ...
    def childrenBoundingRect(self, *args, **kwargs):
        """ """
        ...
    def clearFocus(self, *args, **kwargs):
        """ """
        ...
    def clipPath(self, *args, **kwargs):
        """ """
        ...
    def collidesWithItem(self, *args, **kwargs):
        """ """
        ...
    def collidesWithPath(self, *args, **kwargs):
        """ """
        ...
    def collidingItems(self, *args, **kwargs):
        """ """
        ...
    def commonAncestorItem(self, *args, **kwargs):
        """ """
        ...
    def contains(self, *args, **kwargs):
        """ """
        ...
    def contextMenuEvent(self, *args, **kwargs):
        """ """
        ...
    def cursor(self, *args, **kwargs):
        """ """
        ...
    def data(self, *args, **kwargs):
        """ """
        ...
    def deviceTransform(self, *args, **kwargs):
        """ """
        ...
    def dragEnterEvent(self, *args, **kwargs):
        """ """
        ...
    def dragLeaveEvent(self, *args, **kwargs):
        """ """
        ...
    def dragMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def dropEvent(self, *args, **kwargs):
        """ """
        ...
    def effectiveOpacity(self, *args, **kwargs):
        """ """
        ...
    def ensureVisible(self, *args, **kwargs):
        """ """
        ...
    def extension(self, *args, **kwargs):
        """ """
        ...
    def filtersChildEvents(self, *args, **kwargs):
        """ """
        ...
    def flags(self, *args, **kwargs):
        """ """
        ...
    def focusInEvent(self, *args, **kwargs):
        """ """
        ...
    def focusItem(self, *args, **kwargs):
        """ """
        ...
    def focusOutEvent(self, *args, **kwargs):
        """ """
        ...
    def focusProxy(self, *args, **kwargs):
        """ """
        ...
    def focusScopeItem(self, *args, **kwargs):
        """ """
        ...
    def grabKeyboard(self, *args, **kwargs):
        """ """
        ...
    def grabMouse(self, *args, **kwargs):
        """ """
        ...
    def graphicsEffect(self, *args, **kwargs):
        """ """
        ...
    def group(self, *args, **kwargs):
        """ """
        ...
    def handlesChildEvents(self, *args, **kwargs):
        """ """
        ...
    def hasCursor(self, *args, **kwargs):
        """ """
        ...
    def hasFocus(self, *args, **kwargs):
        """ """
        ...
    def hide(self, *args, **kwargs):
        """ """
        ...
    def hoverEnterEvent(self, *args, **kwargs):
        """ """
        ...
    def hoverLeaveEvent(self, *args, **kwargs):
        """ """
        ...
    def hoverMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def inputMethodEvent(self, *args, **kwargs):
        """ """
        ...
    def inputMethodHints(self, *args, **kwargs):
        """ """
        ...
    def inputMethodQuery(self, *args, **kwargs):
        """ """
        ...
    def installSceneEventFilter(self, *args, **kwargs):
        """ """
        ...
    def isActive(self, *args, **kwargs):
        """ """
        ...
    def isAncestorOf(self, *args, **kwargs):
        """ """
        ...
    def isBlockedByModalPanel(self, *args, **kwargs):
        """ """
        ...
    def isClipped(self, *args, **kwargs):
        """ """
        ...
    def isEnabled(self, *args, **kwargs):
        """ """
        ...
    def isObscured(self, *args, **kwargs):
        """ """
        ...
    def isObscuredBy(self, *args, **kwargs):
        """ """
        ...
    def isPanel(self, *args, **kwargs):
        """ """
        ...
    def isSelected(self, *args, **kwargs):
        """ """
        ...
    def isUnderMouse(self, *args, **kwargs):
        """ """
        ...
    def isVisible(self, *args, **kwargs):
        """ """
        ...
    def isVisibleTo(self, *args, **kwargs):
        """ """
        ...
    def isWidget(self, *args, **kwargs):
        """ """
        ...
    def isWindow(self, *args, **kwargs):
        """ """
        ...
    def itemChange(self, *args, **kwargs):
        """ """
        ...
    def itemTransform(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def keyReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def mapFromItem(self, *args, **kwargs):
        """ """
        ...
    def mapFromParent(self, *args, **kwargs):
        """ """
        ...
    def mapFromScene(self, *args, **kwargs):
        """ """
        ...
    def mapRectFromItem(self, *args, **kwargs):
        """ """
        ...
    def mapRectFromParent(self, *args, **kwargs):
        """ """
        ...
    def mapRectFromScene(self, *args, **kwargs):
        """ """
        ...
    def mapRectToItem(self, *args, **kwargs):
        """ """
        ...
    def mapRectToParent(self, *args, **kwargs):
        """ """
        ...
    def mapRectToScene(self, *args, **kwargs):
        """ """
        ...
    def mapToItem(self, *args, **kwargs):
        """ """
        ...
    def mapToParent(self, *args, **kwargs):
        """ """
        ...
    def mapToScene(self, *args, **kwargs):
        """ """
        ...
    def mouseDoubleClickEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def moveBy(self, *args, **kwargs):
        """ """
        ...
    def opacity(self, *args, **kwargs):
        """ """
        ...
    def opaqueArea(self, *args, **kwargs):
        """ """
        ...
    def paint(self, *args, **kwargs):
        """ """
        ...
    def panel(self, *args, **kwargs):
        """ """
        ...
    def panelModality(self, *args, **kwargs):
        """ """
        ...
    def parentItem(self, *args, **kwargs):
        """ """
        ...
    def parentObject(self, *args, **kwargs):
        """ """
        ...
    def parentWidget(self, *args, **kwargs):
        """ """
        ...
    def pos(self, *args, **kwargs):
        """ """
        ...
    def prepareGeometryChange(self, *args, **kwargs):
        """ """
        ...
    def removeFromIndex(self, *args, **kwargs):
        """ """
        ...
    def removeSceneEventFilter(self, *args, **kwargs):
        """ """
        ...
    def resetTransform(self, *args, **kwargs):
        """ """
        ...
    def rotate(self, *args, **kwargs):
        """ """
        ...
    def rotation(self, *args, **kwargs):
        """ """
        ...
    def scale(self, *args, **kwargs):
        """ """
        ...
    def scene(self, *args, **kwargs):
        """ """
        ...
    def sceneBoundingRect(self, *args, **kwargs):
        """ """
        ...
    def sceneEvent(self, *args, **kwargs):
        """ """
        ...
    def sceneEventFilter(self, *args, **kwargs):
        """ """
        ...
    def scenePos(self, *args, **kwargs):
        """ """
        ...
    def sceneTransform(self, *args, **kwargs):
        """ """
        ...
    def scroll(self, *args, **kwargs):
        """ """
        ...
    def setAcceptDrops(self, *args, **kwargs):
        """ """
        ...
    def setAcceptHoverEvents(self, *args, **kwargs):
        """ """
        ...
    def setAcceptTouchEvents(self, *args, **kwargs):
        """ """
        ...
    def setAcceptedMouseButtons(self, *args, **kwargs):
        """ """
        ...
    def setAcceptsHoverEvents(self, *args, **kwargs):
        """ """
        ...
    def setActive(self, *args, **kwargs):
        """ """
        ...
    def setBoundingRegionGranularity(self, *args, **kwargs):
        """ """
        ...
    def setCacheMode(self, *args, **kwargs):
        """ """
        ...
    def setCursor(self, *args, **kwargs):
        """ """
        ...
    def setData(self, *args, **kwargs):
        """ """
        ...
    def setEnabled(self, *args, **kwargs):
        """ """
        ...
    def setFiltersChildEvents(self, *args, **kwargs):
        """ """
        ...
    def setFlag(self, *args, **kwargs):
        """ """
        ...
    def setFlags(self, *args, **kwargs):
        """ """
        ...
    def setFocus(self, *args, **kwargs):
        """ """
        ...
    def setFocusProxy(self, *args, **kwargs):
        """ """
        ...
    def setGraphicsEffect(self, *args, **kwargs):
        """ """
        ...
    def setGroup(self, *args, **kwargs):
        """ """
        ...
    def setHandlesChildEvents(self, *args, **kwargs):
        """ """
        ...
    def setInputMethodHints(self, *args, **kwargs):
        """ """
        ...
    def setOpacity(self, *args, **kwargs):
        """ """
        ...
    def setPanelModality(self, *args, **kwargs):
        """ """
        ...
    def setParentItem(self, *args, **kwargs):
        """ """
        ...
    def setPos(self, *args, **kwargs):
        """ """
        ...
    def setRotation(self, *args, **kwargs):
        """ """
        ...
    def setScale(self, *args, **kwargs):
        """ """
        ...
    def setSelected(self, *args, **kwargs):
        """ """
        ...
    def setToolTip(self, *args, **kwargs):
        """ """
        ...
    def setTransform(self, *args, **kwargs):
        """ """
        ...
    def setTransformOriginPoint(self, *args, **kwargs):
        """ """
        ...
    def setTransformations(self, *args, **kwargs):
        """ """
        ...
    def setVisible(self, *args, **kwargs):
        """ """
        ...
    def setX(self, *args, **kwargs):
        """ """
        ...
    def setY(self, *args, **kwargs):
        """ """
        ...
    def setZValue(self, *args, **kwargs):
        """ """
        ...
    def shape(self, *args, **kwargs):
        """ """
        ...
    def shear(self, *args, **kwargs):
        """ """
        ...
    def show(self, *args, **kwargs):
        """ """
        ...
    def stackBefore(self, *args, **kwargs):
        """ """
        ...
    def toGraphicsObject(self, *args, **kwargs):
        """ """
        ...
    def toolTip(self, *args, **kwargs):
        """ """
        ...
    def topLevelItem(self, *args, **kwargs):
        """ """
        ...
    def topLevelWidget(self, *args, **kwargs):
        """ """
        ...
    def transform(self, *args, **kwargs):
        """ """
        ...
    def transformOriginPoint(self, *args, **kwargs):
        """ """
        ...
    def transformations(self, *args, **kwargs):
        """ """
        ...
    def translate(self, *args, **kwargs):
        """ """
        ...
    def type(self, *args, **kwargs):
        """ """
        ...
    def ungrabKeyboard(self, *args, **kwargs):
        """ """
        ...
    def ungrabMouse(self, *args, **kwargs):
        """ """
        ...
    def unsetCursor(self, *args, **kwargs):
        """ """
        ...
    def update(self, *args, **kwargs):
        """ """
        ...
    def updateMicroFocus(self, *args, **kwargs):
        """ """
        ...
    def wheelEvent(self, *args, **kwargs):
        """ """
        ...
    def window(self, *args, **kwargs):
        """ """
        ...
    def x(self, *args, **kwargs):
        """ """
        ...
    def y(self, *args, **kwargs):
        """ """
        ...
    def zValue(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsItemGroup(QGraphicsItem):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addToGroup(self, *args, **kwargs):
        """ """
        ...
    def boundingRect(self, *args, **kwargs):
        """ """
        ...
    def isObscuredBy(self, *args, **kwargs):
        """ """
        ...
    def opaqueArea(self, *args, **kwargs):
        """ """
        ...
    def paint(self, *args, **kwargs):
        """ """
        ...
    def removeFromGroup(self, *args, **kwargs):
        """ """
        ...
    def type(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsLayout(QGraphicsLayoutItem):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    @staticmethod
    def instantInvalidatePropagation(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setInstantInvalidatePropagation(*args, **kwargs):
        """ """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def activate(self, *args, **kwargs):
        """ """
        ...
    def addChildLayoutItem(self, *args, **kwargs):
        """ """
        ...
    def count(self, *args, **kwargs):
        """ """
        ...
    def getContentsMargins(self, *args, **kwargs):
        """ """
        ...
    def invalidate(self, *args, **kwargs):
        """ """
        ...
    def isActivated(self, *args, **kwargs):
        """ """
        ...
    def itemAt(self, *args, **kwargs):
        """ """
        ...
    def removeAt(self, *args, **kwargs):
        """ """
        ...
    def setContentsMargins(self, *args, **kwargs):
        """ """
        ...
    def updateGeometry(self, *args, **kwargs):
        """ """
        ...
    def widgetEvent(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsLayoutItem(Shiboken.Object):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def contentsRect(self, *args, **kwargs):
        """ """
        ...
    def effectiveSizeHint(self, *args, **kwargs):
        """ """
        ...
    def geometry(self, *args, **kwargs):
        """ """
        ...
    def getContentsMargins(self, *args, **kwargs):
        """ """
        ...
    def graphicsItem(self, *args, **kwargs):
        """ """
        ...
    def isLayout(self, *args, **kwargs):
        """ """
        ...
    def maximumHeight(self, *args, **kwargs):
        """ """
        ...
    def maximumSize(self, *args, **kwargs):
        """ """
        ...
    def maximumWidth(self, *args, **kwargs):
        """ """
        ...
    def minimumHeight(self, *args, **kwargs):
        """ """
        ...
    def minimumSize(self, *args, **kwargs):
        """ """
        ...
    def minimumWidth(self, *args, **kwargs):
        """ """
        ...
    def ownedByLayout(self, *args, **kwargs):
        """ """
        ...
    def parentLayoutItem(self, *args, **kwargs):
        """ """
        ...
    def preferredHeight(self, *args, **kwargs):
        """ """
        ...
    def preferredSize(self, *args, **kwargs):
        """ """
        ...
    def preferredWidth(self, *args, **kwargs):
        """ """
        ...
    def setGeometry(self, *args, **kwargs):
        """ """
        ...
    def setGraphicsItem(self, *args, **kwargs):
        """ """
        ...
    def setMaximumHeight(self, *args, **kwargs):
        """ """
        ...
    def setMaximumSize(self, *args, **kwargs):
        """ """
        ...
    def setMaximumWidth(self, *args, **kwargs):
        """ """
        ...
    def setMinimumHeight(self, *args, **kwargs):
        """ """
        ...
    def setMinimumSize(self, *args, **kwargs):
        """ """
        ...
    def setMinimumWidth(self, *args, **kwargs):
        """ """
        ...
    def setOwnedByLayout(self, *args, **kwargs):
        """ """
        ...
    def setParentLayoutItem(self, *args, **kwargs):
        """ """
        ...
    def setPreferredHeight(self, *args, **kwargs):
        """ """
        ...
    def setPreferredSize(self, *args, **kwargs):
        """ """
        ...
    def setPreferredWidth(self, *args, **kwargs):
        """ """
        ...
    def setSizePolicy(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def sizePolicy(self, *args, **kwargs):
        """ """
        ...
    def updateGeometry(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsLineItem(QGraphicsItem):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def boundingRect(self, *args, **kwargs):
        """ """
        ...
    def contains(self, *args, **kwargs):
        """ """
        ...
    def extension(self, *args, **kwargs):
        """ """
        ...
    def isObscuredBy(self, *args, **kwargs):
        """ """
        ...
    def line(self, *args, **kwargs):
        """ """
        ...
    def opaqueArea(self, *args, **kwargs):
        """ """
        ...
    def paint(self, *args, **kwargs):
        """ """
        ...
    def pen(self, *args, **kwargs):
        """ """
        ...
    def setLine(self, *args, **kwargs):
        """ """
        ...
    def setPen(self, *args, **kwargs):
        """ """
        ...
    def shape(self, *args, **kwargs):
        """ """
        ...
    def type(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsLinearLayout(QGraphicsLayout):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addItem(self, *args, **kwargs):
        """ """
        ...
    def addStretch(self, *args, **kwargs):
        """ """
        ...
    def alignment(self, *args, **kwargs):
        """ """
        ...
    def count(self, *args, **kwargs):
        """ """
        ...
    def dump(self, *args, **kwargs):
        """ """
        ...
    def insertItem(self, *args, **kwargs):
        """ """
        ...
    def insertStretch(self, *args, **kwargs):
        """ """
        ...
    def invalidate(self, *args, **kwargs):
        """ """
        ...
    def itemAt(self, *args, **kwargs):
        """ """
        ...
    def itemSpacing(self, *args, **kwargs):
        """ """
        ...
    def orientation(self, *args, **kwargs):
        """ """
        ...
    def removeAt(self, *args, **kwargs):
        """ """
        ...
    def removeItem(self, *args, **kwargs):
        """ """
        ...
    def setAlignment(self, *args, **kwargs):
        """ """
        ...
    def setGeometry(self, *args, **kwargs):
        """ """
        ...
    def setItemSpacing(self, *args, **kwargs):
        """ """
        ...
    def setOrientation(self, *args, **kwargs):
        """ """
        ...
    def setSpacing(self, *args, **kwargs):
        """ """
        ...
    def setStretchFactor(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def spacing(self, *args, **kwargs):
        """ """
        ...
    def stretchFactor(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsObject(PySide.QtCore.QObject, QGraphicsItem):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    childrenChanged: ...
    """
    Signal
    """

    enabledChanged: ...
    """
    Signal
    """

    heightChanged: ...
    """
    Signal
    """

    opacityChanged: ...
    """
    Signal
    """

    parentChanged: ...
    """
    Signal
    """

    rotationChanged: ...
    """
    Signal
    """

    scaleChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    visibleChanged: ...
    """
    Signal
    """

    widthChanged: ...
    """
    Signal
    """

    xChanged: ...
    """
    Signal
    """

    yChanged: ...
    """
    Signal
    """

    zChanged: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def grabGesture(self, *args, **kwargs):
        """ """
        ...
    def ungrabGesture(self, *args, **kwargs):
        """ """
        ...
    def updateMicroFocus(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsOpacityEffect(QGraphicsEffect):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    opacityChanged: ...
    """
    Signal
    """

    opacityMaskChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def draw(self, *args, **kwargs):
        """ """
        ...
    def opacity(self, *args, **kwargs):
        """ """
        ...
    def opacityMask(self, *args, **kwargs):
        """ """
        ...
    def setOpacity(self, *args, **kwargs):
        """ """
        ...
    def setOpacityMask(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsPathItem(QAbstractGraphicsShapeItem):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def boundingRect(self, *args, **kwargs):
        """ """
        ...
    def contains(self, *args, **kwargs):
        """ """
        ...
    def extension(self, *args, **kwargs):
        """ """
        ...
    def isObscuredBy(self, *args, **kwargs):
        """ """
        ...
    def opaqueArea(self, *args, **kwargs):
        """ """
        ...
    def paint(self, *args, **kwargs):
        """ """
        ...
    def path(self, *args, **kwargs):
        """ """
        ...
    def setPath(self, *args, **kwargs):
        """ """
        ...
    def shape(self, *args, **kwargs):
        """ """
        ...
    def type(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsPixmapItem(QGraphicsItem):
    BoundingRectShape: ...
    """
    PySide.QtGui.QGraphicsPixmapItem.ShapeMode.Boundin...
    """

    HeuristicMaskShape: ...
    """
    PySide.QtGui.QGraphicsPixmapItem.ShapeMode.Heuris...
    """

    MaskShape: ... = PySide.QtGui.QGraphicsPixmapItem.ShapeMode.MaskShape
    """
    """

    ShapeMode: ...
    """
    <type 'PySide.QtGui.QGraphicsPixmapItem.ShapeMode'>
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def boundingRect(self, *args, **kwargs):
        """ """
        ...
    def contains(self, *args, **kwargs):
        """ """
        ...
    def extension(self, *args, **kwargs):
        """ """
        ...
    def isObscuredBy(self, *args, **kwargs):
        """ """
        ...
    def offset(self, *args, **kwargs):
        """ """
        ...
    def opaqueArea(self, *args, **kwargs):
        """ """
        ...
    def paint(self, *args, **kwargs):
        """ """
        ...
    def pixmap(self, *args, **kwargs):
        """ """
        ...
    def setOffset(self, *args, **kwargs):
        """ """
        ...
    def setPixmap(self, *args, **kwargs):
        """ """
        ...
    def setShapeMode(self, *args, **kwargs):
        """ """
        ...
    def setTransformationMode(self, *args, **kwargs):
        """ """
        ...
    def shape(self, *args, **kwargs):
        """ """
        ...
    def shapeMode(self, *args, **kwargs):
        """ """
        ...
    def transformationMode(self, *args, **kwargs):
        """ """
        ...
    def type(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsPolygonItem(QAbstractGraphicsShapeItem):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def boundingRect(self, *args, **kwargs):
        """ """
        ...
    def contains(self, *args, **kwargs):
        """ """
        ...
    def extension(self, *args, **kwargs):
        """ """
        ...
    def fillRule(self, *args, **kwargs):
        """ """
        ...
    def isObscuredBy(self, *args, **kwargs):
        """ """
        ...
    def opaqueArea(self, *args, **kwargs):
        """ """
        ...
    def paint(self, *args, **kwargs):
        """ """
        ...
    def polygon(self, *args, **kwargs):
        """ """
        ...
    def setFillRule(self, *args, **kwargs):
        """ """
        ...
    def setPolygon(self, *args, **kwargs):
        """ """
        ...
    def shape(self, *args, **kwargs):
        """ """
        ...
    def type(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsProxyWidget(QGraphicsWidget):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def contextMenuEvent(self, *args, **kwargs):
        """ """
        ...
    def createProxyForChildWidget(self, *args, **kwargs):
        """ """
        ...
    def dragEnterEvent(self, *args, **kwargs):
        """ """
        ...
    def dragLeaveEvent(self, *args, **kwargs):
        """ """
        ...
    def dragMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def dropEvent(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def eventFilter(self, *args, **kwargs):
        """ """
        ...
    def focusInEvent(self, *args, **kwargs):
        """ """
        ...
    def focusNextPrevChild(self, *args, **kwargs):
        """ """
        ...
    def focusOutEvent(self, *args, **kwargs):
        """ """
        ...
    def grabMouseEvent(self, *args, **kwargs):
        """ """
        ...
    def hideEvent(self, *args, **kwargs):
        """ """
        ...
    def hoverEnterEvent(self, *args, **kwargs):
        """ """
        ...
    def hoverLeaveEvent(self, *args, **kwargs):
        """ """
        ...
    def hoverMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def itemChange(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def keyReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseDoubleClickEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def newProxyWidget(self, *args, **kwargs):
        """ """
        ...
    def paint(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def setGeometry(self, *args, **kwargs):
        """ """
        ...
    def setWidget(self, *args, **kwargs):
        """ """
        ...
    def showEvent(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def subWidgetRect(self, *args, **kwargs):
        """ """
        ...
    def type(self, *args, **kwargs):
        """ """
        ...
    def ungrabMouseEvent(self, *args, **kwargs):
        """ """
        ...
    def wheelEvent(self, *args, **kwargs):
        """ """
        ...
    def widget(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsRectItem(QAbstractGraphicsShapeItem):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def boundingRect(self, *args, **kwargs):
        """ """
        ...
    def contains(self, *args, **kwargs):
        """ """
        ...
    def extension(self, *args, **kwargs):
        """ """
        ...
    def isObscuredBy(self, *args, **kwargs):
        """ """
        ...
    def opaqueArea(self, *args, **kwargs):
        """ """
        ...
    def paint(self, *args, **kwargs):
        """ """
        ...
    def rect(self, *args, **kwargs):
        """ """
        ...
    def setRect(self, *args, **kwargs):
        """ """
        ...
    def shape(self, *args, **kwargs):
        """ """
        ...
    def type(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsRotation(QGraphicsTransform):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    angleChanged: ...
    """
    Signal
    """

    axisChanged: ...
    """
    Signal
    """

    originChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def angle(self, *args, **kwargs):
        """ """
        ...
    def applyTo(self, *args, **kwargs):
        """ """
        ...
    def axis(self, *args, **kwargs):
        """ """
        ...
    def origin(self, *args, **kwargs):
        """ """
        ...
    def setAngle(self, *args, **kwargs):
        """ """
        ...
    def setAxis(self, *args, **kwargs):
        """ """
        ...
    def setOrigin(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsScale(QGraphicsTransform):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    originChanged: ...
    """
    Signal
    """

    scaleChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    xScaleChanged: ...
    """
    Signal
    """

    yScaleChanged: ...
    """
    Signal
    """

    zScaleChanged: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def applyTo(self, *args, **kwargs):
        """ """
        ...
    def origin(self, *args, **kwargs):
        """ """
        ...
    def setOrigin(self, *args, **kwargs):
        """ """
        ...
    def setXScale(self, *args, **kwargs):
        """ """
        ...
    def setYScale(self, *args, **kwargs):
        """ """
        ...
    def setZScale(self, *args, **kwargs):
        """ """
        ...
    def xScale(self, *args, **kwargs):
        """ """
        ...
    def yScale(self, *args, **kwargs):
        """ """
        ...
    def zScale(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsScene(PySide.QtCore.QObject):
    AllLayers: ... = PySide.QtGui.QGraphicsScene.SceneLayer.AllLayers
    """
    """

    BackgroundLayer: ...
    """
    PySide.QtGui.QGraphicsScene.SceneLayer.BackgroundLay...
    """

    BspTreeIndex: ...
    """
    PySide.QtGui.QGraphicsScene.ItemIndexMethod.BspTreeInde...
    """

    ForegroundLayer: ...
    """
    PySide.QtGui.QGraphicsScene.SceneLayer.ForegroundLay...
    """

    ItemIndexMethod: ...
    """
    <type 'PySide.QtGui.QGraphicsScene.ItemIndexMethod'>
    """

    ItemLayer: ... = PySide.QtGui.QGraphicsScene.SceneLayer.ItemLayer
    """
    """

    NoIndex: ... = PySide.QtGui.QGraphicsScene.ItemIndexMethod.NoIndex
    """
    """

    SceneLayer: ...
    """
    <type 'PySide.QtGui.QGraphicsScene.SceneLayer'>
    """

    SceneLayers: ...
    """
    <type 'SceneLayers'>
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    changed: ...
    """
    Signal
    """

    sceneRectChanged: ...
    """
    Signal
    """

    selectionChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def activePanel(self, *args, **kwargs):
        """ """
        ...
    def activeWindow(self, *args, **kwargs):
        """ """
        ...
    def addEllipse(self, *args, **kwargs):
        """ """
        ...
    def addItem(self, *args, **kwargs):
        """ """
        ...
    def addLine(self, *args, **kwargs):
        """ """
        ...
    def addPath(self, *args, **kwargs):
        """ """
        ...
    def addPixmap(self, *args, **kwargs):
        """ """
        ...
    def addPolygon(self, *args, **kwargs):
        """ """
        ...
    def addRect(self, *args, **kwargs):
        """ """
        ...
    def addSimpleText(self, *args, **kwargs):
        """ """
        ...
    def addText(self, *args, **kwargs):
        """ """
        ...
    def addWidget(self, *args, **kwargs):
        """ """
        ...
    def advance(self, *args, **kwargs):
        """ """
        ...
    def backgroundBrush(self, *args, **kwargs):
        """ """
        ...
    def bspTreeDepth(self, *args, **kwargs):
        """ """
        ...
    def clear(self, *args, **kwargs):
        """ """
        ...
    def clearFocus(self, *args, **kwargs):
        """ """
        ...
    def clearSelection(self, *args, **kwargs):
        """ """
        ...
    def collidingItems(self, *args, **kwargs):
        """ """
        ...
    def contextMenuEvent(self, *args, **kwargs):
        """ """
        ...
    def createItemGroup(self, *args, **kwargs):
        """ """
        ...
    def destroyItemGroup(self, *args, **kwargs):
        """ """
        ...
    def dragEnterEvent(self, *args, **kwargs):
        """ """
        ...
    def dragLeaveEvent(self, *args, **kwargs):
        """ """
        ...
    def dragMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def drawBackground(self, *args, **kwargs):
        """ """
        ...
    def drawForeground(self, *args, **kwargs):
        """ """
        ...
    def dropEvent(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def eventFilter(self, *args, **kwargs):
        """ """
        ...
    def focusInEvent(self, *args, **kwargs):
        """ """
        ...
    def focusItem(self, *args, **kwargs):
        """ """
        ...
    def focusNextPrevChild(self, *args, **kwargs):
        """ """
        ...
    def focusOutEvent(self, *args, **kwargs):
        """ """
        ...
    def font(self, *args, **kwargs):
        """ """
        ...
    def foregroundBrush(self, *args, **kwargs):
        """ """
        ...
    def hasFocus(self, *args, **kwargs):
        """ """
        ...
    def height(self, *args, **kwargs):
        """ """
        ...
    def helpEvent(self, *args, **kwargs):
        """ """
        ...
    def inputMethodEvent(self, *args, **kwargs):
        """ """
        ...
    def inputMethodQuery(self, *args, **kwargs):
        """ """
        ...
    def invalidate(self, *args, **kwargs):
        """ """
        ...
    def isActive(self, *args, **kwargs):
        """ """
        ...
    def isSortCacheEnabled(self, *args, **kwargs):
        """ """
        ...
    def itemAt(self, *args, **kwargs):
        """ """
        ...
    def itemIndexMethod(self, *args, **kwargs):
        """ """
        ...
    def items(self, *args, **kwargs):
        """ """
        ...
    def itemsBoundingRect(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def keyReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseDoubleClickEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseGrabberItem(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def palette(self, *args, **kwargs):
        """ """
        ...
    def removeItem(self, *args, **kwargs):
        """ """
        ...
    def render(self, *args, **kwargs):
        """ """
        ...
    def sceneRect(self, *args, **kwargs):
        """ """
        ...
    def selectedItems(self, *args, **kwargs):
        """ """
        ...
    def selectionArea(self, *args, **kwargs):
        """ """
        ...
    def sendEvent(self, *args, **kwargs):
        """ """
        ...
    def setActivePanel(self, *args, **kwargs):
        """ """
        ...
    def setActiveWindow(self, *args, **kwargs):
        """ """
        ...
    def setBackgroundBrush(self, *args, **kwargs):
        """ """
        ...
    def setBspTreeDepth(self, *args, **kwargs):
        """ """
        ...
    def setFocus(self, *args, **kwargs):
        """ """
        ...
    def setFocusItem(self, *args, **kwargs):
        """ """
        ...
    def setFont(self, *args, **kwargs):
        """ """
        ...
    def setForegroundBrush(self, *args, **kwargs):
        """ """
        ...
    def setItemIndexMethod(self, *args, **kwargs):
        """ """
        ...
    def setPalette(self, *args, **kwargs):
        """ """
        ...
    def setSceneRect(self, *args, **kwargs):
        """ """
        ...
    def setSelectionArea(self, *args, **kwargs):
        """ """
        ...
    def setSortCacheEnabled(self, *args, **kwargs):
        """ """
        ...
    def setStickyFocus(self, *args, **kwargs):
        """ """
        ...
    def setStyle(self, *args, **kwargs):
        """ """
        ...
    def stickyFocus(self, *args, **kwargs):
        """ """
        ...
    def style(self, *args, **kwargs):
        """ """
        ...
    def update(self, *args, **kwargs):
        """ """
        ...
    def views(self, *args, **kwargs):
        """ """
        ...
    def wheelEvent(self, *args, **kwargs):
        """ """
        ...
    def width(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsSceneContextMenuEvent(QGraphicsSceneEvent):
    Keyboard: ... = PySide.QtGui.QGraphicsSceneContextMenuEvent.Reason.Keyboard
    """
    """

    Mouse: ... = PySide.QtGui.QGraphicsSceneContextMenuEvent.Reason.Mouse
    """
    """

    Other: ... = PySide.QtGui.QGraphicsSceneContextMenuEvent.Reason.Other
    """
    """

    Reason: ...
    """
    <type 'PySide.QtGui.QGraphicsSceneContextMenuEvent.Reason'>
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def modifiers(self, *args, **kwargs):
        """ """
        ...
    def pos(self, *args, **kwargs):
        """ """
        ...
    def reason(self, *args, **kwargs):
        """ """
        ...
    def scenePos(self, *args, **kwargs):
        """ """
        ...
    def screenPos(self, *args, **kwargs):
        """ """
        ...
    def setModifiers(self, *args, **kwargs):
        """ """
        ...
    def setPos(self, *args, **kwargs):
        """ """
        ...
    def setReason(self, *args, **kwargs):
        """ """
        ...
    def setScenePos(self, *args, **kwargs):
        """ """
        ...
    def setScreenPos(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsSceneDragDropEvent(QGraphicsSceneEvent):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def acceptProposedAction(self, *args, **kwargs):
        """ """
        ...
    def buttons(self, *args, **kwargs):
        """ """
        ...
    def dropAction(self, *args, **kwargs):
        """ """
        ...
    def mimeData(self, *args, **kwargs):
        """ """
        ...
    def modifiers(self, *args, **kwargs):
        """ """
        ...
    def pos(self, *args, **kwargs):
        """ """
        ...
    def possibleActions(self, *args, **kwargs):
        """ """
        ...
    def proposedAction(self, *args, **kwargs):
        """ """
        ...
    def scenePos(self, *args, **kwargs):
        """ """
        ...
    def screenPos(self, *args, **kwargs):
        """ """
        ...
    def setButtons(self, *args, **kwargs):
        """ """
        ...
    def setDropAction(self, *args, **kwargs):
        """ """
        ...
    def setModifiers(self, *args, **kwargs):
        """ """
        ...
    def setPos(self, *args, **kwargs):
        """ """
        ...
    def setPossibleActions(self, *args, **kwargs):
        """ """
        ...
    def setProposedAction(self, *args, **kwargs):
        """ """
        ...
    def setScenePos(self, *args, **kwargs):
        """ """
        ...
    def setScreenPos(self, *args, **kwargs):
        """ """
        ...
    def source(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsSceneEvent(PySide.QtCore.QEvent):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def widget(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsSceneHelpEvent(QGraphicsSceneEvent):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def scenePos(self, *args, **kwargs):
        """ """
        ...
    def screenPos(self, *args, **kwargs):
        """ """
        ...
    def setScenePos(self, *args, **kwargs):
        """ """
        ...
    def setScreenPos(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsSceneHoverEvent(QGraphicsSceneEvent):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def lastPos(self, *args, **kwargs):
        """ """
        ...
    def lastScenePos(self, *args, **kwargs):
        """ """
        ...
    def lastScreenPos(self, *args, **kwargs):
        """ """
        ...
    def modifiers(self, *args, **kwargs):
        """ """
        ...
    def pos(self, *args, **kwargs):
        """ """
        ...
    def scenePos(self, *args, **kwargs):
        """ """
        ...
    def screenPos(self, *args, **kwargs):
        """ """
        ...
    def setLastPos(self, *args, **kwargs):
        """ """
        ...
    def setLastScenePos(self, *args, **kwargs):
        """ """
        ...
    def setLastScreenPos(self, *args, **kwargs):
        """ """
        ...
    def setModifiers(self, *args, **kwargs):
        """ """
        ...
    def setPos(self, *args, **kwargs):
        """ """
        ...
    def setScenePos(self, *args, **kwargs):
        """ """
        ...
    def setScreenPos(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsSceneMouseEvent(QGraphicsSceneEvent):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def button(self, *args, **kwargs):
        """ """
        ...
    def buttonDownPos(self, *args, **kwargs):
        """ """
        ...
    def buttonDownScenePos(self, *args, **kwargs):
        """ """
        ...
    def buttonDownScreenPos(self, *args, **kwargs):
        """ """
        ...
    def buttons(self, *args, **kwargs):
        """ """
        ...
    def lastPos(self, *args, **kwargs):
        """ """
        ...
    def lastScenePos(self, *args, **kwargs):
        """ """
        ...
    def lastScreenPos(self, *args, **kwargs):
        """ """
        ...
    def modifiers(self, *args, **kwargs):
        """ """
        ...
    def pos(self, *args, **kwargs):
        """ """
        ...
    def scenePos(self, *args, **kwargs):
        """ """
        ...
    def screenPos(self, *args, **kwargs):
        """ """
        ...
    def setButton(self, *args, **kwargs):
        """ """
        ...
    def setButtonDownPos(self, *args, **kwargs):
        """ """
        ...
    def setButtonDownScenePos(self, *args, **kwargs):
        """ """
        ...
    def setButtonDownScreenPos(self, *args, **kwargs):
        """ """
        ...
    def setButtons(self, *args, **kwargs):
        """ """
        ...
    def setLastPos(self, *args, **kwargs):
        """ """
        ...
    def setLastScenePos(self, *args, **kwargs):
        """ """
        ...
    def setLastScreenPos(self, *args, **kwargs):
        """ """
        ...
    def setModifiers(self, *args, **kwargs):
        """ """
        ...
    def setPos(self, *args, **kwargs):
        """ """
        ...
    def setScenePos(self, *args, **kwargs):
        """ """
        ...
    def setScreenPos(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsSceneMoveEvent(QGraphicsSceneEvent):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def newPos(self, *args, **kwargs):
        """ """
        ...
    def oldPos(self, *args, **kwargs):
        """ """
        ...
    def setNewPos(self, *args, **kwargs):
        """ """
        ...
    def setOldPos(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsSceneResizeEvent(QGraphicsSceneEvent):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def newSize(self, *args, **kwargs):
        """ """
        ...
    def oldSize(self, *args, **kwargs):
        """ """
        ...
    def setNewSize(self, *args, **kwargs):
        """ """
        ...
    def setOldSize(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsSceneWheelEvent(QGraphicsSceneEvent):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def buttons(self, *args, **kwargs):
        """ """
        ...
    def delta(self, *args, **kwargs):
        """ """
        ...
    def modifiers(self, *args, **kwargs):
        """ """
        ...
    def orientation(self, *args, **kwargs):
        """ """
        ...
    def pos(self, *args, **kwargs):
        """ """
        ...
    def scenePos(self, *args, **kwargs):
        """ """
        ...
    def screenPos(self, *args, **kwargs):
        """ """
        ...
    def setButtons(self, *args, **kwargs):
        """ """
        ...
    def setDelta(self, *args, **kwargs):
        """ """
        ...
    def setModifiers(self, *args, **kwargs):
        """ """
        ...
    def setOrientation(self, *args, **kwargs):
        """ """
        ...
    def setPos(self, *args, **kwargs):
        """ """
        ...
    def setScenePos(self, *args, **kwargs):
        """ """
        ...
    def setScreenPos(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsSimpleTextItem(QAbstractGraphicsShapeItem):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def boundingRect(self, *args, **kwargs):
        """ """
        ...
    def contains(self, *args, **kwargs):
        """ """
        ...
    def extension(self, *args, **kwargs):
        """ """
        ...
    def font(self, *args, **kwargs):
        """ """
        ...
    def isObscuredBy(self, *args, **kwargs):
        """ """
        ...
    def opaqueArea(self, *args, **kwargs):
        """ """
        ...
    def paint(self, *args, **kwargs):
        """ """
        ...
    def setFont(self, *args, **kwargs):
        """ """
        ...
    def setText(self, *args, **kwargs):
        """ """
        ...
    def shape(self, *args, **kwargs):
        """ """
        ...
    def text(self, *args, **kwargs):
        """ """
        ...
    def type(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsTextItem(QGraphicsObject):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    linkActivated: ...
    """
    Signal
    """

    linkHovered: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def adjustSize(self, *args, **kwargs):
        """ """
        ...
    def boundingRect(self, *args, **kwargs):
        """ """
        ...
    def contains(self, *args, **kwargs):
        """ """
        ...
    def contextMenuEvent(self, *args, **kwargs):
        """ """
        ...
    def defaultTextColor(self, *args, **kwargs):
        """ """
        ...
    def document(self, *args, **kwargs):
        """ """
        ...
    def dragEnterEvent(self, *args, **kwargs):
        """ """
        ...
    def dragLeaveEvent(self, *args, **kwargs):
        """ """
        ...
    def dragMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def dropEvent(self, *args, **kwargs):
        """ """
        ...
    def extension(self, *args, **kwargs):
        """ """
        ...
    def focusInEvent(self, *args, **kwargs):
        """ """
        ...
    def focusOutEvent(self, *args, **kwargs):
        """ """
        ...
    def font(self, *args, **kwargs):
        """ """
        ...
    def hoverEnterEvent(self, *args, **kwargs):
        """ """
        ...
    def hoverLeaveEvent(self, *args, **kwargs):
        """ """
        ...
    def hoverMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def inputMethodEvent(self, *args, **kwargs):
        """ """
        ...
    def inputMethodQuery(self, *args, **kwargs):
        """ """
        ...
    def isObscuredBy(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def keyReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseDoubleClickEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def opaqueArea(self, *args, **kwargs):
        """ """
        ...
    def openExternalLinks(self, *args, **kwargs):
        """ """
        ...
    def paint(self, *args, **kwargs):
        """ """
        ...
    def sceneEvent(self, *args, **kwargs):
        """ """
        ...
    def setDefaultTextColor(self, *args, **kwargs):
        """ """
        ...
    def setDocument(self, *args, **kwargs):
        """ """
        ...
    def setFont(self, *args, **kwargs):
        """ """
        ...
    def setHtml(self, *args, **kwargs):
        """ """
        ...
    def setOpenExternalLinks(self, *args, **kwargs):
        """ """
        ...
    def setPlainText(self, *args, **kwargs):
        """ """
        ...
    def setTabChangesFocus(self, *args, **kwargs):
        """ """
        ...
    def setTextCursor(self, *args, **kwargs):
        """ """
        ...
    def setTextInteractionFlags(self, *args, **kwargs):
        """ """
        ...
    def setTextWidth(self, *args, **kwargs):
        """ """
        ...
    def shape(self, *args, **kwargs):
        """ """
        ...
    def tabChangesFocus(self, *args, **kwargs):
        """ """
        ...
    def textCursor(self, *args, **kwargs):
        """ """
        ...
    def textInteractionFlags(self, *args, **kwargs):
        """ """
        ...
    def textWidth(self, *args, **kwargs):
        """ """
        ...
    def toHtml(self, *args, **kwargs):
        """ """
        ...
    def toPlainText(self, *args, **kwargs):
        """ """
        ...
    def type(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsTransform(PySide.QtCore.QObject):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def applyTo(self, *args, **kwargs):
        """ """
        ...
    def update(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsView(QAbstractScrollArea):
    AnchorUnderMouse: ...
    """
    PySide.QtGui.QGraphicsView.ViewportAnchor.AnchorUnd...
    """

    AnchorViewCenter: ...
    """
    PySide.QtGui.QGraphicsView.ViewportAnchor.AnchorVie...
    """

    BoundingRectViewportUpdate: ...
    """
    PySide.QtGui.QGraphicsView.ViewportUpdate...
    """

    CacheBackground: ...
    """
    PySide.QtGui.QGraphicsView.CacheModeFlag.CacheBackgr...
    """

    CacheMode: ...
    """
    <type 'CacheMode'>
    """

    CacheModeFlag: ...
    """
    <type 'PySide.QtGui.QGraphicsView.CacheModeFlag'>
    """

    CacheNone: ... = PySide.QtGui.QGraphicsView.CacheModeFlag.CacheNone
    """
    """

    DontAdjustForAntialiasing: ...
    """
    PySide.QtGui.QGraphicsView.OptimizationFla...
    """

    DontClipPainter: ...
    """
    PySide.QtGui.QGraphicsView.OptimizationFlag.DontClip...
    """

    DontSavePainterState: ...
    """
    PySide.QtGui.QGraphicsView.OptimizationFlag.Don...
    """

    DragMode: ...
    """
    <type 'PySide.QtGui.QGraphicsView.DragMode'>
    """

    FullViewportUpdate: ...
    """
    PySide.QtGui.QGraphicsView.ViewportUpdateMode.Ful...
    """

    IndirectPainting: ...
    """
    PySide.QtGui.QGraphicsView.OptimizationFlag.Indirec...
    """

    MinimalViewportUpdate: ...
    """
    PySide.QtGui.QGraphicsView.ViewportUpdateMode....
    """

    NoAnchor: ... = PySide.QtGui.QGraphicsView.ViewportAnchor.NoAnchor
    """
    """

    NoDrag: ... = PySide.QtGui.QGraphicsView.DragMode.NoDrag
    """
    """

    NoViewportUpdate: ...
    """
    PySide.QtGui.QGraphicsView.ViewportUpdateMode.NoVie...
    """

    OptimizationFlag: ...
    """
    <type 'PySide.QtGui.QGraphicsView.OptimizationFlag'...
    """

    OptimizationFlags: ...
    """
    <type 'OptimizationFlags'>
    """

    RubberBandDrag: ... = PySide.QtGui.QGraphicsView.DragMode.RubberBandDrag
    """
    """

    ScrollHandDrag: ... = PySide.QtGui.QGraphicsView.DragMode.ScrollHandDrag
    """
    """

    SmartViewportUpdate: ...
    """
    PySide.QtGui.QGraphicsView.ViewportUpdateMode.Sm...
    """

    ViewportAnchor: ...
    """
    <type 'PySide.QtGui.QGraphicsView.ViewportAnchor'>
    """

    ViewportUpdateMode: ...
    """
    <type 'PySide.QtGui.QGraphicsView.ViewportUpdateM...
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def alignment(self, *args, **kwargs):
        """ """
        ...
    def backgroundBrush(self, *args, **kwargs):
        """ """
        ...
    def cacheMode(self, *args, **kwargs):
        """ """
        ...
    def centerOn(self, *args, **kwargs):
        """ """
        ...
    def contextMenuEvent(self, *args, **kwargs):
        """ """
        ...
    def dragEnterEvent(self, *args, **kwargs):
        """ """
        ...
    def dragLeaveEvent(self, *args, **kwargs):
        """ """
        ...
    def dragMode(self, *args, **kwargs):
        """ """
        ...
    def dragMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def drawBackground(self, *args, **kwargs):
        """ """
        ...
    def drawForeground(self, *args, **kwargs):
        """ """
        ...
    def drawItems(self, *args, **kwargs):
        """ """
        ...
    def dropEvent(self, *args, **kwargs):
        """ """
        ...
    def ensureVisible(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def fitInView(self, *args, **kwargs):
        """ """
        ...
    def focusInEvent(self, *args, **kwargs):
        """ """
        ...
    def focusNextPrevChild(self, *args, **kwargs):
        """ """
        ...
    def focusOutEvent(self, *args, **kwargs):
        """ """
        ...
    def foregroundBrush(self, *args, **kwargs):
        """ """
        ...
    def inputMethodEvent(self, *args, **kwargs):
        """ """
        ...
    def inputMethodQuery(self, *args, **kwargs):
        """ """
        ...
    def invalidateScene(self, *args, **kwargs):
        """ """
        ...
    def isInteractive(self, *args, **kwargs):
        """ """
        ...
    def isTransformed(self, *args, **kwargs):
        """ """
        ...
    def itemAt(self, *args, **kwargs):
        """ """
        ...
    def items(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def keyReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def mapFromScene(self, *args, **kwargs):
        """ """
        ...
    def mapToScene(self, *args, **kwargs):
        """ """
        ...
    def matrix(self, *args, **kwargs):
        """ """
        ...
    def mouseDoubleClickEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def optimizationFlags(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def render(self, *args, **kwargs):
        """ """
        ...
    def renderHints(self, *args, **kwargs):
        """ """
        ...
    def resetCachedContent(self, *args, **kwargs):
        """ """
        ...
    def resetMatrix(self, *args, **kwargs):
        """ """
        ...
    def resetTransform(self, *args, **kwargs):
        """ """
        ...
    def resizeAnchor(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def rotate(self, *args, **kwargs):
        """ """
        ...
    def rubberBandSelectionMode(self, *args, **kwargs):
        """ """
        ...
    def scale(self, *args, **kwargs):
        """ """
        ...
    def scene(self, *args, **kwargs):
        """ """
        ...
    def sceneRect(self, *args, **kwargs):
        """ """
        ...
    def scrollContentsBy(self, *args, **kwargs):
        """ """
        ...
    def setAlignment(self, *args, **kwargs):
        """ """
        ...
    def setBackgroundBrush(self, *args, **kwargs):
        """ """
        ...
    def setCacheMode(self, *args, **kwargs):
        """ """
        ...
    def setDragMode(self, *args, **kwargs):
        """ """
        ...
    def setForegroundBrush(self, *args, **kwargs):
        """ """
        ...
    def setInteractive(self, *args, **kwargs):
        """ """
        ...
    def setMatrix(self, *args, **kwargs):
        """ """
        ...
    def setOptimizationFlag(self, *args, **kwargs):
        """ """
        ...
    def setOptimizationFlags(self, *args, **kwargs):
        """ """
        ...
    def setRenderHint(self, *args, **kwargs):
        """ """
        ...
    def setRenderHints(self, *args, **kwargs):
        """ """
        ...
    def setResizeAnchor(self, *args, **kwargs):
        """ """
        ...
    def setRubberBandSelectionMode(self, *args, **kwargs):
        """ """
        ...
    def setScene(self, *args, **kwargs):
        """ """
        ...
    def setSceneRect(self, *args, **kwargs):
        """ """
        ...
    def setTransform(self, *args, **kwargs):
        """ """
        ...
    def setTransformationAnchor(self, *args, **kwargs):
        """ """
        ...
    def setViewportUpdateMode(self, *args, **kwargs):
        """ """
        ...
    def setupViewport(self, *args, **kwargs):
        """ """
        ...
    def shear(self, *args, **kwargs):
        """ """
        ...
    def showEvent(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def transform(self, *args, **kwargs):
        """ """
        ...
    def transformationAnchor(self, *args, **kwargs):
        """ """
        ...
    def translate(self, *args, **kwargs):
        """ """
        ...
    def updateScene(self, *args, **kwargs):
        """ """
        ...
    def updateSceneRect(self, *args, **kwargs):
        """ """
        ...
    def viewportEvent(self, *args, **kwargs):
        """ """
        ...
    def viewportTransform(self, *args, **kwargs):
        """ """
        ...
    def viewportUpdateMode(self, *args, **kwargs):
        """ """
        ...
    def wheelEvent(self, *args, **kwargs):
        """ """
        ...
    ...

class QGraphicsWidget(QGraphicsObject, QGraphicsLayoutItem):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    geometryChanged: ...
    """
    Signal
    """

    layoutChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    @staticmethod
    def setTabOrder(*args, **kwargs):
        """ """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def actions(self, *args, **kwargs):
        """ """
        ...
    def addAction(self, *args, **kwargs):
        """ """
        ...
    def addActions(self, *args, **kwargs):
        """ """
        ...
    def adjustSize(self, *args, **kwargs):
        """ """
        ...
    def autoFillBackground(self, *args, **kwargs):
        """ """
        ...
    def boundingRect(self, *args, **kwargs):
        """ """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def close(self, *args, **kwargs):
        """ """
        ...
    def closeEvent(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def focusInEvent(self, *args, **kwargs):
        """ """
        ...
    def focusNextPrevChild(self, *args, **kwargs):
        """ """
        ...
    def focusOutEvent(self, *args, **kwargs):
        """ """
        ...
    def focusPolicy(self, *args, **kwargs):
        """ """
        ...
    def focusWidget(self, *args, **kwargs):
        """ """
        ...
    def font(self, *args, **kwargs):
        """ """
        ...
    def getContentsMargins(self, *args, **kwargs):
        """ """
        ...
    def getWindowFrameMargins(self, *args, **kwargs):
        """ """
        ...
    def grabKeyboardEvent(self, *args, **kwargs):
        """ """
        ...
    def grabMouseEvent(self, *args, **kwargs):
        """ """
        ...
    def grabShortcut(self, *args, **kwargs):
        """ """
        ...
    def hideEvent(self, *args, **kwargs):
        """ """
        ...
    def hoverLeaveEvent(self, *args, **kwargs):
        """ """
        ...
    def hoverMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def initStyleOption(self, *args, **kwargs):
        """ """
        ...
    def insertAction(self, *args, **kwargs):
        """ """
        ...
    def insertActions(self, *args, **kwargs):
        """ """
        ...
    def isActiveWindow(self, *args, **kwargs):
        """ """
        ...
    def itemChange(self, *args, **kwargs):
        """ """
        ...
    def layout(self, *args, **kwargs):
        """ """
        ...
    def layoutDirection(self, *args, **kwargs):
        """ """
        ...
    def moveEvent(self, *args, **kwargs):
        """ """
        ...
    def paint(self, *args, **kwargs):
        """ """
        ...
    def paintWindowFrame(self, *args, **kwargs):
        """ """
        ...
    def palette(self, *args, **kwargs):
        """ """
        ...
    def polishEvent(self, *args, **kwargs):
        """ """
        ...
    def propertyChange(self, *args, **kwargs):
        """ """
        ...
    def rect(self, *args, **kwargs):
        """ """
        ...
    def releaseShortcut(self, *args, **kwargs):
        """ """
        ...
    def removeAction(self, *args, **kwargs):
        """ """
        ...
    def resize(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def sceneEvent(self, *args, **kwargs):
        """ """
        ...
    def setAttribute(self, *args, **kwargs):
        """ """
        ...
    def setAutoFillBackground(self, *args, **kwargs):
        """ """
        ...
    def setContentsMargins(self, *args, **kwargs):
        """ """
        ...
    def setFocusPolicy(self, *args, **kwargs):
        """ """
        ...
    def setFont(self, *args, **kwargs):
        """ """
        ...
    def setGeometry(self, *args, **kwargs):
        """ """
        ...
    def setLayout(self, *args, **kwargs):
        """ """
        ...
    def setLayoutDirection(self, *args, **kwargs):
        """ """
        ...
    def setPalette(self, *args, **kwargs):
        """ """
        ...
    def setShortcutAutoRepeat(self, *args, **kwargs):
        """ """
        ...
    def setShortcutEnabled(self, *args, **kwargs):
        """ """
        ...
    def setStyle(self, *args, **kwargs):
        """ """
        ...
    def setWindowFlags(self, *args, **kwargs):
        """ """
        ...
    def setWindowFrameMargins(self, *args, **kwargs):
        """ """
        ...
    def setWindowTitle(self, *args, **kwargs):
        """ """
        ...
    def shape(self, *args, **kwargs):
        """ """
        ...
    def showEvent(self, *args, **kwargs):
        """ """
        ...
    def size(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def style(self, *args, **kwargs):
        """ """
        ...
    def testAttribute(self, *args, **kwargs):
        """ """
        ...
    def type(self, *args, **kwargs):
        """ """
        ...
    def ungrabKeyboardEvent(self, *args, **kwargs):
        """ """
        ...
    def ungrabMouseEvent(self, *args, **kwargs):
        """ """
        ...
    def unsetLayoutDirection(self, *args, **kwargs):
        """ """
        ...
    def unsetWindowFrameMargins(self, *args, **kwargs):
        """ """
        ...
    def updateGeometry(self, *args, **kwargs):
        """ """
        ...
    def windowFlags(self, *args, **kwargs):
        """ """
        ...
    def windowFrameEvent(self, *args, **kwargs):
        """ """
        ...
    def windowFrameGeometry(self, *args, **kwargs):
        """ """
        ...
    def windowFrameRect(self, *args, **kwargs):
        """ """
        ...
    def windowFrameSectionAt(self, *args, **kwargs):
        """ """
        ...
    def windowTitle(self, *args, **kwargs):
        """ """
        ...
    def windowType(self, *args, **kwargs):
        """ """
        ...
    ...

class QGridLayout(QLayout):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addItem(self, *args, **kwargs):
        """ """
        ...
    def addLayout(self, *args, **kwargs):
        """ """
        ...
    def addWidget(self, *args, **kwargs):
        """ """
        ...
    def cellRect(self, *args, **kwargs):
        """ """
        ...
    def columnCount(self, *args, **kwargs):
        """ """
        ...
    def columnMinimumWidth(self, *args, **kwargs):
        """ """
        ...
    def columnStretch(self, *args, **kwargs):
        """ """
        ...
    def count(self, *args, **kwargs):
        """ """
        ...
    def expandingDirections(self, *args, **kwargs):
        """ """
        ...
    def getItemPosition(self, *args, **kwargs):
        """ """
        ...
    def hasHeightForWidth(self, *args, **kwargs):
        """ """
        ...
    def heightForWidth(self, *args, **kwargs):
        """ """
        ...
    def horizontalSpacing(self, *args, **kwargs):
        """ """
        ...
    def invalidate(self, *args, **kwargs):
        """ """
        ...
    def itemAt(self, *args, **kwargs):
        """ """
        ...
    def itemAtPosition(self, *args, **kwargs):
        """ """
        ...
    def maximumSize(self, *args, **kwargs):
        """ """
        ...
    def minimumHeightForWidth(self, *args, **kwargs):
        """ """
        ...
    def minimumSize(self, *args, **kwargs):
        """ """
        ...
    def originCorner(self, *args, **kwargs):
        """ """
        ...
    def rowCount(self, *args, **kwargs):
        """ """
        ...
    def rowMinimumHeight(self, *args, **kwargs):
        """ """
        ...
    def rowStretch(self, *args, **kwargs):
        """ """
        ...
    def setColumnMinimumWidth(self, *args, **kwargs):
        """ """
        ...
    def setColumnStretch(self, *args, **kwargs):
        """ """
        ...
    def setDefaultPositioning(self, *args, **kwargs):
        """ """
        ...
    def setGeometry(self, *args, **kwargs):
        """ """
        ...
    def setHorizontalSpacing(self, *args, **kwargs):
        """ """
        ...
    def setOriginCorner(self, *args, **kwargs):
        """ """
        ...
    def setRowMinimumHeight(self, *args, **kwargs):
        """ """
        ...
    def setRowStretch(self, *args, **kwargs):
        """ """
        ...
    def setSpacing(self, *args, **kwargs):
        """ """
        ...
    def setVerticalSpacing(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def spacing(self, *args, **kwargs):
        """ """
        ...
    def takeAt(self, *args, **kwargs):
        """ """
        ...
    def verticalSpacing(self, *args, **kwargs):
        """ """
        ...
    ...

class QGroupBox(QWidget):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    clicked: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    toggled: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def alignment(self, *args, **kwargs):
        """ """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def childEvent(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def focusInEvent(self, *args, **kwargs):
        """ """
        ...
    def initStyleOption(self, *args, **kwargs):
        """ """
        ...
    def isCheckable(self, *args, **kwargs):
        """ """
        ...
    def isChecked(self, *args, **kwargs):
        """ """
        ...
    def isFlat(self, *args, **kwargs):
        """ """
        ...
    def minimumSizeHint(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def setAlignment(self, *args, **kwargs):
        """ """
        ...
    def setCheckable(self, *args, **kwargs):
        """ """
        ...
    def setChecked(self, *args, **kwargs):
        """ """
        ...
    def setFlat(self, *args, **kwargs):
        """ """
        ...
    def setTitle(self, *args, **kwargs):
        """ """
        ...
    def title(self, *args, **kwargs):
        """ """
        ...
    ...

class QHBoxLayout(QBoxLayout):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QHeaderView(QAbstractItemView):
    Custom: ... = PySide.QtGui.QHeaderView.ResizeMode.Custom
    """
    """

    Fixed: ... = PySide.QtGui.QHeaderView.ResizeMode.Fixed
    """
    """

    Interactive: ... = PySide.QtGui.QHeaderView.ResizeMode.Interactive
    """
    """

    ResizeMode: ...
    """
    <type 'PySide.QtGui.QHeaderView.ResizeMode'>
    """

    ResizeToContents: ...
    """
    PySide.QtGui.QHeaderView.ResizeMode.ResizeToContent...
    """

    Stretch: ... = PySide.QtGui.QHeaderView.ResizeMode.Stretch
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    geometriesChanged: ...
    """
    Signal
    """

    sectionAutoResize: ...
    """
    Signal
    """

    sectionClicked: ...
    """
    Signal
    """

    sectionCountChanged: ...
    """
    Signal
    """

    sectionDoubleClicked: ...
    """
    Signal
    """

    sectionEntered: ...
    """
    Signal
    """

    sectionHandleDoubleClicked: ...
    """
    Signal
    """

    sectionMoved: ...
    """
    Signal
    """

    sectionPressed: ...
    """
    Signal
    """

    sectionResized: ...
    """
    Signal
    """

    sortIndicatorChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def cascadingSectionResizes(self, *args, **kwargs):
        """ """
        ...
    def count(self, *args, **kwargs):
        """ """
        ...
    def currentChanged(self, *args, **kwargs):
        """ """
        ...
    def dataChanged(self, *args, **kwargs):
        """ """
        ...
    def defaultAlignment(self, *args, **kwargs):
        """ """
        ...
    def defaultSectionSize(self, *args, **kwargs):
        """ """
        ...
    def doItemsLayout(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def headerDataChanged(self, *args, **kwargs):
        """ """
        ...
    def hiddenSectionCount(self, *args, **kwargs):
        """ """
        ...
    def hideSection(self, *args, **kwargs):
        """ """
        ...
    def highlightSections(self, *args, **kwargs):
        """ """
        ...
    def horizontalOffset(self, *args, **kwargs):
        """ """
        ...
    def indexAt(self, *args, **kwargs):
        """ """
        ...
    def initStyleOption(self, *args, **kwargs):
        """ """
        ...
    def initialize(self, *args, **kwargs):
        """ """
        ...
    def initializeSections(self, *args, **kwargs):
        """ """
        ...
    def isClickable(self, *args, **kwargs):
        """ """
        ...
    def isIndexHidden(self, *args, **kwargs):
        """ """
        ...
    def isMovable(self, *args, **kwargs):
        """ """
        ...
    def isSectionHidden(self, *args, **kwargs):
        """ """
        ...
    def isSortIndicatorShown(self, *args, **kwargs):
        """ """
        ...
    def length(self, *args, **kwargs):
        """ """
        ...
    def logicalIndex(self, *args, **kwargs):
        """ """
        ...
    def logicalIndexAt(self, *args, **kwargs):
        """ """
        ...
    def minimumSectionSize(self, *args, **kwargs):
        """ """
        ...
    def mouseDoubleClickEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def moveCursor(self, *args, **kwargs):
        """ """
        ...
    def moveSection(self, *args, **kwargs):
        """ """
        ...
    def offset(self, *args, **kwargs):
        """ """
        ...
    def orientation(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def paintSection(self, *args, **kwargs):
        """ """
        ...
    def reset(self, *args, **kwargs):
        """ """
        ...
    def resizeMode(self, *args, **kwargs):
        """ """
        ...
    def resizeSection(self, *args, **kwargs):
        """ """
        ...
    def resizeSections(self, *args, **kwargs):
        """ """
        ...
    def restoreState(self, *args, **kwargs):
        """ """
        ...
    def rowsInserted(self, *args, **kwargs):
        """ """
        ...
    def saveState(self, *args, **kwargs):
        """ """
        ...
    def scrollContentsBy(self, *args, **kwargs):
        """ """
        ...
    def scrollTo(self, *args, **kwargs):
        """ """
        ...
    def sectionPosition(self, *args, **kwargs):
        """ """
        ...
    def sectionSize(self, *args, **kwargs):
        """ """
        ...
    def sectionSizeFromContents(self, *args, **kwargs):
        """ """
        ...
    def sectionSizeHint(self, *args, **kwargs):
        """ """
        ...
    def sectionViewportPosition(self, *args, **kwargs):
        """ """
        ...
    def sectionsAboutToBeRemoved(self, *args, **kwargs):
        """ """
        ...
    def sectionsHidden(self, *args, **kwargs):
        """ """
        ...
    def sectionsInserted(self, *args, **kwargs):
        """ """
        ...
    def sectionsMoved(self, *args, **kwargs):
        """ """
        ...
    def setCascadingSectionResizes(self, *args, **kwargs):
        """ """
        ...
    def setClickable(self, *args, **kwargs):
        """ """
        ...
    def setDefaultAlignment(self, *args, **kwargs):
        """ """
        ...
    def setDefaultSectionSize(self, *args, **kwargs):
        """ """
        ...
    def setHighlightSections(self, *args, **kwargs):
        """ """
        ...
    def setMinimumSectionSize(self, *args, **kwargs):
        """ """
        ...
    def setModel(self, *args, **kwargs):
        """ """
        ...
    def setMovable(self, *args, **kwargs):
        """ """
        ...
    def setOffset(self, *args, **kwargs):
        """ """
        ...
    def setOffsetToLastSection(self, *args, **kwargs):
        """ """
        ...
    def setOffsetToSectionPosition(self, *args, **kwargs):
        """ """
        ...
    def setResizeMode(self, *args, **kwargs):
        """ """
        ...
    def setSectionHidden(self, *args, **kwargs):
        """ """
        ...
    def setSelection(self, *args, **kwargs):
        """ """
        ...
    def setSortIndicator(self, *args, **kwargs):
        """ """
        ...
    def setSortIndicatorShown(self, *args, **kwargs):
        """ """
        ...
    def setStretchLastSection(self, *args, **kwargs):
        """ """
        ...
    def showSection(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def sortIndicatorOrder(self, *args, **kwargs):
        """ """
        ...
    def sortIndicatorSection(self, *args, **kwargs):
        """ """
        ...
    def stretchLastSection(self, *args, **kwargs):
        """ """
        ...
    def stretchSectionCount(self, *args, **kwargs):
        """ """
        ...
    def swapSections(self, *args, **kwargs):
        """ """
        ...
    def updateGeometries(self, *args, **kwargs):
        """ """
        ...
    def updateSection(self, *args, **kwargs):
        """ """
        ...
    def verticalOffset(self, *args, **kwargs):
        """ """
        ...
    def viewportEvent(self, *args, **kwargs):
        """ """
        ...
    def visualIndex(self, *args, **kwargs):
        """ """
        ...
    def visualIndexAt(self, *args, **kwargs):
        """ """
        ...
    def visualRect(self, *args, **kwargs):
        """ """
        ...
    def visualRegionForSelection(self, *args, **kwargs):
        """ """
        ...
    ...

class QInputDialog(QDialog):
    DoubleInput: ... = PySide.QtGui.QInputDialog.InputMode.DoubleInput
    """
    """

    InputDialogOption: ...
    """
    <type 'PySide.QtGui.QInputDialog.InputDialogOption...
    """

    InputMode: ...
    """
    <type 'PySide.QtGui.QInputDialog.InputMode'>
    """

    IntInput: ... = PySide.QtGui.QInputDialog.InputMode.IntInput
    """
    """

    NoButtons: ... = PySide.QtGui.QInputDialog.InputDialogOption.NoButtons
    """
    """

    TextInput: ... = PySide.QtGui.QInputDialog.InputMode.TextInput
    """
    """

    UseListViewForComboBoxItems: ...
    """
    PySide.QtGui.QInputDialog.InputDialogOpt...
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    doubleValueChanged: ...
    """
    Signal
    """

    doubleValueSelected: ...
    """
    Signal
    """

    intValueChanged: ...
    """
    Signal
    """

    intValueSelected: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    textValueChanged: ...
    """
    Signal
    """

    textValueSelected: ...
    """
    Signal
    """
    @staticmethod
    def getDouble(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def getInt(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def getInteger(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def getItem(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def getText(*args, **kwargs):
        """ """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def cancelButtonText(self, *args, **kwargs):
        """ """
        ...
    def comboBoxItems(self, *args, **kwargs):
        """ """
        ...
    def done(self, *args, **kwargs):
        """ """
        ...
    def doubleDecimals(self, *args, **kwargs):
        """ """
        ...
    def doubleMaximum(self, *args, **kwargs):
        """ """
        ...
    def doubleMinimum(self, *args, **kwargs):
        """ """
        ...
    def doubleValue(self, *args, **kwargs):
        """ """
        ...
    def inputMode(self, *args, **kwargs):
        """ """
        ...
    def intMaximum(self, *args, **kwargs):
        """ """
        ...
    def intMinimum(self, *args, **kwargs):
        """ """
        ...
    def intStep(self, *args, **kwargs):
        """ """
        ...
    def intValue(self, *args, **kwargs):
        """ """
        ...
    def isComboBoxEditable(self, *args, **kwargs):
        """ """
        ...
    def labelText(self, *args, **kwargs):
        """ """
        ...
    def minimumSizeHint(self, *args, **kwargs):
        """ """
        ...
    def okButtonText(self, *args, **kwargs):
        """ """
        ...
    def open(self, *args, **kwargs):
        """ """
        ...
    def setCancelButtonText(self, *args, **kwargs):
        """ """
        ...
    def setComboBoxEditable(self, *args, **kwargs):
        """ """
        ...
    def setComboBoxItems(self, *args, **kwargs):
        """ """
        ...
    def setDoubleDecimals(self, *args, **kwargs):
        """ """
        ...
    def setDoubleMaximum(self, *args, **kwargs):
        """ """
        ...
    def setDoubleMinimum(self, *args, **kwargs):
        """ """
        ...
    def setDoubleRange(self, *args, **kwargs):
        """ """
        ...
    def setDoubleValue(self, *args, **kwargs):
        """ """
        ...
    def setInputMode(self, *args, **kwargs):
        """ """
        ...
    def setIntMaximum(self, *args, **kwargs):
        """ """
        ...
    def setIntMinimum(self, *args, **kwargs):
        """ """
        ...
    def setIntRange(self, *args, **kwargs):
        """ """
        ...
    def setIntStep(self, *args, **kwargs):
        """ """
        ...
    def setIntValue(self, *args, **kwargs):
        """ """
        ...
    def setLabelText(self, *args, **kwargs):
        """ """
        ...
    def setOkButtonText(self, *args, **kwargs):
        """ """
        ...
    def setOption(self, *args, **kwargs):
        """ """
        ...
    def setTextEchoMode(self, *args, **kwargs):
        """ """
        ...
    def setTextValue(self, *args, **kwargs):
        """ """
        ...
    def setVisible(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def testOption(self, *args, **kwargs):
        """ """
        ...
    def textEchoMode(self, *args, **kwargs):
        """ """
        ...
    def textValue(self, *args, **kwargs):
        """ """
        ...
    ...

class QItemDelegate(QAbstractItemDelegate):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def check(self, *args, **kwargs):
        """ """
        ...
    def createEditor(self, *args, **kwargs):
        """ """
        ...
    def decoration(self, *args, **kwargs):
        """ """
        ...
    def drawBackground(self, *args, **kwargs):
        """ """
        ...
    def drawCheck(self, *args, **kwargs):
        """ """
        ...
    def drawDecoration(self, *args, **kwargs):
        """ """
        ...
    def drawDisplay(self, *args, **kwargs):
        """ """
        ...
    def drawFocus(self, *args, **kwargs):
        """ """
        ...
    def editorEvent(self, *args, **kwargs):
        """ """
        ...
    def eventFilter(self, *args, **kwargs):
        """ """
        ...
    def hasClipping(self, *args, **kwargs):
        """ """
        ...
    def itemEditorFactory(self, *args, **kwargs):
        """ """
        ...
    def paint(self, *args, **kwargs):
        """ """
        ...
    def rect(self, *args, **kwargs):
        """ """
        ...
    def setClipping(self, *args, **kwargs):
        """ """
        ...
    def setEditorData(self, *args, **kwargs):
        """ """
        ...
    def setItemEditorFactory(self, *args, **kwargs):
        """ """
        ...
    def setModelData(self, *args, **kwargs):
        """ """
        ...
    def setOptions(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def textRectangle(self, *args, **kwargs):
        """ """
        ...
    def updateEditorGeometry(self, *args, **kwargs):
        """ """
        ...
    ...

class QItemEditorCreatorBase(Shiboken.Object):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def createWidget(self, *args, **kwargs):
        """ """
        ...
    def valuePropertyName(self, *args, **kwargs):
        """ """
        ...
    ...

class QItemEditorFactory(Shiboken.Object):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    @staticmethod
    def defaultFactory(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setDefaultFactory(*args, **kwargs):
        """ """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def createEditor(self, *args, **kwargs):
        """ """
        ...
    def registerEditor(self, *args, **kwargs):
        """ """
        ...
    def valuePropertyName(self, *args, **kwargs):
        """ """
        ...
    ...

class QKeyEventTransition(PySide.QtCore.QEventTransition):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def eventTest(self, *args, **kwargs):
        """ """
        ...
    def key(self, *args, **kwargs):
        """ """
        ...
    def modifierMask(self, *args, **kwargs):
        """ """
        ...
    def onTransition(self, *args, **kwargs):
        """ """
        ...
    def setKey(self, *args, **kwargs):
        """ """
        ...
    def setModifierMask(self, *args, **kwargs):
        """ """
        ...
    ...

class QLCDNumber(QFrame):
    Bin: ... = PySide.QtGui.QLCDNumber.Mode.Bin
    """
    """

    Dec: ... = PySide.QtGui.QLCDNumber.Mode.Dec
    """
    """

    Filled: ... = PySide.QtGui.QLCDNumber.SegmentStyle.Filled
    """
    """

    Flat: ... = PySide.QtGui.QLCDNumber.SegmentStyle.Flat
    """
    """

    Hex: ... = PySide.QtGui.QLCDNumber.Mode.Hex
    """
    """

    Mode: ...
    """
    <type 'PySide.QtGui.QLCDNumber.Mode'>
    """

    Oct: ... = PySide.QtGui.QLCDNumber.Mode.Oct
    """
    """

    Outline: ... = PySide.QtGui.QLCDNumber.SegmentStyle.Outline
    """
    """

    SegmentStyle: ...
    """
    <type 'PySide.QtGui.QLCDNumber.SegmentStyle'>
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    overflow: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def checkOverflow(self, *args, **kwargs):
        """ """
        ...
    def digitCount(self, *args, **kwargs):
        """ """
        ...
    def display(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def intValue(self, *args, **kwargs):
        """ """
        ...
    def mode(self, *args, **kwargs):
        """ """
        ...
    def numDigits(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def segmentStyle(self, *args, **kwargs):
        """ """
        ...
    def setBinMode(self, *args, **kwargs):
        """ """
        ...
    def setDecMode(self, *args, **kwargs):
        """ """
        ...
    def setDigitCount(self, *args, **kwargs):
        """ """
        ...
    def setHexMode(self, *args, **kwargs):
        """ """
        ...
    def setMode(self, *args, **kwargs):
        """ """
        ...
    def setNumDigits(self, *args, **kwargs):
        """ """
        ...
    def setOctMode(self, *args, **kwargs):
        """ """
        ...
    def setSegmentStyle(self, *args, **kwargs):
        """ """
        ...
    def setSmallDecimalPoint(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def smallDecimalPoint(self, *args, **kwargs):
        """ """
        ...
    def value(self, *args, **kwargs):
        """ """
        ...
    ...

class QLabel(QFrame):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    linkActivated: ...
    """
    Signal
    """

    linkHovered: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def alignment(self, *args, **kwargs):
        """ """
        ...
    def buddy(self, *args, **kwargs):
        """ """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def clear(self, *args, **kwargs):
        """ """
        ...
    def contextMenuEvent(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def focusInEvent(self, *args, **kwargs):
        """ """
        ...
    def focusNextPrevChild(self, *args, **kwargs):
        """ """
        ...
    def focusOutEvent(self, *args, **kwargs):
        """ """
        ...
    def hasScaledContents(self, *args, **kwargs):
        """ """
        ...
    def hasSelectedText(self, *args, **kwargs):
        """ """
        ...
    def heightForWidth(self, *args, **kwargs):
        """ """
        ...
    def indent(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def margin(self, *args, **kwargs):
        """ """
        ...
    def minimumSizeHint(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def movie(self, *args, **kwargs):
        """ """
        ...
    def openExternalLinks(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def picture(self, *args, **kwargs):
        """ """
        ...
    def pixmap(self, *args, **kwargs):
        """ """
        ...
    def selectedText(self, *args, **kwargs):
        """ """
        ...
    def selectionStart(self, *args, **kwargs):
        """ """
        ...
    def setAlignment(self, *args, **kwargs):
        """ """
        ...
    def setBuddy(self, *args, **kwargs):
        """ """
        ...
    def setIndent(self, *args, **kwargs):
        """ """
        ...
    def setMargin(self, *args, **kwargs):
        """ """
        ...
    def setMovie(self, *args, **kwargs):
        """ """
        ...
    def setNum(self, *args, **kwargs):
        """ """
        ...
    def setOpenExternalLinks(self, *args, **kwargs):
        """ """
        ...
    def setPicture(self, *args, **kwargs):
        """ """
        ...
    def setPixmap(self, *args, **kwargs):
        """ """
        ...
    def setScaledContents(self, *args, **kwargs):
        """ """
        ...
    def setSelection(self, *args, **kwargs):
        """ """
        ...
    def setText(self, *args, **kwargs):
        """ """
        ...
    def setTextFormat(self, *args, **kwargs):
        """ """
        ...
    def setTextInteractionFlags(self, *args, **kwargs):
        """ """
        ...
    def setWordWrap(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def text(self, *args, **kwargs):
        """ """
        ...
    def textFormat(self, *args, **kwargs):
        """ """
        ...
    def textInteractionFlags(self, *args, **kwargs):
        """ """
        ...
    def wordWrap(self, *args, **kwargs):
        """ """
        ...
    ...

class QLayout(PySide.QtCore.QObject, QLayoutItem):
    SetDefaultConstraint: ...
    """
    PySide.QtGui.QLayout.SizeConstraint.SetDefaultC...
    """

    SetFixedSize: ... = PySide.QtGui.QLayout.SizeConstraint.SetFixedSize
    """
    """

    SetMaximumSize: ... = PySide.QtGui.QLayout.SizeConstraint.SetMaximumSize
    """
    """

    SetMinAndMaxSize: ...
    """
    PySide.QtGui.QLayout.SizeConstraint.SetMinAndMaxSiz...
    """

    SetMinimumSize: ... = PySide.QtGui.QLayout.SizeConstraint.SetMinimumSize
    """
    """

    SetNoConstraint: ... = PySide.QtGui.QLayout.SizeConstraint.SetNoConstraint
    """
    """

    SizeConstraint: ...
    """
    <type 'PySide.QtGui.QLayout.SizeConstraint'>
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    @staticmethod
    def closestAcceptableSize(*args, **kwargs):
        """ """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def activate(self, *args, **kwargs):
        """ """
        ...
    def addChildLayout(self, *args, **kwargs):
        """ """
        ...
    def addChildWidget(self, *args, **kwargs):
        """ """
        ...
    def addItem(self, *args, **kwargs):
        """ """
        ...
    def addWidget(self, *args, **kwargs):
        """ """
        ...
    def adoptLayout(self, *args, **kwargs):
        """ """
        ...
    def alignmentRect(self, *args, **kwargs):
        """ """
        ...
    def childEvent(self, *args, **kwargs):
        """ """
        ...
    def contentsMargins(self, *args, **kwargs):
        """ """
        ...
    def contentsRect(self, *args, **kwargs):
        """ """
        ...
    def count(self, *args, **kwargs):
        """ """
        ...
    def expandingDirections(self, *args, **kwargs):
        """ """
        ...
    def geometry(self, *args, **kwargs):
        """ """
        ...
    def getContentsMargins(self, *args, **kwargs):
        """ """
        ...
    def indexOf(self, *args, **kwargs):
        """ """
        ...
    def invalidate(self, *args, **kwargs):
        """ """
        ...
    def isEmpty(self, *args, **kwargs):
        """ """
        ...
    def isEnabled(self, *args, **kwargs):
        """ """
        ...
    def itemAt(self, *args, **kwargs):
        """ """
        ...
    def layout(self, *args, **kwargs):
        """ """
        ...
    def maximumSize(self, *args, **kwargs):
        """ """
        ...
    def menuBar(self, *args, **kwargs):
        """ """
        ...
    def minimumSize(self, *args, **kwargs):
        """ """
        ...
    def parentWidget(self, *args, **kwargs):
        """ """
        ...
    def removeItem(self, *args, **kwargs):
        """ """
        ...
    def removeWidget(self, *args, **kwargs):
        """ """
        ...
    def setAlignment(self, *args, **kwargs):
        """ """
        ...
    def setContentsMargins(self, *args, **kwargs):
        """ """
        ...
    def setEnabled(self, *args, **kwargs):
        """ """
        ...
    def setGeometry(self, *args, **kwargs):
        """ """
        ...
    def setMenuBar(self, *args, **kwargs):
        """ """
        ...
    def setSizeConstraint(self, *args, **kwargs):
        """ """
        ...
    def setSpacing(self, *args, **kwargs):
        """ """
        ...
    def sizeConstraint(self, *args, **kwargs):
        """ """
        ...
    def spacing(self, *args, **kwargs):
        """ """
        ...
    def takeAt(self, *args, **kwargs):
        """ """
        ...
    def totalHeightForWidth(self, *args, **kwargs):
        """ """
        ...
    def totalMaximumSize(self, *args, **kwargs):
        """ """
        ...
    def totalMinimumSize(self, *args, **kwargs):
        """ """
        ...
    def totalSizeHint(self, *args, **kwargs):
        """ """
        ...
    def update(self, *args, **kwargs):
        """ """
        ...
    def widgetEvent(self, *args, **kwargs):
        """ """
        ...
    ...

class QLayoutItem(Shiboken.Object):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def alignment(self, *args, **kwargs):
        """ """
        ...
    def controlTypes(self, *args, **kwargs):
        """ """
        ...
    def expandingDirections(self, *args, **kwargs):
        """ """
        ...
    def geometry(self, *args, **kwargs):
        """ """
        ...
    def hasHeightForWidth(self, *args, **kwargs):
        """ """
        ...
    def heightForWidth(self, *args, **kwargs):
        """ """
        ...
    def invalidate(self, *args, **kwargs):
        """ """
        ...
    def isEmpty(self, *args, **kwargs):
        """ """
        ...
    def layout(self, *args, **kwargs):
        """ """
        ...
    def maximumSize(self, *args, **kwargs):
        """ """
        ...
    def minimumHeightForWidth(self, *args, **kwargs):
        """ """
        ...
    def minimumSize(self, *args, **kwargs):
        """ """
        ...
    def setAlignment(self, *args, **kwargs):
        """ """
        ...
    def setGeometry(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def spacerItem(self, *args, **kwargs):
        """ """
        ...
    def widget(self, *args, **kwargs):
        """ """
        ...
    ...

class QLineEdit(QWidget):
    EchoMode: ...
    """
    <type 'PySide.QtGui.QLineEdit.EchoMode'>
    """

    NoEcho: ... = PySide.QtGui.QLineEdit.EchoMode.NoEcho
    """
    """

    Normal: ... = PySide.QtGui.QLineEdit.EchoMode.Normal
    """
    """

    Password: ... = PySide.QtGui.QLineEdit.EchoMode.Password
    """
    """

    PasswordEchoOnEdit: ...
    """
    PySide.QtGui.QLineEdit.EchoMode.PasswordEchoOnEdi...
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    cursorPositionChanged: ...
    """
    Signal
    """

    editingFinished: ...
    """
    Signal
    """

    lostFocus: ...
    """
    Signal
    """

    returnPressed: ...
    """
    Signal
    """

    selectionChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    textChanged: ...
    """
    Signal
    """

    textEdited: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def alignment(self, *args, **kwargs):
        """ """
        ...
    def backspace(self, *args, **kwargs):
        """ """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def clear(self, *args, **kwargs):
        """ """
        ...
    def completer(self, *args, **kwargs):
        """ """
        ...
    def contextMenuEvent(self, *args, **kwargs):
        """ """
        ...
    def copy(self, *args, **kwargs):
        """ """
        ...
    def createStandardContextMenu(self, *args, **kwargs):
        """ """
        ...
    def cursorBackward(self, *args, **kwargs):
        """ """
        ...
    def cursorForward(self, *args, **kwargs):
        """ """
        ...
    def cursorMoveStyle(self, *args, **kwargs):
        """ """
        ...
    def cursorPosition(self, *args, **kwargs):
        """ """
        ...
    def cursorPositionAt(self, *args, **kwargs):
        """ """
        ...
    def cursorRect(self, *args, **kwargs):
        """ """
        ...
    def cursorWordBackward(self, *args, **kwargs):
        """ """
        ...
    def cursorWordForward(self, *args, **kwargs):
        """ """
        ...
    def cut(self, *args, **kwargs):
        """ """
        ...
    def del_(self, *args, **kwargs):
        """ """
        ...
    def deselect(self, *args, **kwargs):
        """ """
        ...
    def displayText(self, *args, **kwargs):
        """ """
        ...
    def dragEnabled(self, *args, **kwargs):
        """ """
        ...
    def dragEnterEvent(self, *args, **kwargs):
        """ """
        ...
    def dragLeaveEvent(self, *args, **kwargs):
        """ """
        ...
    def dragMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def dropEvent(self, *args, **kwargs):
        """ """
        ...
    def echoMode(self, *args, **kwargs):
        """ """
        ...
    def end(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def focusInEvent(self, *args, **kwargs):
        """ """
        ...
    def focusOutEvent(self, *args, **kwargs):
        """ """
        ...
    def getTextMargins(self, *args, **kwargs):
        """ """
        ...
    def hasAcceptableInput(self, *args, **kwargs):
        """ """
        ...
    def hasFrame(self, *args, **kwargs):
        """ """
        ...
    def hasSelectedText(self, *args, **kwargs):
        """ """
        ...
    def home(self, *args, **kwargs):
        """ """
        ...
    def initStyleOption(self, *args, **kwargs):
        """ """
        ...
    def inputMask(self, *args, **kwargs):
        """ """
        ...
    def inputMethodEvent(self, *args, **kwargs):
        """ """
        ...
    def inputMethodQuery(self, *args, **kwargs):
        """ """
        ...
    def insert(self, *args, **kwargs):
        """ """
        ...
    def isModified(self, *args, **kwargs):
        """ """
        ...
    def isReadOnly(self, *args, **kwargs):
        """ """
        ...
    def isRedoAvailable(self, *args, **kwargs):
        """ """
        ...
    def isUndoAvailable(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def maxLength(self, *args, **kwargs):
        """ """
        ...
    def minimumSizeHint(self, *args, **kwargs):
        """ """
        ...
    def mouseDoubleClickEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def paste(self, *args, **kwargs):
        """ """
        ...
    def placeholderText(self, *args, **kwargs):
        """ """
        ...
    def redo(self, *args, **kwargs):
        """ """
        ...
    def selectAll(self, *args, **kwargs):
        """ """
        ...
    def selectedText(self, *args, **kwargs):
        """ """
        ...
    def selectionStart(self, *args, **kwargs):
        """ """
        ...
    def setAlignment(self, *args, **kwargs):
        """ """
        ...
    def setCompleter(self, *args, **kwargs):
        """ """
        ...
    def setCursorMoveStyle(self, *args, **kwargs):
        """ """
        ...
    def setCursorPosition(self, *args, **kwargs):
        """ """
        ...
    def setDragEnabled(self, *args, **kwargs):
        """ """
        ...
    def setEchoMode(self, *args, **kwargs):
        """ """
        ...
    def setFrame(self, *args, **kwargs):
        """ """
        ...
    def setInputMask(self, *args, **kwargs):
        """ """
        ...
    def setMaxLength(self, *args, **kwargs):
        """ """
        ...
    def setModified(self, *args, **kwargs):
        """ """
        ...
    def setPlaceholderText(self, *args, **kwargs):
        """ """
        ...
    def setReadOnly(self, *args, **kwargs):
        """ """
        ...
    def setSelection(self, *args, **kwargs):
        """ """
        ...
    def setText(self, *args, **kwargs):
        """ """
        ...
    def setTextMargins(self, *args, **kwargs):
        """ """
        ...
    def setValidator(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def text(self, *args, **kwargs):
        """ """
        ...
    def textMargins(self, *args, **kwargs):
        """ """
        ...
    def undo(self, *args, **kwargs):
        """ """
        ...
    def validator(self, *args, **kwargs):
        """ """
        ...
    ...

class QListView(QAbstractItemView):
    Adjust: ... = PySide.QtGui.QListView.ResizeMode.Adjust
    """
    """

    Batched: ... = PySide.QtGui.QListView.LayoutMode.Batched
    """
    """

    Fixed: ... = PySide.QtGui.QListView.ResizeMode.Fixed
    """
    """

    Flow: ...
    """
    <type 'PySide.QtGui.QListView.Flow'>
    """

    Free: ... = PySide.QtGui.QListView.Movement.Free
    """
    """

    IconMode: ... = PySide.QtGui.QListView.ViewMode.IconMode
    """
    """

    LayoutMode: ...
    """
    <type 'PySide.QtGui.QListView.LayoutMode'>
    """

    LeftToRight: ... = PySide.QtGui.QListView.Flow.LeftToRight
    """
    """

    ListMode: ... = PySide.QtGui.QListView.ViewMode.ListMode
    """
    """

    Movement: ...
    """
    <type 'PySide.QtGui.QListView.Movement'>
    """

    ResizeMode: ...
    """
    <type 'PySide.QtGui.QListView.ResizeMode'>
    """

    SinglePass: ... = PySide.QtGui.QListView.LayoutMode.SinglePass
    """
    """

    Snap: ... = PySide.QtGui.QListView.Movement.Snap
    """
    """

    Static: ... = PySide.QtGui.QListView.Movement.Static
    """
    """

    TopToBottom: ... = PySide.QtGui.QListView.Flow.TopToBottom
    """
    """

    ViewMode: ...
    """
    <type 'PySide.QtGui.QListView.ViewMode'>
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    indexesMoved: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def batchSize(self, *args, **kwargs):
        """ """
        ...
    def clearPropertyFlags(self, *args, **kwargs):
        """ """
        ...
    def contentsSize(self, *args, **kwargs):
        """ """
        ...
    def currentChanged(self, *args, **kwargs):
        """ """
        ...
    def dataChanged(self, *args, **kwargs):
        """ """
        ...
    def doItemsLayout(self, *args, **kwargs):
        """ """
        ...
    def dragLeaveEvent(self, *args, **kwargs):
        """ """
        ...
    def dragMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def dropEvent(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def flow(self, *args, **kwargs):
        """ """
        ...
    def gridSize(self, *args, **kwargs):
        """ """
        ...
    def horizontalOffset(self, *args, **kwargs):
        """ """
        ...
    def indexAt(self, *args, **kwargs):
        """ """
        ...
    def internalDrag(self, *args, **kwargs):
        """ """
        ...
    def internalDrop(self, *args, **kwargs):
        """ """
        ...
    def isIndexHidden(self, *args, **kwargs):
        """ """
        ...
    def isRowHidden(self, *args, **kwargs):
        """ """
        ...
    def isSelectionRectVisible(self, *args, **kwargs):
        """ """
        ...
    def isWrapping(self, *args, **kwargs):
        """ """
        ...
    def layoutMode(self, *args, **kwargs):
        """ """
        ...
    def modelColumn(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def moveCursor(self, *args, **kwargs):
        """ """
        ...
    def movement(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def rectForIndex(self, *args, **kwargs):
        """ """
        ...
    def reset(self, *args, **kwargs):
        """ """
        ...
    def resizeContents(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def resizeMode(self, *args, **kwargs):
        """ """
        ...
    def rowsAboutToBeRemoved(self, *args, **kwargs):
        """ """
        ...
    def rowsInserted(self, *args, **kwargs):
        """ """
        ...
    def scrollContentsBy(self, *args, **kwargs):
        """ """
        ...
    def scrollTo(self, *args, **kwargs):
        """ """
        ...
    def selectedIndexes(self, *args, **kwargs):
        """ """
        ...
    def selectionChanged(self, *args, **kwargs):
        """ """
        ...
    def setBatchSize(self, *args, **kwargs):
        """ """
        ...
    def setFlow(self, *args, **kwargs):
        """ """
        ...
    def setGridSize(self, *args, **kwargs):
        """ """
        ...
    def setLayoutMode(self, *args, **kwargs):
        """ """
        ...
    def setModelColumn(self, *args, **kwargs):
        """ """
        ...
    def setMovement(self, *args, **kwargs):
        """ """
        ...
    def setPositionForIndex(self, *args, **kwargs):
        """ """
        ...
    def setResizeMode(self, *args, **kwargs):
        """ """
        ...
    def setRootIndex(self, *args, **kwargs):
        """ """
        ...
    def setRowHidden(self, *args, **kwargs):
        """ """
        ...
    def setSelection(self, *args, **kwargs):
        """ """
        ...
    def setSelectionRectVisible(self, *args, **kwargs):
        """ """
        ...
    def setSpacing(self, *args, **kwargs):
        """ """
        ...
    def setUniformItemSizes(self, *args, **kwargs):
        """ """
        ...
    def setViewMode(self, *args, **kwargs):
        """ """
        ...
    def setWordWrap(self, *args, **kwargs):
        """ """
        ...
    def setWrapping(self, *args, **kwargs):
        """ """
        ...
    def spacing(self, *args, **kwargs):
        """ """
        ...
    def startDrag(self, *args, **kwargs):
        """ """
        ...
    def timerEvent(self, *args, **kwargs):
        """ """
        ...
    def uniformItemSizes(self, *args, **kwargs):
        """ """
        ...
    def updateGeometries(self, *args, **kwargs):
        """ """
        ...
    def verticalOffset(self, *args, **kwargs):
        """ """
        ...
    def viewMode(self, *args, **kwargs):
        """ """
        ...
    def viewOptions(self, *args, **kwargs):
        """ """
        ...
    def visualRect(self, *args, **kwargs):
        """ """
        ...
    def visualRegionForSelection(self, *args, **kwargs):
        """ """
        ...
    def wordWrap(self, *args, **kwargs):
        """ """
        ...
    ...

class QListWidget(QListView):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    currentItemChanged: ...
    """
    Signal
    """

    currentRowChanged: ...
    """
    Signal
    """

    currentTextChanged: ...
    """
    Signal
    """

    itemActivated: ...
    """
    Signal
    """

    itemChanged: ...
    """
    Signal
    """

    itemClicked: ...
    """
    Signal
    """

    itemDoubleClicked: ...
    """
    Signal
    """

    itemEntered: ...
    """
    Signal
    """

    itemPressed: ...
    """
    Signal
    """

    itemSelectionChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addItem(self, *args, **kwargs):
        """ """
        ...
    def addItems(self, *args, **kwargs):
        """ """
        ...
    def clear(self, *args, **kwargs):
        """ """
        ...
    def closePersistentEditor(self, *args, **kwargs):
        """ """
        ...
    def count(self, *args, **kwargs):
        """ """
        ...
    def currentItem(self, *args, **kwargs):
        """ """
        ...
    def currentRow(self, *args, **kwargs):
        """ """
        ...
    def dropEvent(self, *args, **kwargs):
        """ """
        ...
    def dropMimeData(self, *args, **kwargs):
        """ """
        ...
    def editItem(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def findItems(self, *args, **kwargs):
        """ """
        ...
    def indexFromItem(self, *args, **kwargs):
        """ """
        ...
    def insertItem(self, *args, **kwargs):
        """ """
        ...
    def insertItems(self, *args, **kwargs):
        """ """
        ...
    def isSortingEnabled(self, *args, **kwargs):
        """ """
        ...
    def item(self, *args, **kwargs):
        """ """
        ...
    def itemAt(self, *args, **kwargs):
        """ """
        ...
    def itemFromIndex(self, *args, **kwargs):
        """ """
        ...
    def itemWidget(self, *args, **kwargs):
        """ """
        ...
    def items(self, *args, **kwargs):
        """ """
        ...
    def mimeData(self, *args, **kwargs):
        """ """
        ...
    def mimeTypes(self, *args, **kwargs):
        """ """
        ...
    def openPersistentEditor(self, *args, **kwargs):
        """ """
        ...
    def removeItemWidget(self, *args, **kwargs):
        """ """
        ...
    def row(self, *args, **kwargs):
        """ """
        ...
    def scrollToItem(self, *args, **kwargs):
        """ """
        ...
    def selectedItems(self, *args, **kwargs):
        """ """
        ...
    def setCurrentItem(self, *args, **kwargs):
        """ """
        ...
    def setCurrentRow(self, *args, **kwargs):
        """ """
        ...
    def setItemWidget(self, *args, **kwargs):
        """ """
        ...
    def setModel(self, *args, **kwargs):
        """ """
        ...
    def setSortingEnabled(self, *args, **kwargs):
        """ """
        ...
    def sortItems(self, *args, **kwargs):
        """ """
        ...
    def supportedDropActions(self, *args, **kwargs):
        """ """
        ...
    def takeItem(self, *args, **kwargs):
        """ """
        ...
    def visualItemRect(self, *args, **kwargs):
        """ """
        ...
    ...

class QListWidgetItem(Shiboken.Object):
    ItemType: ...
    """
    <type 'PySide.QtGui.QListWidgetItem.ItemType'>
    """

    Type: ... = PySide.QtGui.QListWidgetItem.ItemType.Type
    """
    """

    UserType: ... = PySide.QtGui.QListWidgetItem.ItemType.UserType
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __eq__(self, *args, **kwargs):
        """
        x.__eq__(y) <==> x==y
        """
        ...
    def __ge__(self, *args, **kwargs):
        """
        x.__ge__(y) <==> x>=y
        """
        ...
    def __gt__(self, *args, **kwargs):
        """
        x.__gt__(y) <==> x>y
        """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def __le__(self, *args, **kwargs):
        """
        x.__le__(y) <==> x<=y
        """
        ...
    def __lshift__(self, *args, **kwargs):
        """
        x.__lshift__(y) <==> x<<y
        """
        ...
    def __lt__(self, *args, **kwargs):
        """
        x.__lt__(y) <==> x<y
        """
        ...
    def __ne__(self, *args, **kwargs):
        """
        x.__ne__(y) <==> x!=y
        """
        ...
    def __rlshift__(self, *args, **kwargs):
        """
        x.__rlshift__(y) <==> y<<x
        """
        ...
    def __rrshift__(self, *args, **kwargs):
        """
        x.__rrshift__(y) <==> y>>x
        """
        ...
    def __rshift__(self, *args, **kwargs):
        """
        x.__rshift__(y) <==> x>>y
        """
        ...
    def background(self, *args, **kwargs):
        """ """
        ...
    def checkState(self, *args, **kwargs):
        """ """
        ...
    def clone(self, *args, **kwargs):
        """ """
        ...
    def data(self, *args, **kwargs):
        """ """
        ...
    def flags(self, *args, **kwargs):
        """ """
        ...
    def font(self, *args, **kwargs):
        """ """
        ...
    def foreground(self, *args, **kwargs):
        """ """
        ...
    def icon(self, *args, **kwargs):
        """ """
        ...
    def isHidden(self, *args, **kwargs):
        """ """
        ...
    def isSelected(self, *args, **kwargs):
        """ """
        ...
    def listWidget(self, *args, **kwargs):
        """ """
        ...
    def read(self, *args, **kwargs):
        """ """
        ...
    def setBackground(self, *args, **kwargs):
        """ """
        ...
    def setCheckState(self, *args, **kwargs):
        """ """
        ...
    def setData(self, *args, **kwargs):
        """ """
        ...
    def setFlags(self, *args, **kwargs):
        """ """
        ...
    def setFont(self, *args, **kwargs):
        """ """
        ...
    def setForeground(self, *args, **kwargs):
        """ """
        ...
    def setHidden(self, *args, **kwargs):
        """ """
        ...
    def setIcon(self, *args, **kwargs):
        """ """
        ...
    def setSelected(self, *args, **kwargs):
        """ """
        ...
    def setSizeHint(self, *args, **kwargs):
        """ """
        ...
    def setStatusTip(self, *args, **kwargs):
        """ """
        ...
    def setText(self, *args, **kwargs):
        """ """
        ...
    def setTextAlignment(self, *args, **kwargs):
        """ """
        ...
    def setToolTip(self, *args, **kwargs):
        """ """
        ...
    def setWhatsThis(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def statusTip(self, *args, **kwargs):
        """ """
        ...
    def text(self, *args, **kwargs):
        """ """
        ...
    def textAlignment(self, *args, **kwargs):
        """ """
        ...
    def toolTip(self, *args, **kwargs):
        """ """
        ...
    def type(self, *args, **kwargs):
        """ """
        ...
    def whatsThis(self, *args, **kwargs):
        """ """
        ...
    def write(self, *args, **kwargs):
        """ """
        ...
    ...

class QMainWindow(QWidget):
    AllowNestedDocks: ...
    """
    PySide.QtGui.QMainWindow.DockOption.AllowNestedDock...
    """

    AllowTabbedDocks: ...
    """
    PySide.QtGui.QMainWindow.DockOption.AllowTabbedDock...
    """

    AnimatedDocks: ... = PySide.QtGui.QMainWindow.DockOption.AnimatedDocks
    """
    """

    DockOption: ...
    """
    <type 'PySide.QtGui.QMainWindow.DockOption'>
    """

    DockOptions: ...
    """
    <type 'DockOptions'>
    """

    ForceTabbedDocks: ...
    """
    PySide.QtGui.QMainWindow.DockOption.ForceTabbedDock...
    """

    VerticalTabs: ... = PySide.QtGui.QMainWindow.DockOption.VerticalTabs
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    iconSizeChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    toolButtonStyleChanged: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addDockWidget(self, *args, **kwargs):
        """ """
        ...
    def addToolBar(self, *args, **kwargs):
        """ """
        ...
    def addToolBarBreak(self, *args, **kwargs):
        """ """
        ...
    def centralWidget(self, *args, **kwargs):
        """ """
        ...
    def contextMenuEvent(self, *args, **kwargs):
        """ """
        ...
    def corner(self, *args, **kwargs):
        """ """
        ...
    def createPopupMenu(self, *args, **kwargs):
        """ """
        ...
    def dockOptions(self, *args, **kwargs):
        """ """
        ...
    def dockWidgetArea(self, *args, **kwargs):
        """ """
        ...
    def documentMode(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def iconSize(self, *args, **kwargs):
        """ """
        ...
    def insertToolBar(self, *args, **kwargs):
        """ """
        ...
    def insertToolBarBreak(self, *args, **kwargs):
        """ """
        ...
    def isAnimated(self, *args, **kwargs):
        """ """
        ...
    def isDockNestingEnabled(self, *args, **kwargs):
        """ """
        ...
    def isSeparator(self, *args, **kwargs):
        """ """
        ...
    def menuBar(self, *args, **kwargs):
        """ """
        ...
    def menuWidget(self, *args, **kwargs):
        """ """
        ...
    def removeDockWidget(self, *args, **kwargs):
        """ """
        ...
    def removeToolBar(self, *args, **kwargs):
        """ """
        ...
    def removeToolBarBreak(self, *args, **kwargs):
        """ """
        ...
    def restoreDockWidget(self, *args, **kwargs):
        """ """
        ...
    def restoreState(self, *args, **kwargs):
        """ """
        ...
    def saveState(self, *args, **kwargs):
        """ """
        ...
    def setAnimated(self, *args, **kwargs):
        """ """
        ...
    def setCentralWidget(self, *args, **kwargs):
        """ """
        ...
    def setCorner(self, *args, **kwargs):
        """ """
        ...
    def setDockNestingEnabled(self, *args, **kwargs):
        """ """
        ...
    def setDockOptions(self, *args, **kwargs):
        """ """
        ...
    def setDocumentMode(self, *args, **kwargs):
        """ """
        ...
    def setIconSize(self, *args, **kwargs):
        """ """
        ...
    def setMenuBar(self, *args, **kwargs):
        """ """
        ...
    def setMenuWidget(self, *args, **kwargs):
        """ """
        ...
    def setStatusBar(self, *args, **kwargs):
        """ """
        ...
    def setTabPosition(self, *args, **kwargs):
        """ """
        ...
    def setTabShape(self, *args, **kwargs):
        """ """
        ...
    def setToolButtonStyle(self, *args, **kwargs):
        """ """
        ...
    def setUnifiedTitleAndToolBarOnMac(self, *args, **kwargs):
        """ """
        ...
    def splitDockWidget(self, *args, **kwargs):
        """ """
        ...
    def statusBar(self, *args, **kwargs):
        """ """
        ...
    def tabPosition(self, *args, **kwargs):
        """ """
        ...
    def tabShape(self, *args, **kwargs):
        """ """
        ...
    def tabifiedDockWidgets(self, *args, **kwargs):
        """ """
        ...
    def tabifyDockWidget(self, *args, **kwargs):
        """ """
        ...
    def toolBarArea(self, *args, **kwargs):
        """ """
        ...
    def toolBarBreak(self, *args, **kwargs):
        """ """
        ...
    def toolButtonStyle(self, *args, **kwargs):
        """ """
        ...
    def unifiedTitleAndToolBarOnMac(self, *args, **kwargs):
        """ """
        ...
    ...

class QMdiArea(QAbstractScrollArea):
    ActivationHistoryOrder: ...
    """
    PySide.QtGui.QMdiArea.WindowOrder.ActivationH...
    """

    AreaOption: ...
    """
    <type 'PySide.QtGui.QMdiArea.AreaOption'>
    """

    AreaOptions: ...
    """
    <type 'AreaOptions'>
    """

    CreationOrder: ... = PySide.QtGui.QMdiArea.WindowOrder.CreationOrder
    """
    """

    DontMaximizeSubWindowOnActivation: ...
    """
    PySide.QtGui.QMdiArea.AreaOption.D...
    """

    StackingOrder: ... = PySide.QtGui.QMdiArea.WindowOrder.StackingOrder
    """
    """

    SubWindowView: ... = PySide.QtGui.QMdiArea.ViewMode.SubWindowView
    """
    """

    TabbedView: ... = PySide.QtGui.QMdiArea.ViewMode.TabbedView
    """
    """

    ViewMode: ...
    """
    <type 'PySide.QtGui.QMdiArea.ViewMode'>
    """

    WindowOrder: ...
    """
    <type 'PySide.QtGui.QMdiArea.WindowOrder'>
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    subWindowActivated: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def activateNextSubWindow(self, *args, **kwargs):
        """ """
        ...
    def activatePreviousSubWindow(self, *args, **kwargs):
        """ """
        ...
    def activationOrder(self, *args, **kwargs):
        """ """
        ...
    def activeSubWindow(self, *args, **kwargs):
        """ """
        ...
    def addSubWindow(self, *args, **kwargs):
        """ """
        ...
    def background(self, *args, **kwargs):
        """ """
        ...
    def cascadeSubWindows(self, *args, **kwargs):
        """ """
        ...
    def childEvent(self, *args, **kwargs):
        """ """
        ...
    def closeActiveSubWindow(self, *args, **kwargs):
        """ """
        ...
    def closeAllSubWindows(self, *args, **kwargs):
        """ """
        ...
    def currentSubWindow(self, *args, **kwargs):
        """ """
        ...
    def documentMode(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def eventFilter(self, *args, **kwargs):
        """ """
        ...
    def minimumSizeHint(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def removeSubWindow(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def scrollContentsBy(self, *args, **kwargs):
        """ """
        ...
    def setActivationOrder(self, *args, **kwargs):
        """ """
        ...
    def setActiveSubWindow(self, *args, **kwargs):
        """ """
        ...
    def setBackground(self, *args, **kwargs):
        """ """
        ...
    def setDocumentMode(self, *args, **kwargs):
        """ """
        ...
    def setOption(self, *args, **kwargs):
        """ """
        ...
    def setTabPosition(self, *args, **kwargs):
        """ """
        ...
    def setTabShape(self, *args, **kwargs):
        """ """
        ...
    def setTabsClosable(self, *args, **kwargs):
        """ """
        ...
    def setTabsMovable(self, *args, **kwargs):
        """ """
        ...
    def setViewMode(self, *args, **kwargs):
        """ """
        ...
    def setupViewport(self, *args, **kwargs):
        """ """
        ...
    def showEvent(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def subWindowList(self, *args, **kwargs):
        """ """
        ...
    def tabPosition(self, *args, **kwargs):
        """ """
        ...
    def tabShape(self, *args, **kwargs):
        """ """
        ...
    def tabsClosable(self, *args, **kwargs):
        """ """
        ...
    def tabsMovable(self, *args, **kwargs):
        """ """
        ...
    def testOption(self, *args, **kwargs):
        """ """
        ...
    def tileSubWindows(self, *args, **kwargs):
        """ """
        ...
    def timerEvent(self, *args, **kwargs):
        """ """
        ...
    def viewMode(self, *args, **kwargs):
        """ """
        ...
    def viewportEvent(self, *args, **kwargs):
        """ """
        ...
    ...

class QMdiSubWindow(QWidget):
    AllowOutsideAreaHorizontally: ...
    """
    PySide.QtGui.QMdiSubWindow.SubWindowOpt...
    """

    AllowOutsideAreaVertically: ...
    """
    PySide.QtGui.QMdiSubWindow.SubWindowOptio...
    """

    RubberBandMove: ...
    """
    PySide.QtGui.QMdiSubWindow.SubWindowOption.RubberBand...
    """

    RubberBandResize: ...
    """
    PySide.QtGui.QMdiSubWindow.SubWindowOption.RubberBa...
    """

    SubWindowOption: ...
    """
    <type 'PySide.QtGui.QMdiSubWindow.SubWindowOption'>
    """

    SubWindowOptions: ...
    """
    <type 'SubWindowOptions'>
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    aboutToActivate: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    windowStateChanged: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def childEvent(self, *args, **kwargs):
        """ """
        ...
    def closeEvent(self, *args, **kwargs):
        """ """
        ...
    def contextMenuEvent(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def eventFilter(self, *args, **kwargs):
        """ """
        ...
    def focusInEvent(self, *args, **kwargs):
        """ """
        ...
    def focusOutEvent(self, *args, **kwargs):
        """ """
        ...
    def hideEvent(self, *args, **kwargs):
        """ """
        ...
    def isShaded(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def keyboardPageStep(self, *args, **kwargs):
        """ """
        ...
    def keyboardSingleStep(self, *args, **kwargs):
        """ """
        ...
    def leaveEvent(self, *args, **kwargs):
        """ """
        ...
    def maximizedButtonsWidget(self, *args, **kwargs):
        """ """
        ...
    def maximizedSystemMenuIconWidget(self, *args, **kwargs):
        """ """
        ...
    def mdiArea(self, *args, **kwargs):
        """ """
        ...
    def minimumSizeHint(self, *args, **kwargs):
        """ """
        ...
    def mouseDoubleClickEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def moveEvent(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def setKeyboardPageStep(self, *args, **kwargs):
        """ """
        ...
    def setKeyboardSingleStep(self, *args, **kwargs):
        """ """
        ...
    def setOption(self, *args, **kwargs):
        """ """
        ...
    def setSystemMenu(self, *args, **kwargs):
        """ """
        ...
    def setWidget(self, *args, **kwargs):
        """ """
        ...
    def showEvent(self, *args, **kwargs):
        """ """
        ...
    def showShaded(self, *args, **kwargs):
        """ """
        ...
    def showSystemMenu(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def systemMenu(self, *args, **kwargs):
        """ """
        ...
    def testOption(self, *args, **kwargs):
        """ """
        ...
    def timerEvent(self, *args, **kwargs):
        """ """
        ...
    def widget(self, *args, **kwargs):
        """ """
        ...
    ...

class QMenu(QWidget):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    aboutToHide: QtCore.Signal
    """
    Signal
    """

    aboutToShow: QtCore.Signal
    """
    Signal
    """

    activated: QtCore.Signal
    """
    Signal
    """

    highlighted: QtCore.Signal
    """
    Signal
    """

    hovered: QtCore.Signal
    """
    Signal
    """

    staticMetaObject: QtCore.Signal
    """
    <PySide.QtCore.QMetaObject object>
    """

    triggered: QtCore.Signal
    """
    Signal
    """
    @staticmethod
    def exec_(*args, **kwargs):
        """ """
        ...
    def __getattribute__(self, *args, **kwargs):
        """
        x.__getattribute__('name') <==> x.name
        """
        ...
    def __init__(self, title: typing.Text, parent = typing.Optional[QWidget] = ...):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def actionAt(self, *args, **kwargs):
        """ """
        ...
    def actionEvent(self, *args, **kwargs):
        """ """
        ...
    def actionGeometry(self, *args, **kwargs):
        """ """
        ...
    def activeAction(self, *args, **kwargs):
        """ """
        ...
    @typing.overload
    def addAction(self, text: typing.Text) -> QAction: ...
    @typing.overload
    def addAction(
        self,
        text: typing.Text,
        receiver: QtCore.Signal.Receiver,
        member: typing.Text = ...,
    ) -> QAction: ...
    @typing.overload
    def addAction(
        self,
        icon: QtGui.QIcon,
        text: typing.Text,
        receiver: QtCore.Signal.Receiver,
        member: typing.Text = ...,
    ) -> QAction: ...
    @typing.overload
    def addAction(self, action: QAction) -> QAction:
        """ """
        ...
    @typing.overload
    def addMenu(self, title: typing.Text) -> QMenu: ...
    @typing.overload
    def addMenu(self, menu: QMenu) -> QMenu: ...
    @typing.overload
    def addMenu(self, icon: QtGui.QIcon, title: typing.Text) -> QMenu:
        """ """
        ...
    def addSeparator(self, *args, **kwargs):
        """ """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def clear(self) -> None:
        """ """
        ...
    def columnCount(self, *args, **kwargs):
        """ """
        ...
    def defaultAction(self, *args, **kwargs):
        """ """
        ...
    def enterEvent(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def focusNextPrevChild(self, *args, **kwargs):
        """ """
        ...
    def hideEvent(self, *args, **kwargs):
        """ """
        ...
    def hideTearOffMenu(self, *args, **kwargs):
        """ """
        ...
    def icon(self, *args, **kwargs):
        """ """
        ...
    def initStyleOption(self, *args, **kwargs):
        """ """
        ...
    def insertMenu(self, *args, **kwargs):
        """ """
        ...
    def insertSeparator(self, *args, **kwargs):
        """ """
        ...
    def isEmpty(self, *args, **kwargs):
        """ """
        ...
    def isTearOffEnabled(self, *args, **kwargs):
        """ """
        ...
    def isTearOffMenuVisible(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def leaveEvent(self, *args, **kwargs):
        """ """
        ...
    def menuAction(self) -> QAction:
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def popup(self, *args, **kwargs):
        """ """
        ...
    def separatorsCollapsible(self, *args, **kwargs):
        """ """
        ...
    def setActiveAction(self, *args, **kwargs):
        """ """
        ...
    def setDefaultAction(self, *args, **kwargs):
        """ """
        ...
    def setIcon(self, *args, **kwargs):
        """ """
        ...
    def setSeparatorsCollapsible(self, *args, **kwargs):
        """ """
        ...
    def setTearOffEnabled(self, *args, **kwargs):
        """ """
        ...
    def setTitle(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def timerEvent(self, *args, **kwargs):
        """ """
        ...
    def title(self, *args, **kwargs):
        """ """
        ...
    def wheelEvent(self, *args, **kwargs):
        """ """
        ...
    ...

class QMenuBar(QWidget):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    activated: ...
    """
    Signal
    """

    highlighted: ...
    """
    Signal
    """

    hovered: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    triggered: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def actionAt(self, *args, **kwargs):
        """ """
        ...
    def actionEvent(self, *args, **kwargs):
        """ """
        ...
    def actionGeometry(self, *args, **kwargs):
        """ """
        ...
    def activeAction(self, *args, **kwargs):
        """ """
        ...
    def addAction(self, *args, **kwargs):
        """ """
        ...
    @typing.overload
    def addMenu(self, title: typing.Text) -> QMenu: ...
    @typing.overload
    def addMenu(self, menu: QMenu) -> QMenu: ...
    @typing.overload
    def addMenu(self, icon: QtGui.QIcon, title: typing.Text) -> QMenu:
        """ """
        ...
    def addSeparator(self, *args, **kwargs):
        """ """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def clear(self, *args, **kwargs):
        """ """
        ...
    def cornerWidget(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def eventFilter(self, *args, **kwargs):
        """ """
        ...
    def focusInEvent(self, *args, **kwargs):
        """ """
        ...
    def focusOutEvent(self, *args, **kwargs):
        """ """
        ...
    def heightForWidth(self, *args, **kwargs):
        """ """
        ...
    def initStyleOption(self, *args, **kwargs):
        """ """
        ...
    def insertMenu(self, *args, **kwargs):
        """ """
        ...
    def insertSeparator(self, *args, **kwargs):
        """ """
        ...
    def isDefaultUp(self, *args, **kwargs):
        """ """
        ...
    def isNativeMenuBar(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def leaveEvent(self, *args, **kwargs):
        """ """
        ...
    def minimumSizeHint(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def setActiveAction(self, *args, **kwargs):
        """ """
        ...
    def setCornerWidget(self, *args, **kwargs):
        """ """
        ...
    def setDefaultUp(self, *args, **kwargs):
        """ """
        ...
    def setNativeMenuBar(self, *args, **kwargs):
        """ """
        ...
    def setVisible(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def timerEvent(self, *args, **kwargs):
        """ """
        ...
    ...

class QMessageBox(QDialog):
    Abort: ... = PySide.QtGui.QMessageBox.StandardButton.Abort
    """
    """

    AcceptRole: ... = PySide.QtGui.QMessageBox.ButtonRole.AcceptRole
    """
    """

    ActionRole: ... = PySide.QtGui.QMessageBox.ButtonRole.ActionRole
    """
    """

    Apply: ... = PySide.QtGui.QMessageBox.StandardButton.Apply
    """
    """

    ApplyRole: ... = PySide.QtGui.QMessageBox.ButtonRole.ApplyRole
    """
    """

    ButtonMask: ... = PySide.QtGui.QMessageBox.StandardButton.ButtonMask
    """
    """

    ButtonRole: ...
    """
    <type 'PySide.QtGui.QMessageBox.ButtonRole'>
    """

    Cancel: ... = PySide.QtGui.QMessageBox.StandardButton.Cancel
    """
    """

    Close: ... = PySide.QtGui.QMessageBox.StandardButton.Close
    """
    """

    Critical: ... = PySide.QtGui.QMessageBox.Icon.Critical
    """
    """

    Default: ... = PySide.QtGui.QMessageBox.StandardButton.Default
    """
    """

    DestructiveRole: ... = PySide.QtGui.QMessageBox.ButtonRole.DestructiveRole
    """
    """

    Discard: ... = PySide.QtGui.QMessageBox.StandardButton.Discard
    """
    """

    Escape: ... = PySide.QtGui.QMessageBox.StandardButton.Escape
    """
    """

    FirstButton: ... = PySide.QtGui.QMessageBox.StandardButton.FirstButton
    """
    """

    FlagMask: ... = PySide.QtGui.QMessageBox.StandardButton.FlagMask
    """
    """

    Help: ... = PySide.QtGui.QMessageBox.StandardButton.Help
    """
    """

    HelpRole: ... = PySide.QtGui.QMessageBox.ButtonRole.HelpRole
    """
    """

    Icon: ...
    """
    <type 'PySide.QtGui.QMessageBox.Icon'>
    """

    Ignore: ... = PySide.QtGui.QMessageBox.StandardButton.Ignore
    """
    """

    Information: ... = PySide.QtGui.QMessageBox.Icon.Information
    """
    """

    InvalidRole: ... = PySide.QtGui.QMessageBox.ButtonRole.InvalidRole
    """
    """

    LastButton: ... = PySide.QtGui.QMessageBox.StandardButton.LastButton
    """
    """

    NRoles: ... = PySide.QtGui.QMessageBox.ButtonRole.NRoles
    """
    """

    No: ... = PySide.QtGui.QMessageBox.StandardButton.No
    """
    """

    NoAll: ... = PySide.QtGui.QMessageBox.StandardButton.NoAll
    """
    """

    NoButton: ... = PySide.QtGui.QMessageBox.StandardButton.NoButton
    """
    """

    NoIcon: ... = PySide.QtGui.QMessageBox.Icon.NoIcon
    """
    """

    NoRole: ... = PySide.QtGui.QMessageBox.ButtonRole.NoRole
    """
    """

    NoToAll: ... = PySide.QtGui.QMessageBox.StandardButton.NoToAll
    """
    """

    Ok: ... = PySide.QtGui.QMessageBox.StandardButton.Ok
    """
    """

    Open: ... = PySide.QtGui.QMessageBox.StandardButton.Open
    """
    """

    Question: ... = PySide.QtGui.QMessageBox.Icon.Question
    """
    """

    RejectRole: ... = PySide.QtGui.QMessageBox.ButtonRole.RejectRole
    """
    """

    Reset: ... = PySide.QtGui.QMessageBox.StandardButton.Reset
    """
    """

    ResetRole: ... = PySide.QtGui.QMessageBox.ButtonRole.ResetRole
    """
    """

    RestoreDefaults: ...
    """
    PySide.QtGui.QMessageBox.StandardButton.RestoreDefau...
    """

    Retry: ... = PySide.QtGui.QMessageBox.StandardButton.Retry
    """
    """

    Save: ... = PySide.QtGui.QMessageBox.StandardButton.Save
    """
    """

    SaveAll: ... = PySide.QtGui.QMessageBox.StandardButton.SaveAll
    """
    """

    StandardButton: ...
    """
    <type 'PySide.QtGui.QMessageBox.StandardButton'>
    """

    StandardButtons: ...
    """
    <type 'StandardButtons'>
    """

    Warning: ... = PySide.QtGui.QMessageBox.Icon.Warning
    """
    """

    Yes: ... = PySide.QtGui.QMessageBox.StandardButton.Yes
    """
    """

    YesAll: ... = PySide.QtGui.QMessageBox.StandardButton.YesAll
    """
    """

    YesRole: ... = PySide.QtGui.QMessageBox.ButtonRole.YesRole
    """
    """

    YesToAll: ... = PySide.QtGui.QMessageBox.StandardButton.YesToAll
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    buttonClicked: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    @staticmethod
    def about(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def aboutQt(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def critical(

             parent: QWidget,
        title: typing.Text,
        text: typing.Text,
        buttons: StandardButtons = ...,
        defaultButton: StandardButton = ...,
    ) -> StandardButton:
        """ """
        ...
    @staticmethod
    def information(
        parent: QWidget,
        title: typing.Text,
        text: typing.Text,
        buttons: StandardButtons = ...,
        defaultButton: StandardButton = ...,
    ) -> StandardButton:
        """ """
        ...
    @staticmethod
    def question(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def warning(*args, **kwargs):
        """ """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addButton(self, *args, **kwargs):
        """ """
        ...
    def button(self, *args, **kwargs):
        """ """
        ...
    def buttonRole(self, *args, **kwargs):
        """ """
        ...
    def buttons(self, *args, **kwargs):
        """ """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def clickedButton(self, *args, **kwargs):
        """ """
        ...
    def closeEvent(self, *args, **kwargs):
        """ """
        ...
    def defaultButton(self, *args, **kwargs):
        """ """
        ...
    def detailedText(self, *args, **kwargs):
        """ """
        ...
    def escapeButton(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def icon(self, *args, **kwargs):
        """ """
        ...
    def iconPixmap(self, *args, **kwargs):
        """ """
        ...
    def informativeText(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def open(self, *args, **kwargs):
        """ """
        ...
    def removeButton(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def setDefaultButton(self, *args, **kwargs):
        """ """
        ...
    def setDetailedText(self, *args, **kwargs):
        """ """
        ...
    def setEscapeButton(self, *args, **kwargs):
        """ """
        ...
    def setIcon(self, *args, **kwargs):
        """ """
        ...
    def setIconPixmap(self, *args, **kwargs):
        """ """
        ...
    def setInformativeText(self, *args, **kwargs):
        """ """
        ...
    def setStandardButtons(self, *args, **kwargs):
        """ """
        ...
    def setText(self, *args, **kwargs):
        """ """
        ...
    def setTextFormat(self, *args, **kwargs):
        """ """
        ...
    def setWindowModality(self, *args, **kwargs):
        """ """
        ...
    def setWindowTitle(self, *args, **kwargs):
        """ """
        ...
    def showEvent(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def standardButton(self, *args, **kwargs):
        """ """
        ...
    def standardButtons(self, *args, **kwargs):
        """ """
        ...
    def text(self, *args, **kwargs):
        """ """
        ...
    def textFormat(self, *args, **kwargs):
        """ """
        ...
    ...

class QMouseEventTransition(PySide.QtCore.QEventTransition):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def button(self, *args, **kwargs):
        """ """
        ...
    def eventTest(self, *args, **kwargs):
        """ """
        ...
    def hitTestPath(self, *args, **kwargs):
        """ """
        ...
    def modifierMask(self, *args, **kwargs):
        """ """
        ...
    def onTransition(self, *args, **kwargs):
        """ """
        ...
    def setButton(self, *args, **kwargs):
        """ """
        ...
    def setHitTestPath(self, *args, **kwargs):
        """ """
        ...
    def setModifierMask(self, *args, **kwargs):
        """ """
        ...
    ...

class QPanGesture(QGesture):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def acceleration(self, *args, **kwargs):
        """ """
        ...
    def delta(self, *args, **kwargs):
        """ """
        ...
    def lastOffset(self, *args, **kwargs):
        """ """
        ...
    def offset(self, *args, **kwargs):
        """ """
        ...
    def setAcceleration(self, *args, **kwargs):
        """ """
        ...
    def setLastOffset(self, *args, **kwargs):
        """ """
        ...
    def setOffset(self, *args, **kwargs):
        """ """
        ...
    ...

class QPinchGesture(QGesture):
    CenterPointChanged: ...
    """
    PySide.QtGui.QPinchGesture.ChangeFlag.CenterPoint...
    """

    ChangeFlag: ...
    """
    <type 'PySide.QtGui.QPinchGesture.ChangeFlag'>
    """

    ChangeFlags: ...
    """
    <type 'ChangeFlags'>
    """

    RotationAngleChanged: ...
    """
    PySide.QtGui.QPinchGesture.ChangeFlag.RotationA...
    """

    ScaleFactorChanged: ...
    """
    PySide.QtGui.QPinchGesture.ChangeFlag.ScaleFactor...
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def centerPoint(self, *args, **kwargs):
        """ """
        ...
    def changeFlags(self, *args, **kwargs):
        """ """
        ...
    def lastCenterPoint(self, *args, **kwargs):
        """ """
        ...
    def lastRotationAngle(self, *args, **kwargs):
        """ """
        ...
    def lastScaleFactor(self, *args, **kwargs):
        """ """
        ...
    def rotationAngle(self, *args, **kwargs):
        """ """
        ...
    def scaleFactor(self, *args, **kwargs):
        """ """
        ...
    def setCenterPoint(self, *args, **kwargs):
        """ """
        ...
    def setChangeFlags(self, *args, **kwargs):
        """ """
        ...
    def setLastCenterPoint(self, *args, **kwargs):
        """ """
        ...
    def setLastRotationAngle(self, *args, **kwargs):
        """ """
        ...
    def setLastScaleFactor(self, *args, **kwargs):
        """ """
        ...
    def setRotationAngle(self, *args, **kwargs):
        """ """
        ...
    def setScaleFactor(self, *args, **kwargs):
        """ """
        ...
    def setStartCenterPoint(self, *args, **kwargs):
        """ """
        ...
    def setTotalChangeFlags(self, *args, **kwargs):
        """ """
        ...
    def setTotalRotationAngle(self, *args, **kwargs):
        """ """
        ...
    def setTotalScaleFactor(self, *args, **kwargs):
        """ """
        ...
    def startCenterPoint(self, *args, **kwargs):
        """ """
        ...
    def totalChangeFlags(self, *args, **kwargs):
        """ """
        ...
    def totalRotationAngle(self, *args, **kwargs):
        """ """
        ...
    def totalScaleFactor(self, *args, **kwargs):
        """ """
        ...
    ...

class QPlainTextDocumentLayout(QtCore.QAbstractTextDocumentLayout):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def blockBoundingRect(self, *args, **kwargs):
        """ """
        ...
    def cursorWidth(self, *args, **kwargs):
        """ """
        ...
    def documentChanged(self, *args, **kwargs):
        """ """
        ...
    def documentSize(self, *args, **kwargs):
        """ """
        ...
    def draw(self, *args, **kwargs):
        """ """
        ...
    def ensureBlockLayout(self, *args, **kwargs):
        """ """
        ...
    def frameBoundingRect(self, *args, **kwargs):
        """ """
        ...
    def hitTest(self, *args, **kwargs):
        """ """
        ...
    def pageCount(self, *args, **kwargs):
        """ """
        ...
    def requestUpdate(self, *args, **kwargs):
        """ """
        ...
    def setCursorWidth(self, *args, **kwargs):
        """ """
        ...
    ...

class QPlainTextEdit(QAbstractScrollArea):
    LineWrapMode: ...
    """
    <type 'PySide.QtGui.QPlainTextEdit.LineWrapMode'>
    """

    NoWrap: ... = PySide.QtGui.QPlainTextEdit.LineWrapMode.NoWrap
    """
    """

    WidgetWidth: ... = PySide.QtGui.QPlainTextEdit.LineWrapMode.WidgetWidth
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    blockCountChanged: ...
    """
    Signal
    """

    copyAvailable: ...
    """
    Signal
    """

    cursorPositionChanged: ...
    """
    Signal
    """

    modificationChanged: ...
    """
    Signal
    """

    redoAvailable: ...
    """
    Signal
    """

    selectionChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    textChanged: ...
    """
    Signal
    """

    undoAvailable: ...
    """
    Signal
    """

    updateRequest: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def anchorAt(self, *args, **kwargs):
        """ """
        ...
    def appendHtml(self, *args, **kwargs):
        """ """
        ...
    def appendPlainText(self, *args, **kwargs):
        """ """
        ...
    def backgroundVisible(self, *args, **kwargs):
        """ """
        ...
    def blockBoundingGeometry(self, *args, **kwargs):
        """ """
        ...
    def blockBoundingRect(self, *args, **kwargs):
        """ """
        ...
    def blockCount(self, *args, **kwargs):
        """ """
        ...
    def canInsertFromMimeData(self, *args, **kwargs):
        """ """
        ...
    def canPaste(self, *args, **kwargs):
        """ """
        ...
    def centerCursor(self, *args, **kwargs):
        """ """
        ...
    def centerOnScroll(self, *args, **kwargs):
        """ """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def clear(self, *args, **kwargs):
        """ """
        ...
    def contentOffset(self, *args, **kwargs):
        """ """
        ...
    def contextMenuEvent(self, *args, **kwargs):
        """ """
        ...
    def copy(self, *args, **kwargs):
        """ """
        ...
    def createMimeDataFromSelection(self, *args, **kwargs):
        """ """
        ...
    def createStandardContextMenu(self, *args, **kwargs):
        """ """
        ...
    def currentCharFormat(self, *args, **kwargs):
        """ """
        ...
    def cursorForPosition(self, *args, **kwargs):
        """ """
        ...
    def cursorRect(self, *args, **kwargs):
        """ """
        ...
    def cursorWidth(self, *args, **kwargs):
        """ """
        ...
    def cut(self, *args, **kwargs):
        """ """
        ...
    def document(self, *args, **kwargs):
        """ """
        ...
    def documentTitle(self, *args, **kwargs):
        """ """
        ...
    def dragEnterEvent(self, *args, **kwargs):
        """ """
        ...
    def dragLeaveEvent(self, *args, **kwargs):
        """ """
        ...
    def dragMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def dropEvent(self, *args, **kwargs):
        """ """
        ...
    def ensureCursorVisible(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def extraSelections(self, *args, **kwargs):
        """ """
        ...
    def find(self, *args, **kwargs):
        """ """
        ...
    def firstVisibleBlock(self, *args, **kwargs):
        """ """
        ...
    def focusInEvent(self, *args, **kwargs):
        """ """
        ...
    def focusNextPrevChild(self, *args, **kwargs):
        """ """
        ...
    def focusOutEvent(self, *args, **kwargs):
        """ """
        ...
    def getPaintContext(self, *args, **kwargs):
        """ """
        ...
    def inputMethodEvent(self, *args, **kwargs):
        """ """
        ...
    def inputMethodQuery(self, *args, **kwargs):
        """ """
        ...
    def insertFromMimeData(self, *args, **kwargs):
        """ """
        ...
    def insertPlainText(self, *args, **kwargs):
        """ """
        ...
    def isReadOnly(self, *args, **kwargs):
        """ """
        ...
    def isUndoRedoEnabled(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def keyReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def lineWrapMode(self, *args, **kwargs):
        """ """
        ...
    def loadResource(self, *args, **kwargs):
        """ """
        ...
    def maximumBlockCount(self, *args, **kwargs):
        """ """
        ...
    def mergeCurrentCharFormat(self, *args, **kwargs):
        """ """
        ...
    def mouseDoubleClickEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def moveCursor(self, *args, **kwargs):
        """ """
        ...
    def overwriteMode(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def paste(self, *args, **kwargs):
        """ """
        ...
    def print_(self, *args, **kwargs):
        """ """
        ...
    def redo(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def scrollContentsBy(self, *args, **kwargs):
        """ """
        ...
    def selectAll(self, *args, **kwargs):
        """ """
        ...
    def setBackgroundVisible(self, *args, **kwargs):
        """ """
        ...
    def setCenterOnScroll(self, *args, **kwargs):
        """ """
        ...
    def setCurrentCharFormat(self, *args, **kwargs):
        """ """
        ...
    def setCursorWidth(self, *args, **kwargs):
        """ """
        ...
    def setDocument(self, *args, **kwargs):
        """ """
        ...
    def setDocumentTitle(self, *args, **kwargs):
        """ """
        ...
    def setExtraSelections(self, *args, **kwargs):
        """ """
        ...
    def setLineWrapMode(self, *args, **kwargs):
        """ """
        ...
    def setMaximumBlockCount(self, *args, **kwargs):
        """ """
        ...
    def setOverwriteMode(self, *args, **kwargs):
        """ """
        ...
    def setPlainText(self, *args, **kwargs):
        """ """
        ...
    def setReadOnly(self, *args, **kwargs):
        """ """
        ...
    def setTabChangesFocus(self, *args, **kwargs):
        """ """
        ...
    def setTabStopWidth(self, *args, **kwargs):
        """ """
        ...
    def setTextCursor(self, *args, **kwargs):
        """ """
        ...
    def setTextInteractionFlags(self, *args, **kwargs):
        """ """
        ...
    def setUndoRedoEnabled(self, *args, **kwargs):
        """ """
        ...
    def setWordWrapMode(self, *args, **kwargs):
        """ """
        ...
    def showEvent(self, *args, **kwargs):
        """ """
        ...
    def tabChangesFocus(self, *args, **kwargs):
        """ """
        ...
    def tabStopWidth(self, *args, **kwargs):
        """ """
        ...
    def textCursor(self, *args, **kwargs):
        """ """
        ...
    def textInteractionFlags(self, *args, **kwargs):
        """ """
        ...
    def timerEvent(self, *args, **kwargs):
        """ """
        ...
    def toPlainText(self, *args, **kwargs):
        """ """
        ...
    def undo(self, *args, **kwargs):
        """ """
        ...
    def wheelEvent(self, *args, **kwargs):
        """ """
        ...
    def wordWrapMode(self, *args, **kwargs):
        """ """
        ...
    ...

class QProgressBar(QWidget):
    BottomToTop: ... = PySide.QtGui.QProgressBar.Direction.BottomToTop
    """
    """

    Direction: ...
    """
    <type 'PySide.QtGui.QProgressBar.Direction'>
    """

    TopToBottom: ... = PySide.QtGui.QProgressBar.Direction.TopToBottom
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    valueChanged: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def alignment(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def format(self, *args, **kwargs):
        """ """
        ...
    def initStyleOption(self, *args, **kwargs):
        """ """
        ...
    def invertedAppearance(self, *args, **kwargs):
        """ """
        ...
    def isTextVisible(self, *args, **kwargs):
        """ """
        ...
    def maximum(self, *args, **kwargs):
        """ """
        ...
    def minimum(self, *args, **kwargs):
        """ """
        ...
    def minimumSizeHint(self, *args, **kwargs):
        """ """
        ...
    def orientation(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def reset(self, *args, **kwargs):
        """ """
        ...
    def setAlignment(self, *args, **kwargs):
        """ """
        ...
    def setFormat(self, *args, **kwargs):
        """ """
        ...
    def setInvertedAppearance(self, *args, **kwargs):
        """ """
        ...
    def setMaximum(self, *args, **kwargs):
        """ """
        ...
    def setMinimum(self, *args, **kwargs):
        """ """
        ...
    def setOrientation(self, *args, **kwargs):
        """ """
        ...
    def setRange(self, *args, **kwargs):
        """ """
        ...
    def setTextDirection(self, *args, **kwargs):
        """ """
        ...
    def setTextVisible(self, *args, **kwargs):
        """ """
        ...
    def setValue(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def text(self, *args, **kwargs):
        """ """
        ...
    def textDirection(self, *args, **kwargs):
        """ """
        ...
    def value(self, *args, **kwargs):
        """ """
        ...
    ...

class QProgressDialog(QDialog):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    canceled: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def autoClose(self, *args, **kwargs):
        """ """
        ...
    def autoReset(self, *args, **kwargs):
        """ """
        ...
    def cancel(self, *args, **kwargs):
        """ """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def closeEvent(self, *args, **kwargs):
        """ """
        ...
    def forceShow(self, *args, **kwargs):
        """ """
        ...
    def labelText(self, *args, **kwargs):
        """ """
        ...
    def maximum(self, *args, **kwargs):
        """ """
        ...
    def minimum(self, *args, **kwargs):
        """ """
        ...
    def minimumDuration(self, *args, **kwargs):
        """ """
        ...
    def open(self, *args, **kwargs):
        """ """
        ...
    def reset(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def setAutoClose(self, *args, **kwargs):
        """ """
        ...
    def setAutoReset(self, *args, **kwargs):
        """ """
        ...
    def setBar(self, *args, **kwargs):
        """ """
        ...
    def setCancelButton(self, *args, **kwargs):
        """ """
        ...
    def setCancelButtonText(self, *args, **kwargs):
        """ """
        ...
    def setLabel(self, *args, **kwargs):
        """ """
        ...
    def setLabelText(self, *args, **kwargs):
        """ """
        ...
    def setMaximum(self, *args, **kwargs):
        """ """
        ...
    def setMinimum(self, *args, **kwargs):
        """ """
        ...
    def setMinimumDuration(self, *args, **kwargs):
        """ """
        ...
    def setRange(self, *args, **kwargs):
        """ """
        ...
    def setValue(self, *args, **kwargs):
        """ """
        ...
    def showEvent(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def value(self, *args, **kwargs):
        """ """
        ...
    def wasCanceled(self, *args, **kwargs):
        """ """
        ...
    ...

class QPushButton(QAbstractButton):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def autoDefault(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def focusInEvent(self, *args, **kwargs):
        """ """
        ...
    def focusOutEvent(self, *args, **kwargs):
        """ """
        ...
    def initStyleOption(self, *args, **kwargs):
        """ """
        ...
    def isDefault(self, *args, **kwargs):
        """ """
        ...
    def isFlat(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def menu(self, *args, **kwargs):
        """ """
        ...
    def minimumSizeHint(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def setAutoDefault(self, *args, **kwargs):
        """ """
        ...
    def setDefault(self, *args, **kwargs):
        """ """
        ...
    def setFlat(self, *args, **kwargs):
        """ """
        ...
    def setMenu(self, *args, **kwargs):
        """ """
        ...
    def showMenu(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    ...

class QRadioButton(QAbstractButton):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def hitButton(self, *args, **kwargs):
        """ """
        ...
    def initStyleOption(self, *args, **kwargs):
        """ """
        ...
    def minimumSizeHint(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    ...

class QRubberBand(QWidget):
    Line: ... = PySide.QtGui.QRubberBand.Shape.Line
    """
    """

    Rectangle: ... = PySide.QtGui.QRubberBand.Shape.Rectangle
    """
    """

    Shape: ...
    """
    <type 'PySide.QtGui.QRubberBand.Shape'>
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def initStyleOption(self, *args, **kwargs):
        """ """
        ...
    def move(self, *args, **kwargs):
        """ """
        ...
    def moveEvent(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def resize(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def setGeometry(self, *args, **kwargs):
        """ """
        ...
    def shape(self, *args, **kwargs):
        """ """
        ...
    def showEvent(self, *args, **kwargs):
        """ """
        ...
    ...

class QScrollArea(QAbstractScrollArea):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def alignment(self, *args, **kwargs):
        """ """
        ...
    def ensureVisible(self, *args, **kwargs):
        """ """
        ...
    def ensureWidgetVisible(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def eventFilter(self, *args, **kwargs):
        """ """
        ...
    def focusNextPrevChild(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def scrollContentsBy(self, *args, **kwargs):
        """ """
        ...
    def setAlignment(self, *args, **kwargs):
        """ """
        ...
    def setWidget(self, *args, **kwargs):
        """ """
        ...
    def setWidgetResizable(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def takeWidget(self, *args, **kwargs):
        """ """
        ...
    def widget(self, *args, **kwargs):
        """ """
        ...
    def widgetResizable(self, *args, **kwargs):
        """ """
        ...
    ...

class QScrollBar(QAbstractSlider):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def contextMenuEvent(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def hideEvent(self, *args, **kwargs):
        """ """
        ...
    def initStyleOption(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def sliderChange(self, *args, **kwargs):
        """ """
        ...
    ...

class QShortcut(PySide.QtCore.QObject):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    activated: ...
    """
    Signal
    """

    activatedAmbiguously: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def autoRepeat(self, *args, **kwargs):
        """ """
        ...
    def context(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def id(self, *args, **kwargs):
        """ """
        ...
    def isEnabled(self, *args, **kwargs):
        """ """
        ...
    def key(self, *args, **kwargs):
        """ """
        ...
    def parentWidget(self, *args, **kwargs):
        """ """
        ...
    def setAutoRepeat(self, *args, **kwargs):
        """ """
        ...
    def setContext(self, *args, **kwargs):
        """ """
        ...
    def setEnabled(self, *args, **kwargs):
        """ """
        ...
    def setKey(self, *args, **kwargs):
        """ """
        ...
    def setWhatsThis(self, *args, **kwargs):
        """ """
        ...
    def whatsThis(self, *args, **kwargs):
        """ """
        ...
    ...

class QSizeGrip(QWidget):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def eventFilter(self, *args, **kwargs):
        """ """
        ...
    def hideEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def moveEvent(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def setVisible(self, *args, **kwargs):
        """ """
        ...
    def showEvent(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def winEvent(self, *args, **kwargs):
        """ """
        ...
    ...

class QSizePolicy(Shiboken.Object):
    ButtonBox: ... = PySide.QtGui.QSizePolicy.ControlType.ButtonBox
    """
    """

    CheckBox: ... = PySide.QtGui.QSizePolicy.ControlType.CheckBox
    """
    """

    ComboBox: ... = PySide.QtGui.QSizePolicy.ControlType.ComboBox
    """
    """

    ControlType: ...
    """
    <type 'PySide.QtGui.QSizePolicy.ControlType'>
    """

    ControlTypes: ...
    """
    <type 'ControlTypes'>
    """

    DefaultType: ... = PySide.QtGui.QSizePolicy.ControlType.DefaultType
    """
    """

    ExpandFlag: ... = PySide.QtGui.QSizePolicy.PolicyFlag.ExpandFlag
    """
    """

    Expanding: ... = PySide.QtGui.QSizePolicy.Policy.Expanding
    """
    """

    Fixed: ... = PySide.QtGui.QSizePolicy.Policy.Fixed
    """
    """

    Frame: ... = PySide.QtGui.QSizePolicy.ControlType.Frame
    """
    """

    GroupBox: ... = PySide.QtGui.QSizePolicy.ControlType.GroupBox
    """
    """

    GrowFlag: ... = PySide.QtGui.QSizePolicy.PolicyFlag.GrowFlag
    """
    """

    IgnoreFlag: ... = PySide.QtGui.QSizePolicy.PolicyFlag.IgnoreFlag
    """
    """

    Ignored: ... = PySide.QtGui.QSizePolicy.Policy.Ignored
    """
    """

    Label: ... = PySide.QtGui.QSizePolicy.ControlType.Label
    """
    """

    Line: ... = PySide.QtGui.QSizePolicy.ControlType.Line
    """
    """

    LineEdit: ... = PySide.QtGui.QSizePolicy.ControlType.LineEdit
    """
    """

    Maximum: ... = PySide.QtGui.QSizePolicy.Policy.Maximum
    """
    """

    Minimum: ... = PySide.QtGui.QSizePolicy.Policy.Minimum
    """
    """

    MinimumExpanding: ... = PySide.QtGui.QSizePolicy.Policy.MinimumExpanding
    """
    """

    Policy: ...
    """
    <type 'PySide.QtGui.QSizePolicy.Policy'>
    """

    PolicyFlag: ...
    """
    <type 'PySide.QtGui.QSizePolicy.PolicyFlag'>
    """

    Preferred: ... = PySide.QtGui.QSizePolicy.Policy.Preferred
    """
    """

    PushButton: ... = PySide.QtGui.QSizePolicy.ControlType.PushButton
    """
    """

    RadioButton: ... = PySide.QtGui.QSizePolicy.ControlType.RadioButton
    """
    """

    ShrinkFlag: ... = PySide.QtGui.QSizePolicy.PolicyFlag.ShrinkFlag
    """
    """

    Slider: ... = PySide.QtGui.QSizePolicy.ControlType.Slider
    """
    """

    SpinBox: ... = PySide.QtGui.QSizePolicy.ControlType.SpinBox
    """
    """

    TabWidget: ... = PySide.QtGui.QSizePolicy.ControlType.TabWidget
    """
    """

    ToolButton: ... = PySide.QtGui.QSizePolicy.ControlType.ToolButton
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __copy__(self, *args, **kwargs):
        """ """
        ...
    def __eq__(self, *args, **kwargs):
        """
        x.__eq__(y) <==> x==y
        """
        ...
    def __ge__(self, *args, **kwargs):
        """
        x.__ge__(y) <==> x>=y
        """
        ...
    def __gt__(self, *args, **kwargs):
        """
        x.__gt__(y) <==> x>y
        """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def __le__(self, *args, **kwargs):
        """
        x.__le__(y) <==> x<=y
        """
        ...
    def __lshift__(self, *args, **kwargs):
        """
        x.__lshift__(y) <==> x<<y
        """
        ...
    def __lt__(self, *args, **kwargs):
        """
        x.__lt__(y) <==> x<y
        """
        ...
    def __ne__(self, *args, **kwargs):
        """
        x.__ne__(y) <==> x!=y
        """
        ...
    def __rlshift__(self, *args, **kwargs):
        """
        x.__rlshift__(y) <==> y<<x
        """
        ...
    def __rrshift__(self, *args, **kwargs):
        """
        x.__rrshift__(y) <==> y>>x
        """
        ...
    def __rshift__(self, *args, **kwargs):
        """
        x.__rshift__(y) <==> x>>y
        """
        ...
    def controlType(self, *args, **kwargs):
        """ """
        ...
    def expandingDirections(self, *args, **kwargs):
        """ """
        ...
    def hasHeightForWidth(self, *args, **kwargs):
        """ """
        ...
    def hasWidthForHeight(self, *args, **kwargs):
        """ """
        ...
    def horizontalPolicy(self, *args, **kwargs):
        """ """
        ...
    def horizontalStretch(self, *args, **kwargs):
        """ """
        ...
    def setControlType(self, *args, **kwargs):
        """ """
        ...
    def setHeightForWidth(self, *args, **kwargs):
        """ """
        ...
    def setHorizontalPolicy(self, *args, **kwargs):
        """ """
        ...
    def setHorizontalStretch(self, *args, **kwargs):
        """ """
        ...
    def setVerticalPolicy(self, *args, **kwargs):
        """ """
        ...
    def setVerticalStretch(self, *args, **kwargs):
        """ """
        ...
    def setWidthForHeight(self, *args, **kwargs):
        """ """
        ...
    def transpose(self, *args, **kwargs):
        """ """
        ...
    def verticalPolicy(self, *args, **kwargs):
        """ """
        ...
    def verticalStretch(self, *args, **kwargs):
        """ """
        ...
    ...

class QSlider(QAbstractSlider):
    NoTicks: ... = PySide.QtGui.QSlider.TickPosition.NoTicks
    """
    """

    TickPosition: ...
    """
    <type 'PySide.QtGui.QSlider.TickPosition'>
    """

    TicksAbove: ... = PySide.QtGui.QSlider.TickPosition.TicksAbove
    """
    """

    TicksBelow: ... = PySide.QtGui.QSlider.TickPosition.TicksBelow
    """
    """

    TicksBothSides: ... = PySide.QtGui.QSlider.TickPosition.TicksBothSides
    """
    """

    TicksLeft: ... = PySide.QtGui.QSlider.TickPosition.TicksLeft
    """
    """

    TicksRight: ... = PySide.QtGui.QSlider.TickPosition.TicksRight
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def initStyleOption(self, *args, **kwargs):
        """ """
        ...
    def minimumSizeHint(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def setTickInterval(self, *args, **kwargs):
        """ """
        ...
    def setTickPosition(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def tickInterval(self, *args, **kwargs):
        """ """
        ...
    def tickPosition(self, *args, **kwargs):
        """ """
        ...
    ...

class QSpacerItem(QLayoutItem):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def changeSize(self, *args, **kwargs):
        """ """
        ...
    def expandingDirections(self, *args, **kwargs):
        """ """
        ...
    def geometry(self, *args, **kwargs):
        """ """
        ...
    def isEmpty(self, *args, **kwargs):
        """ """
        ...
    def maximumSize(self, *args, **kwargs):
        """ """
        ...
    def minimumSize(self, *args, **kwargs):
        """ """
        ...
    def setGeometry(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def spacerItem(self, *args, **kwargs):
        """ """
        ...
    ...

class QSpinBox(QAbstractSpinBox):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    valueChanged: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def cleanText(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def fixup(self, *args, **kwargs):
        """ """
        ...
    def maximum(self, *args, **kwargs):
        """ """
        ...
    def minimum(self, *args, **kwargs):
        """ """
        ...
    def prefix(self, *args, **kwargs):
        """ """
        ...
    def setMaximum(self, *args, **kwargs):
        """ """
        ...
    def setMinimum(self, *args, **kwargs):
        """ """
        ...
    def setPrefix(self, *args, **kwargs):
        """ """
        ...
    def setRange(self, *args, **kwargs):
        """ """
        ...
    def setSingleStep(self, *args, **kwargs):
        """ """
        ...
    def setSuffix(self, *args, **kwargs):
        """ """
        ...
    def setValue(self, *args, **kwargs):
        """ """
        ...
    def singleStep(self, *args, **kwargs):
        """ """
        ...
    def suffix(self, *args, **kwargs):
        """ """
        ...
    def textFromValue(self, *args, **kwargs):
        """ """
        ...
    def validate(self, *args, **kwargs):
        """ """
        ...
    def value(self, *args, **kwargs):
        """ """
        ...
    def valueFromText(self, *args, **kwargs):
        """ """
        ...
    ...

class QSplashScreen(QWidget):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    messageChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def clearMessage(self, *args, **kwargs):
        """ """
        ...
    def drawContents(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def finish(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def pixmap(self, *args, **kwargs):
        """ """
        ...
    def setPixmap(self, *args, **kwargs):
        """ """
        ...
    def showMessage(self, *args, **kwargs):
        """ """
        ...
    ...

class QSplitter(QFrame):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    splitterMoved: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def __lshift__(self, *args, **kwargs):
        """
        x.__lshift__(y) <==> x<<y
        """
        ...
    def __rlshift__(self, *args, **kwargs):
        """
        x.__rlshift__(y) <==> y<<x
        """
        ...
    def __rrshift__(self, *args, **kwargs):
        """
        x.__rrshift__(y) <==> y>>x
        """
        ...
    def __rshift__(self, *args, **kwargs):
        """
        x.__rshift__(y) <==> x>>y
        """
        ...
    def addWidget(self, *args, **kwargs):
        """ """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def childEvent(self, *args, **kwargs):
        """ """
        ...
    def childrenCollapsible(self, *args, **kwargs):
        """ """
        ...
    def closestLegalPosition(self, *args, **kwargs):
        """ """
        ...
    def count(self, *args, **kwargs):
        """ """
        ...
    def createHandle(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def getRange(self, *args, **kwargs):
        """ """
        ...
    def handle(self, *args, **kwargs):
        """ """
        ...
    def handleWidth(self, *args, **kwargs):
        """ """
        ...
    def indexOf(self, *args, **kwargs):
        """ """
        ...
    def insertWidget(self, *args, **kwargs):
        """ """
        ...
    def isCollapsible(self, *args, **kwargs):
        """ """
        ...
    def minimumSizeHint(self, *args, **kwargs):
        """ """
        ...
    def moveSplitter(self, *args, **kwargs):
        """ """
        ...
    def opaqueResize(self, *args, **kwargs):
        """ """
        ...
    def orientation(self, *args, **kwargs):
        """ """
        ...
    def refresh(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def restoreState(self, *args, **kwargs):
        """ """
        ...
    def saveState(self, *args, **kwargs):
        """ """
        ...
    def setChildrenCollapsible(self, *args, **kwargs):
        """ """
        ...
    def setCollapsible(self, *args, **kwargs):
        """ """
        ...
    def setHandleWidth(self, *args, **kwargs):
        """ """
        ...
    def setOpaqueResize(self, *args, **kwargs):
        """ """
        ...
    def setOrientation(self, *args, **kwargs):
        """ """
        ...
    def setRubberBand(self, *args, **kwargs):
        """ """
        ...
    def setSizes(self, *args, **kwargs):
        """ """
        ...
    def setStretchFactor(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def sizes(self, *args, **kwargs):
        """ """
        ...
    def widget(self, *args, **kwargs):
        """ """
        ...
    ...

class QSplitterHandle(QWidget):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def closestLegalPosition(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def moveSplitter(self, *args, **kwargs):
        """ """
        ...
    def opaqueResize(self, *args, **kwargs):
        """ """
        ...
    def orientation(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def setOrientation(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def splitter(self, *args, **kwargs):
        """ """
        ...
    ...

class QStackedLayout(QLayout):
    StackAll: ... = PySide.QtGui.QStackedLayout.StackingMode.StackAll
    """
    """

    StackOne: ... = PySide.QtGui.QStackedLayout.StackingMode.StackOne
    """
    """

    StackingMode: ...
    """
    <type 'PySide.QtGui.QStackedLayout.StackingMode'>
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    currentChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    widgetRemoved: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addItem(self, *args, **kwargs):
        """ """
        ...
    def addWidget(self, *args, **kwargs):
        """ """
        ...
    def count(self, *args, **kwargs):
        """ """
        ...
    def currentIndex(self, *args, **kwargs):
        """ """
        ...
    def currentWidget(self, *args, **kwargs):
        """ """
        ...
    def insertWidget(self, *args, **kwargs):
        """ """
        ...
    def itemAt(self, *args, **kwargs):
        """ """
        ...
    def minimumSize(self, *args, **kwargs):
        """ """
        ...
    def setCurrentIndex(self, *args, **kwargs):
        """ """
        ...
    def setCurrentWidget(self, *args, **kwargs):
        """ """
        ...
    def setGeometry(self, *args, **kwargs):
        """ """
        ...
    def setStackingMode(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def stackingMode(self, *args, **kwargs):
        """ """
        ...
    def takeAt(self, *args, **kwargs):
        """ """
        ...
    def widget(self, *args, **kwargs):
        """ """
        ...
    ...

class QStackedWidget(QFrame):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    currentChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    widgetRemoved: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addWidget(self, *args, **kwargs):
        """ """
        ...
    def count(self, *args, **kwargs):
        """ """
        ...
    def currentIndex(self, *args, **kwargs):
        """ """
        ...
    def currentWidget(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def indexOf(self, *args, **kwargs):
        """ """
        ...
    def insertWidget(self, *args, **kwargs):
        """ """
        ...
    def removeWidget(self, *args, **kwargs):
        """ """
        ...
    def setCurrentIndex(self, *args, **kwargs):
        """ """
        ...
    def setCurrentWidget(self, *args, **kwargs):
        """ """
        ...
    def widget(self, *args, **kwargs):
        """ """
        ...
    ...

class QStatusBar(QWidget):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    messageChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addPermanentWidget(self, *args, **kwargs):
        """ """
        ...
    def addWidget(self, *args, **kwargs):
        """ """
        ...
    def clearMessage(self, *args, **kwargs):
        """ """
        ...
    def currentMessage(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def hideOrShow(self, *args, **kwargs):
        """ """
        ...
    def insertPermanentWidget(self, *args, **kwargs):
        """ """
        ...
    def insertWidget(self, *args, **kwargs):
        """ """
        ...
    def isSizeGripEnabled(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def reformat(self, *args, **kwargs):
        """ """
        ...
    def removeWidget(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def setSizeGripEnabled(self, *args, **kwargs):
        """ """
        ...
    def showEvent(self, *args, **kwargs):
        """ """
        ...
    def showMessage(self, *args, **kwargs):
        """ """
        ...
    ...

class QStyle(PySide.QtCore.QObject):
    CC_ComboBox: ... = PySide.QtGui.QStyle.ComplexControl.CC_ComboBox
    """
    """

    CC_CustomBase: ... = PySide.QtGui.QStyle.ComplexControl.CC_CustomBase
    """
    """

    CC_Dial: ... = PySide.QtGui.QStyle.ComplexControl.CC_Dial
    """
    """

    CC_GroupBox: ... = PySide.QtGui.QStyle.ComplexControl.CC_GroupBox
    """
    """

    CC_MdiControls: ... = PySide.QtGui.QStyle.ComplexControl.CC_MdiControls
    """
    """

    CC_Q3ListView: ... = PySide.QtGui.QStyle.ComplexControl.CC_Q3ListView
    """
    """

    CC_ScrollBar: ... = PySide.QtGui.QStyle.ComplexControl.CC_ScrollBar
    """
    """

    CC_Slider: ... = PySide.QtGui.QStyle.ComplexControl.CC_Slider
    """
    """

    CC_SpinBox: ... = PySide.QtGui.QStyle.ComplexControl.CC_SpinBox
    """
    """

    CC_TitleBar: ... = PySide.QtGui.QStyle.ComplexControl.CC_TitleBar
    """
    """

    CC_ToolButton: ... = PySide.QtGui.QStyle.ComplexControl.CC_ToolButton
    """
    """

    CE_CheckBox: ... = PySide.QtGui.QStyle.ControlElement.CE_CheckBox
    """
    """

    CE_CheckBoxLabel: ... = PySide.QtGui.QStyle.ControlElement.CE_CheckBoxLabel
    """
    """

    CE_ColumnViewGrip: ...
    """
    PySide.QtGui.QStyle.ControlElement.CE_ColumnViewGr...
    """

    CE_ComboBoxLabel: ... = PySide.QtGui.QStyle.ControlElement.CE_ComboBoxLabel
    """
    """

    CE_CustomBase: ... = PySide.QtGui.QStyle.ControlElement.CE_CustomBase
    """
    """

    CE_DockWidgetTitle: ...
    """
    PySide.QtGui.QStyle.ControlElement.CE_DockWidgetT...
    """

    CE_FocusFrame: ... = PySide.QtGui.QStyle.ControlElement.CE_FocusFrame
    """
    """

    CE_Header: ... = PySide.QtGui.QStyle.ControlElement.CE_Header
    """
    """

    CE_HeaderEmptyArea: ...
    """
    PySide.QtGui.QStyle.ControlElement.CE_HeaderEmpty...
    """

    CE_HeaderLabel: ... = PySide.QtGui.QStyle.ControlElement.CE_HeaderLabel
    """
    """

    CE_HeaderSection: ... = PySide.QtGui.QStyle.ControlElement.CE_HeaderSection
    """
    """

    CE_ItemViewItem: ... = PySide.QtGui.QStyle.ControlElement.CE_ItemViewItem
    """
    """

    CE_MenuBarEmptyArea: ...
    """
    PySide.QtGui.QStyle.ControlElement.CE_MenuBarEmp...
    """

    CE_MenuBarItem: ... = PySide.QtGui.QStyle.ControlElement.CE_MenuBarItem
    """
    """

    CE_MenuEmptyArea: ... = PySide.QtGui.QStyle.ControlElement.CE_MenuEmptyArea
    """
    """

    CE_MenuHMargin: ... = PySide.QtGui.QStyle.ControlElement.CE_MenuHMargin
    """
    """

    CE_MenuItem: ... = PySide.QtGui.QStyle.ControlElement.CE_MenuItem
    """
    """

    CE_MenuScroller: ... = PySide.QtGui.QStyle.ControlElement.CE_MenuScroller
    """
    """

    CE_MenuTearoff: ... = PySide.QtGui.QStyle.ControlElement.CE_MenuTearoff
    """
    """

    CE_MenuVMargin: ... = PySide.QtGui.QStyle.ControlElement.CE_MenuVMargin
    """
    """

    CE_ProgressBar: ... = PySide.QtGui.QStyle.ControlElement.CE_ProgressBar
    """
    """

    CE_ProgressBarContents: ...
    """
    PySide.QtGui.QStyle.ControlElement.CE_Progres...
    """

    CE_ProgressBarGroove: ...
    """
    PySide.QtGui.QStyle.ControlElement.CE_ProgressB...
    """

    CE_ProgressBarLabel: ...
    """
    PySide.QtGui.QStyle.ControlElement.CE_ProgressBa...
    """

    CE_PushButton: ... = PySide.QtGui.QStyle.ControlElement.CE_PushButton
    """
    """

    CE_PushButtonBevel: ...
    """
    PySide.QtGui.QStyle.ControlElement.CE_PushButtonB...
    """

    CE_PushButtonLabel: ...
    """
    PySide.QtGui.QStyle.ControlElement.CE_PushButtonL...
    """

    CE_Q3DockWindowEmptyArea: ...
    """
    PySide.QtGui.QStyle.ControlElement.CE_Q3Doc...
    """

    CE_RadioButton: ... = PySide.QtGui.QStyle.ControlElement.CE_RadioButton
    """
    """

    CE_RadioButtonLabel: ...
    """
    PySide.QtGui.QStyle.ControlElement.CE_RadioButto...
    """

    CE_RubberBand: ... = PySide.QtGui.QStyle.ControlElement.CE_RubberBand
    """
    """

    CE_ScrollBarAddLine: ...
    """
    PySide.QtGui.QStyle.ControlElement.CE_ScrollBarA...
    """

    CE_ScrollBarAddPage: ...
    """
    PySide.QtGui.QStyle.ControlElement.CE_ScrollBarA...
    """

    CE_ScrollBarFirst: ...
    """
    PySide.QtGui.QStyle.ControlElement.CE_ScrollBarFir...
    """

    CE_ScrollBarLast: ... = PySide.QtGui.QStyle.ControlElement.CE_ScrollBarLast
    """
    """

    CE_ScrollBarSlider: ...
    """
    PySide.QtGui.QStyle.ControlElement.CE_ScrollBarSl...
    """

    CE_ScrollBarSubLine: ...
    """
    PySide.QtGui.QStyle.ControlElement.CE_ScrollBarS...
    """

    CE_ScrollBarSubPage: ...
    """
    PySide.QtGui.QStyle.ControlElement.CE_ScrollBarS...
    """

    CE_ShapedFrame: ... = PySide.QtGui.QStyle.ControlElement.CE_ShapedFrame
    """
    """

    CE_SizeGrip: ... = PySide.QtGui.QStyle.ControlElement.CE_SizeGrip
    """
    """

    CE_Splitter: ... = PySide.QtGui.QStyle.ControlElement.CE_Splitter
    """
    """

    CE_TabBarTab: ... = PySide.QtGui.QStyle.ControlElement.CE_TabBarTab
    """
    """

    CE_TabBarTabLabel: ...
    """
    PySide.QtGui.QStyle.ControlElement.CE_TabBarTabLab...
    """

    CE_TabBarTabShape: ...
    """
    PySide.QtGui.QStyle.ControlElement.CE_TabBarTabSha...
    """

    CE_ToolBar: ... = PySide.QtGui.QStyle.ControlElement.CE_ToolBar
    """
    """

    CE_ToolBoxTab: ... = PySide.QtGui.QStyle.ControlElement.CE_ToolBoxTab
    """
    """

    CE_ToolBoxTabLabel: ...
    """
    PySide.QtGui.QStyle.ControlElement.CE_ToolBoxTabL...
    """

    CE_ToolBoxTabShape: ...
    """
    PySide.QtGui.QStyle.ControlElement.CE_ToolBoxTabS...
    """

    CE_ToolButtonLabel: ...
    """
    PySide.QtGui.QStyle.ControlElement.CE_ToolButtonL...
    """

    CT_CheckBox: ... = PySide.QtGui.QStyle.ContentsType.CT_CheckBox
    """
    """

    CT_ComboBox: ... = PySide.QtGui.QStyle.ContentsType.CT_ComboBox
    """
    """

    CT_CustomBase: ... = PySide.QtGui.QStyle.ContentsType.CT_CustomBase
    """
    """

    CT_DialogButtons: ... = PySide.QtGui.QStyle.ContentsType.CT_DialogButtons
    """
    """

    CT_GroupBox: ... = PySide.QtGui.QStyle.ContentsType.CT_GroupBox
    """
    """

    CT_HeaderSection: ... = PySide.QtGui.QStyle.ContentsType.CT_HeaderSection
    """
    """

    CT_ItemViewItem: ... = PySide.QtGui.QStyle.ContentsType.CT_ItemViewItem
    """
    """

    CT_LineEdit: ... = PySide.QtGui.QStyle.ContentsType.CT_LineEdit
    """
    """

    CT_MdiControls: ... = PySide.QtGui.QStyle.ContentsType.CT_MdiControls
    """
    """

    CT_Menu: ... = PySide.QtGui.QStyle.ContentsType.CT_Menu
    """
    """

    CT_MenuBar: ... = PySide.QtGui.QStyle.ContentsType.CT_MenuBar
    """
    """

    CT_MenuBarItem: ... = PySide.QtGui.QStyle.ContentsType.CT_MenuBarItem
    """
    """

    CT_MenuItem: ... = PySide.QtGui.QStyle.ContentsType.CT_MenuItem
    """
    """

    CT_ProgressBar: ... = PySide.QtGui.QStyle.ContentsType.CT_ProgressBar
    """
    """

    CT_PushButton: ... = PySide.QtGui.QStyle.ContentsType.CT_PushButton
    """
    """

    CT_Q3DockWindow: ... = PySide.QtGui.QStyle.ContentsType.CT_Q3DockWindow
    """
    """

    CT_Q3Header: ... = PySide.QtGui.QStyle.ContentsType.CT_Q3Header
    """
    """

    CT_RadioButton: ... = PySide.QtGui.QStyle.ContentsType.CT_RadioButton
    """
    """

    CT_ScrollBar: ... = PySide.QtGui.QStyle.ContentsType.CT_ScrollBar
    """
    """

    CT_SizeGrip: ... = PySide.QtGui.QStyle.ContentsType.CT_SizeGrip
    """
    """

    CT_Slider: ... = PySide.QtGui.QStyle.ContentsType.CT_Slider
    """
    """

    CT_SpinBox: ... = PySide.QtGui.QStyle.ContentsType.CT_SpinBox
    """
    """

    CT_Splitter: ... = PySide.QtGui.QStyle.ContentsType.CT_Splitter
    """
    """

    CT_TabBarTab: ... = PySide.QtGui.QStyle.ContentsType.CT_TabBarTab
    """
    """

    CT_TabWidget: ... = PySide.QtGui.QStyle.ContentsType.CT_TabWidget
    """
    """

    CT_ToolButton: ... = PySide.QtGui.QStyle.ContentsType.CT_ToolButton
    """
    """

    ComplexControl: ...
    """
    <type 'PySide.QtGui.QStyle.ComplexControl'>
    """

    ContentsType: ...
    """
    <type 'PySide.QtGui.QStyle.ContentsType'>
    """

    ControlElement: ...
    """
    <type 'PySide.QtGui.QStyle.ControlElement'>
    """

    PE_CustomBase: ... = PySide.QtGui.QStyle.PrimitiveElement.PE_CustomBase
    """
    """

    PE_Frame: ... = PySide.QtGui.QStyle.PrimitiveElement.PE_Frame
    """
    """

    PE_FrameButtonBevel: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_FrameBut...
    """

    PE_FrameButtonTool: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_FrameButt...
    """

    PE_FrameDefaultButton: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_FrameD...
    """

    PE_FrameDockWidget: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_FrameDock...
    """

    PE_FrameFocusRect: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_FrameFocus...
    """

    PE_FrameGroupBox: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_FrameGroupB...
    """

    PE_FrameLineEdit: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_FrameLineEd...
    """

    PE_FrameMenu: ... = PySide.QtGui.QStyle.PrimitiveElement.PE_FrameMenu
    """
    """

    PE_FrameStatusBar: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_FrameStatu...
    """

    PE_FrameStatusBarItem: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_FrameS...
    """

    PE_FrameTabBarBase: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_FrameTabB...
    """

    PE_FrameTabWidget: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_FrameTabWi...
    """

    PE_FrameWindow: ... = PySide.QtGui.QStyle.PrimitiveElement.PE_FrameWindow
    """
    """

    PE_IndicatorArrowDown: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_Indica...
    """

    PE_IndicatorArrowLeft: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_Indica...
    """

    PE_IndicatorArrowRight: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_Indic...
    """

    PE_IndicatorArrowUp: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_Indicato...
    """

    PE_IndicatorBranch: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_Indicator...
    """

    PE_IndicatorButtonDropDown: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_I...
    """

    PE_IndicatorCheckBox: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_Indicat...
    """

    PE_IndicatorColumnViewArrow: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_...
    """

    PE_IndicatorDockWidgetResizeHandle: ...
    """
    PySide.QtGui.QStyle.PrimitiveElem...
    """

    PE_IndicatorHeaderArrow: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_Indi...
    """

    PE_IndicatorItemViewItemCheck: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.P...
    """

    PE_IndicatorItemViewItemDrop: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE...
    """

    PE_IndicatorMenuCheckMark: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_In...
    """

    PE_IndicatorProgressChunk: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_In...
    """

    PE_IndicatorRadioButton: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_Indi...
    """

    PE_IndicatorSpinDown: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_Indicat...
    """

    PE_IndicatorSpinMinus: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_Indica...
    """

    PE_IndicatorSpinPlus: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_Indicat...
    """

    PE_IndicatorSpinUp: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_Indicator...
    """

    PE_IndicatorTabClose: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_Indicat...
    """

    PE_IndicatorTabTear: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_Indicato...
    """

    PE_IndicatorToolBarHandle: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_In...
    """

    PE_IndicatorToolBarSeparator: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE...
    """

    PE_IndicatorViewItemCheck: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_In...
    """

    PE_PanelButtonBevel: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_PanelBut...
    """

    PE_PanelButtonCommand: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_PanelB...
    """

    PE_PanelButtonTool: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_PanelButt...
    """

    PE_PanelItemViewItem: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_PanelIt...
    """

    PE_PanelItemViewRow: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_PanelIte...
    """

    PE_PanelLineEdit: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_PanelLineEd...
    """

    PE_PanelMenu: ... = PySide.QtGui.QStyle.PrimitiveElement.PE_PanelMenu
    """
    """

    PE_PanelMenuBar: ... = PySide.QtGui.QStyle.PrimitiveElement.PE_PanelMenuBar
    """
    """

    PE_PanelScrollAreaCorner: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_Pan...
    """

    PE_PanelStatusBar: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_PanelStatu...
    """

    PE_PanelTipLabel: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_PanelTipLab...
    """

    PE_PanelToolBar: ... = PySide.QtGui.QStyle.PrimitiveElement.PE_PanelToolBar
    """
    """

    PE_Q3CheckListController: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_Q3C...
    """

    PE_Q3CheckListExclusiveIndicator: ...
    """
    PySide.QtGui.QStyle.PrimitiveElemen...
    """

    PE_Q3CheckListIndicator: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_Q3Ch...
    """

    PE_Q3DockWindowSeparator: ...
    """
    PySide.QtGui.QStyle.PrimitiveElement.PE_Q3D...
    """

    PE_Q3Separator: ... = PySide.QtGui.QStyle.PrimitiveElement.PE_Q3Separator
    """
    """

    PE_Widget: ... = PySide.QtGui.QStyle.PrimitiveElement.PE_Widget
    """
    """

    PM_ButtonDefaultIndicator: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_ButtonD...
    """

    PM_ButtonIconSize: ... = PySide.QtGui.QStyle.PixelMetric.PM_ButtonIconSize
    """
    """

    PM_ButtonMargin: ... = PySide.QtGui.QStyle.PixelMetric.PM_ButtonMargin
    """
    """

    PM_ButtonShiftHorizontal: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_ButtonSh...
    """

    PM_ButtonShiftVertical: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_ButtonShif...
    """

    PM_CheckBoxLabelSpacing: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_CheckBoxL...
    """

    PM_CheckListButtonSize: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_CheckListB...
    """

    PM_CheckListControllerSize: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_CheckL...
    """

    PM_ComboBoxFrameWidth: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_ComboBoxFra...
    """

    PM_CustomBase: ... = PySide.QtGui.QStyle.PixelMetric.PM_CustomBase
    """
    """

    PM_DefaultChildMargin: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_DefaultChil...
    """

    PM_DefaultFrameWidth: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_DefaultFrame...
    """

    PM_DefaultLayoutSpacing: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_DefaultLa...
    """

    PM_DefaultTopLevelMargin: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_DefaultT...
    """

    PM_DialogButtonsButtonHeight: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_Dial...
    """

    PM_DialogButtonsButtonWidth: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_Dialo...
    """

    PM_DialogButtonsSeparator: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_DialogB...
    """

    PM_DockWidgetFrameWidth: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_DockWidge...
    """

    PM_DockWidgetHandleExtent: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_DockWid...
    """

    PM_DockWidgetSeparatorExtent: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_Dock...
    """

    PM_DockWidgetTitleBarButtonMargin: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM...
    """

    PM_DockWidgetTitleMargin: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_DockWidg...
    """

    PM_ExclusiveIndicatorHeight: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_Exclu...
    """

    PM_ExclusiveIndicatorWidth: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_Exclus...
    """

    PM_FocusFrameHMargin: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_FocusFrameHM...
    """

    PM_FocusFrameVMargin: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_FocusFrameVM...
    """

    PM_HeaderGripMargin: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_HeaderGripMar...
    """

    PM_HeaderMargin: ... = PySide.QtGui.QStyle.PixelMetric.PM_HeaderMargin
    """
    """

    PM_HeaderMarkSize: ... = PySide.QtGui.QStyle.PixelMetric.PM_HeaderMarkSize
    """
    """

    PM_IconViewIconSize: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_IconViewIconS...
    """

    PM_IndicatorHeight: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_IndicatorHeigh...
    """

    PM_IndicatorWidth: ... = PySide.QtGui.QStyle.PixelMetric.PM_IndicatorWidth
    """
    """

    PM_LargeIconSize: ... = PySide.QtGui.QStyle.PixelMetric.PM_LargeIconSize
    """
    """

    PM_LayoutBottomMargin: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_LayoutBotto...
    """

    PM_LayoutHorizontalSpacing: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_Layout...
    """

    PM_LayoutLeftMargin: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_LayoutLeftMar...
    """

    PM_LayoutRightMargin: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_LayoutRightM...
    """

    PM_LayoutTopMargin: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_LayoutTopMargi...
    """

    PM_LayoutVerticalSpacing: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_LayoutVe...
    """

    PM_ListViewIconSize: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_ListViewIconS...
    """

    PM_MDIFrameWidth: ... = PySide.QtGui.QStyle.PixelMetric.PM_MDIFrameWidth
    """
    """

    PM_MDIMinimizedWidth: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_MDIMinimized...
    """

    PM_MaximumDragDistance: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_MaximumDra...
    """

    PM_MdiSubWindowFrameWidth: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_MdiSubW...
    """

    PM_MdiSubWindowMinimizedWidth: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_Mdi...
    """

    PM_MenuBarHMargin: ... = PySide.QtGui.QStyle.PixelMetric.PM_MenuBarHMargin
    """
    """

    PM_MenuBarItemSpacing: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_MenuBarItem...
    """

    PM_MenuBarPanelWidth: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_MenuBarPanel...
    """

    PM_MenuBarVMargin: ... = PySide.QtGui.QStyle.PixelMetric.PM_MenuBarVMargin
    """
    """

    PM_MenuButtonIndicator: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_MenuButton...
    """

    PM_MenuDesktopFrameWidth: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_MenuDesk...
    """

    PM_MenuHMargin: ... = PySide.QtGui.QStyle.PixelMetric.PM_MenuHMargin
    """
    """

    PM_MenuPanelWidth: ... = PySide.QtGui.QStyle.PixelMetric.PM_MenuPanelWidth
    """
    """

    PM_MenuScrollerHeight: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_MenuScrolle...
    """

    PM_MenuTearoffHeight: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_MenuTearoffH...
    """

    PM_MenuVMargin: ... = PySide.QtGui.QStyle.PixelMetric.PM_MenuVMargin
    """
    """

    PM_MessageBoxIconSize: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_MessageBoxI...
    """

    PM_ProgressBarChunkWidth: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_Progress...
    """

    PM_RadioButtonLabelSpacing: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_RadioB...
    """

    PM_ScrollBarExtent: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_ScrollBarExten...
    """

    PM_ScrollBarSliderMin: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_ScrollBarSl...
    """

    PM_ScrollView_ScrollBarSpacing: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_Sc...
    """

    PM_SizeGripSize: ... = PySide.QtGui.QStyle.PixelMetric.PM_SizeGripSize
    """
    """

    PM_SliderControlThickness: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_SliderC...
    """

    PM_SliderLength: ... = PySide.QtGui.QStyle.PixelMetric.PM_SliderLength
    """
    """

    PM_SliderSpaceAvailable: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_SliderSpa...
    """

    PM_SliderThickness: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_SliderThicknes...
    """

    PM_SliderTickmarkOffset: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_SliderTic...
    """

    PM_SmallIconSize: ... = PySide.QtGui.QStyle.PixelMetric.PM_SmallIconSize
    """
    """

    PM_SpinBoxFrameWidth: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_SpinBoxFrame...
    """

    PM_SpinBoxSliderHeight: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_SpinBoxSli...
    """

    PM_SplitterWidth: ... = PySide.QtGui.QStyle.PixelMetric.PM_SplitterWidth
    """
    """

    PM_SubMenuOverlap: ... = PySide.QtGui.QStyle.PixelMetric.PM_SubMenuOverlap
    """
    """

    PM_TabBarBaseHeight: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_TabBarBaseHei...
    """

    PM_TabBarBaseOverlap: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_TabBarBaseOv...
    """

    PM_TabBarIconSize: ... = PySide.QtGui.QStyle.PixelMetric.PM_TabBarIconSize
    """
    """

    PM_TabBarScrollButtonWidth: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_TabBar...
    """

    PM_TabBarTabHSpace: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_TabBarTabHSpac...
    """

    PM_TabBarTabOverlap: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_TabBarTabOver...
    """

    PM_TabBarTabShiftHorizontal: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_TabBa...
    """

    PM_TabBarTabShiftVertical: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_TabBarT...
    """

    PM_TabBarTabVSpace: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_TabBarTabVSpac...
    """

    PM_TabBar_ScrollButtonOverlap: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_Tab...
    """

    PM_TabCloseIndicatorHeight: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_TabClo...
    """

    PM_TabCloseIndicatorWidth: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_TabClos...
    """

    PM_TextCursorWidth: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_TextCursorWidt...
    """

    PM_TitleBarHeight: ... = PySide.QtGui.QStyle.PixelMetric.PM_TitleBarHeight
    """
    """

    PM_ToolBarExtensionExtent: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_ToolBar...
    """

    PM_ToolBarFrameWidth: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_ToolBarFrame...
    """

    PM_ToolBarHandleExtent: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_ToolBarHan...
    """

    PM_ToolBarIconSize: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_ToolBarIconSiz...
    """

    PM_ToolBarItemMargin: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_ToolBarItemM...
    """

    PM_ToolBarItemSpacing: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_ToolBarItem...
    """

    PM_ToolBarSeparatorExtent: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_ToolBar...
    """

    PM_ToolTipLabelFrameWidth: ...
    """
    PySide.QtGui.QStyle.PixelMetric.PM_ToolTip...
    """

    PixelMetric: ...
    """
    <type 'PySide.QtGui.QStyle.PixelMetric'>
    """

    PrimitiveElement: ...
    """
    <type 'PySide.QtGui.QStyle.PrimitiveElement'>
    """

    RSIP_OnMouseClick: ...
    """
    PySide.QtGui.QStyle.RequestSoftwareInputPanel.RSIP...
    """

    RSIP_OnMouseClickAndAlreadyFocused: ...
    """
    PySide.QtGui.QStyle.RequestSoftwa...
    """

    RequestSoftwareInputPanel: ...
    """
    <type 'PySide.QtGui.QStyle.RequestSoftware...
    """

    SC_All: ... = PySide.QtGui.QStyle.SubControl.SC_All
    """
    """

    SC_ComboBoxArrow: ... = PySide.QtGui.QStyle.SubControl.SC_ComboBoxArrow
    """
    """

    SC_ComboBoxEditField: ...
    """
    PySide.QtGui.QStyle.SubControl.SC_ComboBoxEditF...
    """

    SC_ComboBoxFrame: ... = PySide.QtGui.QStyle.SubControl.SC_ComboBoxFrame
    """
    """

    SC_ComboBoxListBoxPopup: ...
    """
    PySide.QtGui.QStyle.SubControl.SC_ComboBoxLi...
    """

    SC_CustomBase: ... = PySide.QtGui.QStyle.SubControl.SC_CustomBase
    """
    """

    SC_DialGroove: ... = PySide.QtGui.QStyle.SubControl.SC_DialGroove
    """
    """

    SC_DialHandle: ... = PySide.QtGui.QStyle.SubControl.SC_DialHandle
    """
    """

    SC_DialTickmarks: ... = PySide.QtGui.QStyle.SubControl.SC_DialTickmarks
    """
    """

    SC_GroupBoxCheckBox: ...
    """
    PySide.QtGui.QStyle.SubControl.SC_GroupBoxCheckB...
    """

    SC_GroupBoxContents: ...
    """
    PySide.QtGui.QStyle.SubControl.SC_GroupBoxConten...
    """

    SC_GroupBoxFrame: ... = PySide.QtGui.QStyle.SubControl.SC_GroupBoxFrame
    """
    """

    SC_GroupBoxLabel: ... = PySide.QtGui.QStyle.SubControl.SC_GroupBoxLabel
    """
    """

    SC_MdiCloseButton: ... = PySide.QtGui.QStyle.SubControl.SC_MdiCloseButton
    """
    """

    SC_MdiMinButton: ... = PySide.QtGui.QStyle.SubControl.SC_MdiMinButton
    """
    """

    SC_MdiNormalButton: ... = PySide.QtGui.QStyle.SubControl.SC_MdiNormalButton
    """
    """

    SC_None: ... = PySide.QtGui.QStyle.SubControl.SC_None
    """
    """

    SC_Q3ListView: ... = PySide.QtGui.QStyle.SubControl.SC_Q3ListView
    """
    """

    SC_Q3ListViewBranch: ...
    """
    PySide.QtGui.QStyle.SubControl.SC_Q3ListViewBran...
    """

    SC_Q3ListViewExpand: ...
    """
    PySide.QtGui.QStyle.SubControl.SC_Q3ListViewExpa...
    """

    SC_ScrollBarAddLine: ...
    """
    PySide.QtGui.QStyle.SubControl.SC_ScrollBarAddLi...
    """

    SC_ScrollBarAddPage: ...
    """
    PySide.QtGui.QStyle.SubControl.SC_ScrollBarAddPa...
    """

    SC_ScrollBarFirst: ... = PySide.QtGui.QStyle.SubControl.SC_ScrollBarFirst
    """
    """

    SC_ScrollBarGroove: ... = PySide.QtGui.QStyle.SubControl.SC_ScrollBarGroove
    """
    """

    SC_ScrollBarLast: ... = PySide.QtGui.QStyle.SubControl.SC_ScrollBarLast
    """
    """

    SC_ScrollBarSlider: ... = PySide.QtGui.QStyle.SubControl.SC_ScrollBarSlider
    """
    """

    SC_ScrollBarSubLine: ...
    """
    PySide.QtGui.QStyle.SubControl.SC_ScrollBarSubLi...
    """

    SC_ScrollBarSubPage: ...
    """
    PySide.QtGui.QStyle.SubControl.SC_ScrollBarSubPa...
    """

    SC_SliderGroove: ... = PySide.QtGui.QStyle.SubControl.SC_SliderGroove
    """
    """

    SC_SliderHandle: ... = PySide.QtGui.QStyle.SubControl.SC_SliderHandle
    """
    """

    SC_SliderTickmarks: ... = PySide.QtGui.QStyle.SubControl.SC_SliderTickmarks
    """
    """

    SC_SpinBoxDown: ... = PySide.QtGui.QStyle.SubControl.SC_SpinBoxDown
    """
    """

    SC_SpinBoxEditField: ...
    """
    PySide.QtGui.QStyle.SubControl.SC_SpinBoxEditFie...
    """

    SC_SpinBoxFrame: ... = PySide.QtGui.QStyle.SubControl.SC_SpinBoxFrame
    """
    """

    SC_SpinBoxUp: ... = PySide.QtGui.QStyle.SubControl.SC_SpinBoxUp
    """
    """

    SC_TitleBarCloseButton: ...
    """
    PySide.QtGui.QStyle.SubControl.SC_TitleBarClo...
    """

    SC_TitleBarContextHelpButton: ...
    """
    PySide.QtGui.QStyle.SubControl.SC_Title...
    """

    SC_TitleBarLabel: ... = PySide.QtGui.QStyle.SubControl.SC_TitleBarLabel
    """
    """

    SC_TitleBarMaxButton: ...
    """
    PySide.QtGui.QStyle.SubControl.SC_TitleBarMaxBu...
    """

    SC_TitleBarMinButton: ...
    """
    PySide.QtGui.QStyle.SubControl.SC_TitleBarMinBu...
    """

    SC_TitleBarNormalButton: ...
    """
    PySide.QtGui.QStyle.SubControl.SC_TitleBarNo...
    """

    SC_TitleBarShadeButton: ...
    """
    PySide.QtGui.QStyle.SubControl.SC_TitleBarSha...
    """

    SC_TitleBarSysMenu: ... = PySide.QtGui.QStyle.SubControl.SC_TitleBarSysMenu
    """
    """

    SC_TitleBarUnshadeButton: ...
    """
    PySide.QtGui.QStyle.SubControl.SC_TitleBarU...
    """

    SC_ToolButton: ... = PySide.QtGui.QStyle.SubControl.SC_ToolButton
    """
    """

    SC_ToolButtonMenu: ... = PySide.QtGui.QStyle.SubControl.SC_ToolButtonMenu
    """
    """

    SE_CheckBoxClickRect: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_CheckBoxClick...
    """

    SE_CheckBoxContents: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_CheckBoxConten...
    """

    SE_CheckBoxFocusRect: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_CheckBoxFocus...
    """

    SE_CheckBoxIndicator: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_CheckBoxIndic...
    """

    SE_CheckBoxLayoutItem: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_CheckBoxLayo...
    """

    SE_ComboBoxFocusRect: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_ComboBoxFocus...
    """

    SE_ComboBoxLayoutItem: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_ComboBoxLayo...
    """

    SE_CustomBase: ... = PySide.QtGui.QStyle.SubElement.SE_CustomBase
    """
    """

    SE_DateTimeEditLayoutItem: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_DateTime...
    """

    SE_DialogButtonAbort: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_DialogButtonA...
    """

    SE_DialogButtonAccept: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_DialogButton...
    """

    SE_DialogButtonAll: ... = PySide.QtGui.QStyle.SubElement.SE_DialogButtonAll
    """
    """

    SE_DialogButtonApply: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_DialogButtonA...
    """

    SE_DialogButtonBoxLayoutItem: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_Dialo...
    """

    SE_DialogButtonCustom: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_DialogButton...
    """

    SE_DialogButtonHelp: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_DialogButtonHe...
    """

    SE_DialogButtonIgnore: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_DialogButton...
    """

    SE_DialogButtonReject: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_DialogButton...
    """

    SE_DialogButtonRetry: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_DialogButtonR...
    """

    SE_DockWidgetCloseButton: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_DockWidge...
    """

    SE_DockWidgetFloatButton: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_DockWidge...
    """

    SE_DockWidgetIcon: ... = PySide.QtGui.QStyle.SubElement.SE_DockWidgetIcon
    """
    """

    SE_DockWidgetTitleBarText: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_DockWidg...
    """

    SE_FrameContents: ... = PySide.QtGui.QStyle.SubElement.SE_FrameContents
    """
    """

    SE_FrameLayoutItem: ... = PySide.QtGui.QStyle.SubElement.SE_FrameLayoutItem
    """
    """

    SE_GroupBoxLayoutItem: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_GroupBoxLayo...
    """

    SE_HeaderArrow: ... = PySide.QtGui.QStyle.SubElement.SE_HeaderArrow
    """
    """

    SE_HeaderLabel: ... = PySide.QtGui.QStyle.SubElement.SE_HeaderLabel
    """
    """

    SE_ItemViewItemCheckIndicator: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_Item...
    """

    SE_ItemViewItemDecoration: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_ItemView...
    """

    SE_ItemViewItemFocusRect: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_ItemViewI...
    """

    SE_ItemViewItemText: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_ItemViewItemTe...
    """

    SE_LabelLayoutItem: ... = PySide.QtGui.QStyle.SubElement.SE_LabelLayoutItem
    """
    """

    SE_LineEditContents: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_LineEditConten...
    """

    SE_ProgressBarContents: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_ProgressBar...
    """

    SE_ProgressBarGroove: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_ProgressBarGr...
    """

    SE_ProgressBarLabel: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_ProgressBarLab...
    """

    SE_ProgressBarLayoutItem: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_ProgressB...
    """

    SE_PushButtonContents: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_PushButtonCo...
    """

    SE_PushButtonFocusRect: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_PushButtonF...
    """

    SE_PushButtonLayoutItem: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_PushButton...
    """

    SE_Q3DockWindowHandleRect: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_Q3DockWi...
    """

    SE_RadioButtonClickRect: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_RadioButto...
    """

    SE_RadioButtonContents: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_RadioButton...
    """

    SE_RadioButtonFocusRect: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_RadioButto...
    """

    SE_RadioButtonIndicator: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_RadioButto...
    """

    SE_RadioButtonLayoutItem: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_RadioButt...
    """

    SE_ShapedFrameContents: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_ShapedFrame...
    """

    SE_SliderFocusRect: ... = PySide.QtGui.QStyle.SubElement.SE_SliderFocusRect
    """
    """

    SE_SliderLayoutItem: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_SliderLayoutIt...
    """

    SE_SpinBoxLayoutItem: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_SpinBoxLayout...
    """

    SE_TabBarTabLeftButton: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_TabBarTabLe...
    """

    SE_TabBarTabRightButton: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_TabBarTabR...
    """

    SE_TabBarTabText: ... = PySide.QtGui.QStyle.SubElement.SE_TabBarTabText
    """
    """

    SE_TabBarTearIndicator: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_TabBarTearI...
    """

    SE_TabWidgetLayoutItem: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_TabWidgetLa...
    """

    SE_TabWidgetLeftCorner: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_TabWidgetLe...
    """

    SE_TabWidgetRightCorner: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_TabWidgetR...
    """

    SE_TabWidgetTabBar: ... = PySide.QtGui.QStyle.SubElement.SE_TabWidgetTabBar
    """
    """

    SE_TabWidgetTabContents: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_TabWidgetT...
    """

    SE_TabWidgetTabPane: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_TabWidgetTabPa...
    """

    SE_ToolBarHandle: ... = PySide.QtGui.QStyle.SubElement.SE_ToolBarHandle
    """
    """

    SE_ToolBoxTabContents: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_ToolBoxTabCo...
    """

    SE_ToolButtonLayoutItem: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_ToolButton...
    """

    SE_TreeViewDisclosureItem: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_TreeView...
    """

    SE_ViewItemCheckIndicator: ...
    """
    PySide.QtGui.QStyle.SubElement.SE_ViewItem...
    """

    SH_BlinkCursorWhenTextSelected: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Blin...
    """

    SH_Button_FocusPolicy: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Button_FocusP...
    """

    SH_ComboBox_LayoutDirection: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_ComboBo...
    """

    SH_ComboBox_ListMouseTracking: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Combo...
    """

    SH_ComboBox_Popup: ... = PySide.QtGui.QStyle.StyleHint.SH_ComboBox_Popup
    """
    """

    SH_ComboBox_PopupFrameStyle: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_ComboBo...
    """

    SH_CustomBase: ... = PySide.QtGui.QStyle.StyleHint.SH_CustomBase
    """
    """

    SH_Dial_BackgroundRole: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Dial_Backgro...
    """

    SH_DialogButtonBox_ButtonsHaveIcons: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH...
    """

    SH_DialogButtonLayout: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_DialogButtonL...
    """

    SH_DialogButtons_DefaultButton: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Dial...
    """

    SH_DitherDisabledText: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_DitherDisable...
    """

    SH_DockWidget_ButtonsHaveFrame: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Dock...
    """

    SH_DrawMenuBarSeparator: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_DrawMenuBar...
    """

    SH_EtchDisabledText: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_EtchDisabledTex...
    """

    SH_FocusFrame_AboveWidget: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_FocusFram...
    """

    SH_FocusFrame_Mask: ... = PySide.QtGui.QStyle.StyleHint.SH_FocusFrame_Mask
    """
    """

    SH_FontDialog_SelectAssociatedText: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_...
    """

    SH_FormLayoutFieldGrowthPolicy: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Form...
    """

    SH_FormLayoutFormAlignment: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_FormLayo...
    """

    SH_FormLayoutLabelAlignment: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_FormLay...
    """

    SH_FormLayoutWrapPolicy: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_FormLayoutW...
    """

    SH_GroupBox_TextLabelColor: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_GroupBox...
    """

    SH_GroupBox_TextLabelVerticalAlignment: ...
    """
    PySide.QtGui.QStyle.StyleHint...
    """

    SH_Header_ArrowAlignment: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Header_Arr...
    """

    SH_ItemView_ActivateItemOnSingleClick: ...
    """
    PySide.QtGui.QStyle.StyleHint....
    """

    SH_ItemView_ArrowKeysNavigateIntoChildren: ...
    """
    PySide.QtGui.QStyle.StyleH...
    """

    SH_ItemView_ChangeHighlightOnFocus: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_...
    """

    SH_ItemView_DrawDelegateFrame: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_ItemV...
    """

    SH_ItemView_EllipsisLocation: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_ItemVi...
    """

    SH_ItemView_MovementWithoutUpdatingSelection: ...
    """
    PySide.QtGui.QStyle.Sty...
    """

    SH_ItemView_PaintAlternatingRowColorsForEmptyArea: ...
    """
    PySide.QtGui.QStyl...
    """

    SH_ItemView_ShowDecorationSelected: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_...
    """

    SH_LineEdit_PasswordCharacter: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_LineE...
    """

    SH_MainWindow_SpaceBelowMenuBar: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Mai...
    """

    SH_MenuBar_AltKeyNavigation: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_MenuBar...
    """

    SH_MenuBar_DismissOnSecondClick: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Men...
    """

    SH_MenuBar_MouseTracking: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_MenuBar_Mo...
    """

    SH_Menu_AllowActiveAndDisabled: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Menu...
    """

    SH_Menu_FadeOutOnHide: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Menu_FadeOutO...
    """

    SH_Menu_FillScreenWithScroll: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Menu_F...
    """

    SH_Menu_FlashTriggeredItem: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Menu_Fla...
    """

    SH_Menu_KeyboardSearch: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Menu_Keyboar...
    """

    SH_Menu_Mask: ... = PySide.QtGui.QStyle.StyleHint.SH_Menu_Mask
    """
    """

    SH_Menu_MouseTracking: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Menu_MouseTra...
    """

    SH_Menu_Scrollable: ... = PySide.QtGui.QStyle.StyleHint.SH_Menu_Scrollable
    """
    """

    SH_Menu_SelectionWrap: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Menu_Selectio...
    """

    SH_Menu_SloppySubMenus: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Menu_SloppyS...
    """

    SH_Menu_SpaceActivatesItem: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Menu_Spa...
    """

    SH_Menu_SubMenuPopupDelay: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Menu_SubM...
    """

    SH_MessageBox_CenterButtons: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Message...
    """

    SH_MessageBox_TextInteractionFlags: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_...
    """

    SH_MessageBox_UseBorderForButtonSpacing: ...
    """
    PySide.QtGui.QStyle.StyleHin...
    """

    SH_PrintDialog_RightAlignButtons: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Pr...
    """

    SH_ProgressDialog_CenterCancelButton: ...
    """
    PySide.QtGui.QStyle.StyleHint.S...
    """

    SH_ProgressDialog_TextLabelAlignment: ...
    """
    PySide.QtGui.QStyle.StyleHint.S...
    """

    SH_Q3ListViewExpand_SelectMouseType: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH...
    """

    SH_RequestSoftwareInputPanel: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Reques...
    """

    SH_RichText_FullWidthSelection: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Rich...
    """

    SH_RubberBand_Mask: ... = PySide.QtGui.QStyle.StyleHint.SH_RubberBand_Mask
    """
    """

    SH_ScrollBar_ContextMenu: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_ScrollBar_...
    """

    SH_ScrollBar_LeftClickAbsolutePosition: ...
    """
    PySide.QtGui.QStyle.StyleHint...
    """

    SH_ScrollBar_MiddleClickAbsolutePosition: ...
    """
    PySide.QtGui.QStyle.StyleHi...
    """

    SH_ScrollBar_RollBetweenButtons: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Scr...
    """

    SH_ScrollBar_ScrollWhenPointerLeavesControl: ...
    """
    PySide.QtGui.QStyle.Styl...
    """

    SH_ScrollBar_StopMouseOverSlider: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Sc...
    """

    SH_ScrollView_FrameOnlyAroundContents: ...
    """
    PySide.QtGui.QStyle.StyleHint....
    """

    SH_Slider_AbsoluteSetButtons: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Slider...
    """

    SH_Slider_PageSetButtons: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Slider_Pag...
    """

    SH_Slider_SloppyKeyEvents: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Slider_Sl...
    """

    SH_Slider_SnapToValue: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Slider_SnapTo...
    """

    SH_Slider_StopMouseOverSlider: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Slide...
    """

    SH_SpellCheckUnderlineStyle: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_SpellCh...
    """

    SH_SpinBox_AnimateButton: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_SpinBox_An...
    """

    SH_SpinBox_ClickAutoRepeatRate: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Spin...
    """

    SH_SpinBox_ClickAutoRepeatThreshold: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH...
    """

    SH_SpinBox_KeyPressAutoRepeatRate: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_S...
    """

    SH_SpinControls_DisableOnBounds: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Spi...
    """

    SH_TabBar_Alignment: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_TabBar_Alignmen...
    """

    SH_TabBar_CloseButtonPosition: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_TabBa...
    """

    SH_TabBar_ElideMode: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_TabBar_ElideMod...
    """

    SH_TabBar_PreferNoArrows: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_TabBar_Pre...
    """

    SH_TabBar_SelectMouseType: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_TabBar_Se...
    """

    SH_TabWidget_DefaultTabPosition: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Tab...
    """

    SH_Table_GridLineColor: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Table_GridLi...
    """

    SH_TextControl_FocusIndicatorTextCharFormat: ...
    """
    PySide.QtGui.QStyle.Styl...
    """

    SH_TitleBar_AutoRaise: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_TitleBar_Auto...
    """

    SH_TitleBar_ModifyNotification: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Titl...
    """

    SH_TitleBar_NoBorder: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_TitleBar_NoBor...
    """

    SH_ToolBar_Movable: ... = PySide.QtGui.QStyle.StyleHint.SH_ToolBar_Movable
    """
    """

    SH_ToolBox_SelectedPageTitleBold: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_To...
    """

    SH_ToolButtonStyle: ... = PySide.QtGui.QStyle.StyleHint.SH_ToolButtonStyle
    """
    """

    SH_ToolButton_PopupDelay: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_ToolButton...
    """

    SH_ToolTipLabel_Opacity: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_ToolTipLabe...
    """

    SH_ToolTip_Mask: ... = PySide.QtGui.QStyle.StyleHint.SH_ToolTip_Mask
    """
    """

    SH_UnderlineShortcut: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_UnderlineShort...
    """

    SH_Widget_ShareActivation: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Widget_Sh...
    """

    SH_WindowFrame_Mask: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_WindowFrame_Mas...
    """

    SH_WizardStyle: ... = PySide.QtGui.QStyle.StyleHint.SH_WizardStyle
    """
    """

    SH_Workspace_FillSpaceOnMaximize: ...
    """
    PySide.QtGui.QStyle.StyleHint.SH_Wo...
    """

    SP_ArrowBack: ... = PySide.QtGui.QStyle.StandardPixmap.SP_ArrowBack
    """
    """

    SP_ArrowDown: ... = PySide.QtGui.QStyle.StandardPixmap.SP_ArrowDown
    """
    """

    SP_ArrowForward: ... = PySide.QtGui.QStyle.StandardPixmap.SP_ArrowForward
    """
    """

    SP_ArrowLeft: ... = PySide.QtGui.QStyle.StandardPixmap.SP_ArrowLeft
    """
    """

    SP_ArrowRight: ... = PySide.QtGui.QStyle.StandardPixmap.SP_ArrowRight
    """
    """

    SP_ArrowUp: ... = PySide.QtGui.QStyle.StandardPixmap.SP_ArrowUp
    """
    """

    SP_BrowserReload: ... = PySide.QtGui.QStyle.StandardPixmap.SP_BrowserReload
    """
    """

    SP_BrowserStop: ... = PySide.QtGui.QStyle.StandardPixmap.SP_BrowserStop
    """
    """

    SP_CommandLink: ... = PySide.QtGui.QStyle.StandardPixmap.SP_CommandLink
    """
    """

    SP_ComputerIcon: ... = PySide.QtGui.QStyle.StandardPixmap.SP_ComputerIcon
    """
    """

    SP_CustomBase: ... = PySide.QtGui.QStyle.StandardPixmap.SP_CustomBase
    """
    """

    SP_DesktopIcon: ... = PySide.QtGui.QStyle.StandardPixmap.SP_DesktopIcon
    """
    """

    SP_DialogApplyButton: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_DialogApp...
    """

    SP_DialogCancelButton: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_DialogCa...
    """

    SP_DialogCloseButton: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_DialogClo...
    """

    SP_DialogDiscardButton: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_DialogD...
    """

    SP_DialogHelpButton: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_DialogHelp...
    """

    SP_DialogNoButton: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_DialogNoButt...
    """

    SP_DialogOkButton: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_DialogOkButt...
    """

    SP_DialogOpenButton: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_DialogOpen...
    """

    SP_DialogResetButton: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_DialogRes...
    """

    SP_DialogSaveButton: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_DialogSave...
    """

    SP_DialogYesButton: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_DialogYesBu...
    """

    SP_DirClosedIcon: ... = PySide.QtGui.QStyle.StandardPixmap.SP_DirClosedIcon
    """
    """

    SP_DirHomeIcon: ... = PySide.QtGui.QStyle.StandardPixmap.SP_DirHomeIcon
    """
    """

    SP_DirIcon: ... = PySide.QtGui.QStyle.StandardPixmap.SP_DirIcon
    """
    """

    SP_DirLinkIcon: ... = PySide.QtGui.QStyle.StandardPixmap.SP_DirLinkIcon
    """
    """

    SP_DirOpenIcon: ... = PySide.QtGui.QStyle.StandardPixmap.SP_DirOpenIcon
    """
    """

    SP_DockWidgetCloseButton: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_DockW...
    """

    SP_DriveCDIcon: ... = PySide.QtGui.QStyle.StandardPixmap.SP_DriveCDIcon
    """
    """

    SP_DriveDVDIcon: ... = PySide.QtGui.QStyle.StandardPixmap.SP_DriveDVDIcon
    """
    """

    SP_DriveFDIcon: ... = PySide.QtGui.QStyle.StandardPixmap.SP_DriveFDIcon
    """
    """

    SP_DriveHDIcon: ... = PySide.QtGui.QStyle.StandardPixmap.SP_DriveHDIcon
    """
    """

    SP_DriveNetIcon: ... = PySide.QtGui.QStyle.StandardPixmap.SP_DriveNetIcon
    """
    """

    SP_FileDialogBack: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_FileDialogBa...
    """

    SP_FileDialogContentsView: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_File...
    """

    SP_FileDialogDetailedView: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_File...
    """

    SP_FileDialogEnd: ... = PySide.QtGui.QStyle.StandardPixmap.SP_FileDialogEnd
    """
    """

    SP_FileDialogInfoView: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_FileDial...
    """

    SP_FileDialogListView: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_FileDial...
    """

    SP_FileDialogNewFolder: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_FileDia...
    """

    SP_FileDialogStart: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_FileDialogS...
    """

    SP_FileDialogToParent: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_FileDial...
    """

    SP_FileIcon: ... = PySide.QtGui.QStyle.StandardPixmap.SP_FileIcon
    """
    """

    SP_FileLinkIcon: ... = PySide.QtGui.QStyle.StandardPixmap.SP_FileLinkIcon
    """
    """

    SP_MediaPause: ... = PySide.QtGui.QStyle.StandardPixmap.SP_MediaPause
    """
    """

    SP_MediaPlay: ... = PySide.QtGui.QStyle.StandardPixmap.SP_MediaPlay
    """
    """

    SP_MediaSeekBackward: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_MediaSeek...
    """

    SP_MediaSeekForward: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_MediaSeekF...
    """

    SP_MediaSkipBackward: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_MediaSkip...
    """

    SP_MediaSkipForward: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_MediaSkipF...
    """

    SP_MediaStop: ... = PySide.QtGui.QStyle.StandardPixmap.SP_MediaStop
    """
    """

    SP_MediaVolume: ... = PySide.QtGui.QStyle.StandardPixmap.SP_MediaVolume
    """
    """

    SP_MediaVolumeMuted: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_MediaVolum...
    """

    SP_MessageBoxCritical: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_MessageB...
    """

    SP_MessageBoxInformation: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_Messa...
    """

    SP_MessageBoxQuestion: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_MessageB...
    """

    SP_MessageBoxWarning: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_MessageBo...
    """

    SP_TitleBarCloseButton: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_TitleBa...
    """

    SP_TitleBarContextHelpButton: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_T...
    """

    SP_TitleBarMaxButton: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_TitleBarM...
    """

    SP_TitleBarMenuButton: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_TitleBar...
    """

    SP_TitleBarMinButton: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_TitleBarM...
    """

    SP_TitleBarNormalButton: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_TitleB...
    """

    SP_TitleBarShadeButton: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_TitleBa...
    """

    SP_TitleBarUnshadeButton: ...
    """
    PySide.QtGui.QStyle.StandardPixmap.SP_Title...
    """

    SP_ToolBarHorizontalExtensionButton: ...
    """
    PySide.QtGui.QStyle.StandardPixm...
    """

    SP_ToolBarVerticalExtensionButton: ...
    """
    PySide.QtGui.QStyle.StandardPixmap...
    """

    SP_TrashIcon: ... = PySide.QtGui.QStyle.StandardPixmap.SP_TrashIcon
    """
    """

    SP_VistaShield: ... = PySide.QtGui.QStyle.StandardPixmap.SP_VistaShield
    """
    """

    StandardPixmap: ...
    """
    <type 'PySide.QtGui.QStyle.StandardPixmap'>
    """

    State: ...
    """
    <type 'State'>
    """

    StateFlag: ...
    """
    <type 'PySide.QtGui.QStyle.StateFlag'>
    """

    State_Active: ... = PySide.QtGui.QStyle.StateFlag.State_Active
    """
    """

    State_AutoRaise: ... = PySide.QtGui.QStyle.StateFlag.State_AutoRaise
    """
    """

    State_Bottom: ... = PySide.QtGui.QStyle.StateFlag.State_Bottom
    """
    """

    State_Children: ... = PySide.QtGui.QStyle.StateFlag.State_Children
    """
    """

    State_DownArrow: ... = PySide.QtGui.QStyle.StateFlag.State_DownArrow
    """
    """

    State_Editing: ... = PySide.QtGui.QStyle.StateFlag.State_Editing
    """
    """

    State_Enabled: ... = PySide.QtGui.QStyle.StateFlag.State_Enabled
    """
    """

    State_FocusAtBorder: ...
    """
    PySide.QtGui.QStyle.StateFlag.State_FocusAtBorde...
    """

    State_HasFocus: ... = PySide.QtGui.QStyle.StateFlag.State_HasFocus
    """
    """

    State_Horizontal: ... = PySide.QtGui.QStyle.StateFlag.State_Horizontal
    """
    """

    State_Item: ... = PySide.QtGui.QStyle.StateFlag.State_Item
    """
    """

    State_KeyboardFocusChange: ...
    """
    PySide.QtGui.QStyle.StateFlag.State_Keyboa...
    """

    State_Mini: ... = PySide.QtGui.QStyle.StateFlag.State_Mini
    """
    """

    State_MouseOver: ... = PySide.QtGui.QStyle.StateFlag.State_MouseOver
    """
    """

    State_NoChange: ... = PySide.QtGui.QStyle.StateFlag.State_NoChange
    """
    """

    State_None: ... = PySide.QtGui.QStyle.StateFlag.State_None
    """
    """

    State_Off: ... = PySide.QtGui.QStyle.StateFlag.State_Off
    """
    """

    State_On: ... = PySide.QtGui.QStyle.StateFlag.State_On
    """
    """

    State_Open: ... = PySide.QtGui.QStyle.StateFlag.State_Open
    """
    """

    State_Raised: ... = PySide.QtGui.QStyle.StateFlag.State_Raised
    """
    """

    State_ReadOnly: ... = PySide.QtGui.QStyle.StateFlag.State_ReadOnly
    """
    """

    State_Selected: ... = PySide.QtGui.QStyle.StateFlag.State_Selected
    """
    """

    State_Sibling: ... = PySide.QtGui.QStyle.StateFlag.State_Sibling
    """
    """

    State_Small: ... = PySide.QtGui.QStyle.StateFlag.State_Small
    """
    """

    State_Sunken: ... = PySide.QtGui.QStyle.StateFlag.State_Sunken
    """
    """

    State_Top: ... = PySide.QtGui.QStyle.StateFlag.State_Top
    """
    """

    State_UpArrow: ... = PySide.QtGui.QStyle.StateFlag.State_UpArrow
    """
    """

    State_Window: ... = PySide.QtGui.QStyle.StateFlag.State_Window
    """
    """

    StyleHint: ...
    """
    <type 'PySide.QtGui.QStyle.StyleHint'>
    """

    SubControl: ...
    """
    <type 'PySide.QtGui.QStyle.SubControl'>
    """

    SubControls: ...
    """
    <type 'SubControls'>
    """

    SubElement: ...
    """
    <type 'PySide.QtGui.QStyle.SubElement'>
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    @staticmethod
    def alignedRect(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def sliderPositionFromValue(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def sliderValueFromPosition(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def visualAlignment(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def visualPos(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def visualRect(*args, **kwargs):
        """ """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def combinedLayoutSpacing(self, *args, **kwargs):
        """ """
        ...
    def drawComplexControl(self, *args, **kwargs):
        """ """
        ...
    def drawControl(self, *args, **kwargs):
        """ """
        ...
    def drawItemPixmap(self, *args, **kwargs):
        """ """
        ...
    def drawItemText(self, *args, **kwargs):
        """ """
        ...
    def drawPrimitive(self, *args, **kwargs):
        """ """
        ...
    def generatedIconPixmap(self, *args, **kwargs):
        """ """
        ...
    def hitTestComplexControl(self, *args, **kwargs):
        """ """
        ...
    def itemPixmapRect(self, *args, **kwargs):
        """ """
        ...
    def itemTextRect(self, *args, **kwargs):
        """ """
        ...
    def layoutSpacing(self, *args, **kwargs):
        """ """
        ...
    def layoutSpacingImplementation(self, *args, **kwargs):
        """ """
        ...
    def pixelMetric(self, *args, **kwargs):
        """ """
        ...
    def polish(self, *args, **kwargs):
        """ """
        ...
    def proxy(self, *args, **kwargs):
        """ """
        ...
    def sizeFromContents(self, *args, **kwargs):
        """ """
        ...
    def standardIcon(self, *args, **kwargs):
        """ """
        ...
    def standardIconImplementation(self, *args, **kwargs):
        """ """
        ...
    def standardPalette(self, *args, **kwargs):
        """ """
        ...
    def standardPixmap(self, *args, **kwargs):
        """ """
        ...
    def styleHint(self, *args, **kwargs):
        """ """
        ...
    def subControlRect(self, *args, **kwargs):
        """ """
        ...
    def subElementRect(self, *args, **kwargs):
        """ """
        ...
    def unpolish(self, *args, **kwargs):
        """ """
        ...
    ...

class QStyleFactory(Shiboken.Object):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    @staticmethod
    def create(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def keys(*args, **kwargs):
        """ """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleHintReturn(Shiboken.Object):
    HintReturnType: ...
    """
    <type 'PySide.QtGui.QStyleHintReturn.HintReturnType'>
    """

    SH_Default: ... = PySide.QtGui.QStyleHintReturn.HintReturnType.SH_Default
    """
    """

    SH_Mask: ... = PySide.QtGui.QStyleHintReturn.HintReturnType.SH_Mask
    """
    """

    SH_Variant: ... = PySide.QtGui.QStyleHintReturn.HintReturnType.SH_Variant
    """
    """

    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleHintReturn.StyleOptionType...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleHintReturn.StyleOptionV...
    """

    Type: ... = PySide.QtGui.QStyleHintReturn.StyleOptionType.Type
    """
    """

    Version: ... = PySide.QtGui.QStyleHintReturn.StyleOptionVersion.Version
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleHintReturnMask(QStyleHintReturn):
    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleHintReturnMask.StyleOption...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleHintReturnMask.StyleOpt...
    """

    Type: ... = PySide.QtGui.QStyleHintReturnMask.StyleOptionType.Type
    """
    """

    Version: ... = PySide.QtGui.QStyleHintReturnMask.StyleOptionVersion.Version
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleHintReturnVariant(QStyleHintReturn):
    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleHintReturnVariant.StyleOpt...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleHintReturnVariant.Style...
    """

    Type: ... = PySide.QtGui.QStyleHintReturnVariant.StyleOptionType.Type
    """
    """

    Version: ...
    """
    PySide.QtGui.QStyleHintReturnVariant.StyleOptionVersion.Vers...
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleOption(Shiboken.Object):
    OptionType: ...
    """
    <type 'PySide.QtGui.QStyleOption.OptionType'>
    """

    SO_Button: ... = PySide.QtGui.QStyleOption.OptionType.SO_Button
    """
    """

    SO_ComboBox: ... = PySide.QtGui.QStyleOption.OptionType.SO_ComboBox
    """
    """

    SO_Complex: ... = PySide.QtGui.QStyleOption.OptionType.SO_Complex
    """
    """

    SO_ComplexCustomBase: ...
    """
    PySide.QtGui.QStyleOption.OptionType.SO_Complex...
    """

    SO_CustomBase: ... = PySide.QtGui.QStyleOption.OptionType.SO_CustomBase
    """
    """

    SO_Default: ... = PySide.QtGui.QStyleOption.OptionType.SO_Default
    """
    """

    SO_DockWidget: ... = PySide.QtGui.QStyleOption.OptionType.SO_DockWidget
    """
    """

    SO_FocusRect: ... = PySide.QtGui.QStyleOption.OptionType.SO_FocusRect
    """
    """

    SO_Frame: ... = PySide.QtGui.QStyleOption.OptionType.SO_Frame
    """
    """

    SO_GraphicsItem: ... = PySide.QtGui.QStyleOption.OptionType.SO_GraphicsItem
    """
    """

    SO_GroupBox: ... = PySide.QtGui.QStyleOption.OptionType.SO_GroupBox
    """
    """

    SO_Header: ... = PySide.QtGui.QStyleOption.OptionType.SO_Header
    """
    """

    SO_MenuItem: ... = PySide.QtGui.QStyleOption.OptionType.SO_MenuItem
    """
    """

    SO_ProgressBar: ... = PySide.QtGui.QStyleOption.OptionType.SO_ProgressBar
    """
    """

    SO_Q3DockWindow: ... = PySide.QtGui.QStyleOption.OptionType.SO_Q3DockWindow
    """
    """

    SO_Q3ListView: ... = PySide.QtGui.QStyleOption.OptionType.SO_Q3ListView
    """
    """

    SO_Q3ListViewItem: ...
    """
    PySide.QtGui.QStyleOption.OptionType.SO_Q3ListView...
    """

    SO_RubberBand: ... = PySide.QtGui.QStyleOption.OptionType.SO_RubberBand
    """
    """

    SO_SizeGrip: ... = PySide.QtGui.QStyleOption.OptionType.SO_SizeGrip
    """
    """

    SO_Slider: ... = PySide.QtGui.QStyleOption.OptionType.SO_Slider
    """
    """

    SO_SpinBox: ... = PySide.QtGui.QStyleOption.OptionType.SO_SpinBox
    """
    """

    SO_Tab: ... = PySide.QtGui.QStyleOption.OptionType.SO_Tab
    """
    """

    SO_TabBarBase: ... = PySide.QtGui.QStyleOption.OptionType.SO_TabBarBase
    """
    """

    SO_TabWidgetFrame: ...
    """
    PySide.QtGui.QStyleOption.OptionType.SO_TabWidgetF...
    """

    SO_TitleBar: ... = PySide.QtGui.QStyleOption.OptionType.SO_TitleBar
    """
    """

    SO_ToolBar: ... = PySide.QtGui.QStyleOption.OptionType.SO_ToolBar
    """
    """

    SO_ToolBox: ... = PySide.QtGui.QStyleOption.OptionType.SO_ToolBox
    """
    """

    SO_ToolButton: ... = PySide.QtGui.QStyleOption.OptionType.SO_ToolButton
    """
    """

    SO_ViewItem: ... = PySide.QtGui.QStyleOption.OptionType.SO_ViewItem
    """
    """

    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleOption.StyleOptionType'>
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleOption.StyleOptionVersi...
    """

    Type: ... = PySide.QtGui.QStyleOption.StyleOptionType.Type
    """
    """

    Version: ... = PySide.QtGui.QStyleOption.StyleOptionVersion.Version
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def __repr__(self, *args, **kwargs):
        """
        x.__repr__() <==> repr(x)
        """
        ...
    def initFrom(self, *args, **kwargs):
        """ """
        ...
    ...

class QStyleOptionButton(QStyleOption):
    AutoDefaultButton: ...
    """
    PySide.QtGui.QStyleOptionButton.ButtonFeature.Auto...
    """

    ButtonFeature: ...
    """
    <type 'PySide.QtGui.QStyleOptionButton.ButtonFeature'>
    """

    ButtonFeatures: ...
    """
    <type 'ButtonFeatures'>
    """

    CommandLinkButton: ...
    """
    PySide.QtGui.QStyleOptionButton.ButtonFeature.Comm...
    """

    DefaultButton: ...
    """
    PySide.QtGui.QStyleOptionButton.ButtonFeature.DefaultB...
    """

    Flat: ... = PySide.QtGui.QStyleOptionButton.ButtonFeature.Flat
    """
    """

    HasMenu: ... = PySide.QtGui.QStyleOptionButton.ButtonFeature.HasMenu
    """
    """

    # None: ... = PySide.QtGui.QStyleOptionButton.ButtonFeature.None

    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleOptionButton.StyleOptionTy...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleOptionButton.StyleOptio...
    """

    Type: ... = PySide.QtGui.QStyleOptionButton.StyleOptionType.Type
    """
    """

    Version: ... = PySide.QtGui.QStyleOptionButton.StyleOptionVersion.Version
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleOptionComboBox(QStyleOptionComplex):
    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleOptionComboBox.StyleOption...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleOptionComboBox.StyleOpt...
    """

    Type: ... = PySide.QtGui.QStyleOptionComboBox.StyleOptionType.Type
    """
    """

    Version: ... = PySide.QtGui.QStyleOptionComboBox.StyleOptionVersion.Version
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleOptionComplex(QStyleOption):
    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleOptionComplex.StyleOptionT...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleOptionComplex.StyleOpti...
    """

    Type: ... = PySide.QtGui.QStyleOptionComplex.StyleOptionType.Type
    """
    """

    Version: ... = PySide.QtGui.QStyleOptionComplex.StyleOptionVersion.Version
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleOptionDockWidget(QStyleOption):
    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleOptionDockWidget.StyleOpti...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleOptionDockWidget.StyleO...
    """

    Type: ... = PySide.QtGui.QStyleOptionDockWidget.StyleOptionType.Type
    """
    """

    Version: ...
    """
    PySide.QtGui.QStyleOptionDockWidget.StyleOptionVersion.Versi...
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleOptionFocusRect(QStyleOption):
    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleOptionFocusRect.StyleOptio...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleOptionFocusRect.StyleOp...
    """

    Type: ... = PySide.QtGui.QStyleOptionFocusRect.StyleOptionType.Type
    """
    """

    Version: ...
    """
    PySide.QtGui.QStyleOptionFocusRect.StyleOptionVersion.Versio...
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleOptionFrame(QStyleOption):
    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleOptionFrame.StyleOptionTyp...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleOptionFrame.StyleOption...
    """

    Type: ... = PySide.QtGui.QStyleOptionFrame.StyleOptionType.Type
    """
    """

    Version: ... = PySide.QtGui.QStyleOptionFrame.StyleOptionVersion.Version
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleOptionGraphicsItem(QStyleOption):
    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleOptionGraphicsItem.StyleOp...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleOptionGraphicsItem.Styl...
    """

    Type: ... = PySide.QtGui.QStyleOptionGraphicsItem.StyleOptionType.Type
    """
    """

    Version: ...
    """
    PySide.QtGui.QStyleOptionGraphicsItem.StyleOptionVersion.Ver...
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    @staticmethod
    def levelOfDetailFromTransform(*args, **kwargs):
        """ """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleOptionGroupBox(QStyleOptionComplex):
    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleOptionGroupBox.StyleOption...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleOptionGroupBox.StyleOpt...
    """

    Type: ... = PySide.QtGui.QStyleOptionGroupBox.StyleOptionType.Type
    """
    """

    Version: ... = PySide.QtGui.QStyleOptionGroupBox.StyleOptionVersion.Version
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleOptionHeader(QStyleOption):
    Beginning: ... = PySide.QtGui.QStyleOptionHeader.SectionPosition.Beginning
    """
    """

    End: ... = PySide.QtGui.QStyleOptionHeader.SectionPosition.End
    """
    """

    Middle: ... = PySide.QtGui.QStyleOptionHeader.SectionPosition.Middle
    """
    """

    NextAndPreviousAreSelected: ...
    """
    PySide.QtGui.QStyleOptionHeader.SelectedP...
    """

    NextIsSelected: ...
    """
    PySide.QtGui.QStyleOptionHeader.SelectedPosition.Next...
    """

    # None: ... = PySide.QtGui.QStyleOptionHeader.SortIndicator.None

    NotAdjacent: ...
    """
    PySide.QtGui.QStyleOptionHeader.SelectedPosition.NotAdja...
    """

    OnlyOneSection: ...
    """
    PySide.QtGui.QStyleOptionHeader.SectionPosition.OnlyO...
    """

    PreviousIsSelected: ...
    """
    PySide.QtGui.QStyleOptionHeader.SelectedPosition....
    """

    SectionPosition: ...
    """
    <type 'PySide.QtGui.QStyleOptionHeader.SectionPositi...
    """

    SelectedPosition: ...
    """
    <type 'PySide.QtGui.QStyleOptionHeader.SelectedPosi...
    """

    SortDown: ... = PySide.QtGui.QStyleOptionHeader.SortIndicator.SortDown
    """
    """

    SortIndicator: ...
    """
    <type 'PySide.QtGui.QStyleOptionHeader.SortIndicator'>
    """

    SortUp: ... = PySide.QtGui.QStyleOptionHeader.SortIndicator.SortUp
    """
    """

    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleOptionHeader.StyleOptionTy...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleOptionHeader.StyleOptio...
    """

    Type: ... = PySide.QtGui.QStyleOptionHeader.StyleOptionType.Type
    """
    """

    Version: ... = PySide.QtGui.QStyleOptionHeader.StyleOptionVersion.Version
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleOptionMenuItem(QStyleOption):
    CheckType: ...
    """
    <type 'PySide.QtGui.QStyleOptionMenuItem.CheckType'>
    """

    DefaultItem: ...
    """
    PySide.QtGui.QStyleOptionMenuItem.MenuItemType.DefaultIt...
    """

    EmptyArea: ... = PySide.QtGui.QStyleOptionMenuItem.MenuItemType.EmptyArea
    """
    """

    Exclusive: ... = PySide.QtGui.QStyleOptionMenuItem.CheckType.Exclusive
    """
    """

    Margin: ... = PySide.QtGui.QStyleOptionMenuItem.MenuItemType.Margin
    """
    """

    MenuItemType: ...
    """
    <type 'PySide.QtGui.QStyleOptionMenuItem.MenuItemType'>
    """

    NonExclusive: ...
    """
    PySide.QtGui.QStyleOptionMenuItem.CheckType.NonExclusiv...
    """

    Normal: ... = PySide.QtGui.QStyleOptionMenuItem.MenuItemType.Normal
    """
    """

    NotCheckable: ...
    """
    PySide.QtGui.QStyleOptionMenuItem.CheckType.NotCheckabl...
    """

    Scroller: ... = PySide.QtGui.QStyleOptionMenuItem.MenuItemType.Scroller
    """
    """

    Separator: ... = PySide.QtGui.QStyleOptionMenuItem.MenuItemType.Separator
    """
    """

    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleOptionMenuItem.StyleOption...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleOptionMenuItem.StyleOpt...
    """

    SubMenu: ... = PySide.QtGui.QStyleOptionMenuItem.MenuItemType.SubMenu
    """
    """

    TearOff: ... = PySide.QtGui.QStyleOptionMenuItem.MenuItemType.TearOff
    """
    """

    Type: ... = PySide.QtGui.QStyleOptionMenuItem.StyleOptionType.Type
    """
    """

    Version: ... = PySide.QtGui.QStyleOptionMenuItem.StyleOptionVersion.Version
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleOptionProgressBar(QStyleOption):
    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleOptionProgressBar.StyleOpt...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleOptionProgressBar.Style...
    """

    Type: ... = PySide.QtGui.QStyleOptionProgressBar.StyleOptionType.Type
    """
    """

    Version: ...
    """
    PySide.QtGui.QStyleOptionProgressBar.StyleOptionVersion.Vers...
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleOptionRubberBand(QStyleOption):
    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleOptionRubberBand.StyleOpti...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleOptionRubberBand.StyleO...
    """

    Type: ... = PySide.QtGui.QStyleOptionRubberBand.StyleOptionType.Type
    """
    """

    Version: ...
    """
    PySide.QtGui.QStyleOptionRubberBand.StyleOptionVersion.Versi...
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleOptionSizeGrip(QStyleOptionComplex):
    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleOptionSizeGrip.StyleOption...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleOptionSizeGrip.StyleOpt...
    """

    Type: ... = PySide.QtGui.QStyleOptionSizeGrip.StyleOptionType.Type
    """
    """

    Version: ... = PySide.QtGui.QStyleOptionSizeGrip.StyleOptionVersion.Version
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleOptionSlider(QStyleOptionComplex):
    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleOptionSlider.StyleOptionTy...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleOptionSlider.StyleOptio...
    """

    Type: ... = PySide.QtGui.QStyleOptionSlider.StyleOptionType.Type
    """
    """

    Version: ... = PySide.QtGui.QStyleOptionSlider.StyleOptionVersion.Version
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleOptionSpinBox(QStyleOptionComplex):
    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleOptionSpinBox.StyleOptionT...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleOptionSpinBox.StyleOpti...
    """

    Type: ... = PySide.QtGui.QStyleOptionSpinBox.StyleOptionType.Type
    """
    """

    Version: ... = PySide.QtGui.QStyleOptionSpinBox.StyleOptionVersion.Version
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleOptionTab(QStyleOption):
    Beginning: ... = PySide.QtGui.QStyleOptionTab.TabPosition.Beginning
    """
    """

    CornerWidget: ...
    """
    <type 'PySide.QtGui.QStyleOptionTab.CornerWidget'>
    """

    CornerWidgets: ...
    """
    <type 'CornerWidgets'>
    """

    End: ... = PySide.QtGui.QStyleOptionTab.TabPosition.End
    """
    """

    LeftCornerWidget: ...
    """
    PySide.QtGui.QStyleOptionTab.CornerWidget.LeftCorne...
    """

    Middle: ... = PySide.QtGui.QStyleOptionTab.TabPosition.Middle
    """
    """

    NextIsSelected: ...
    """
    PySide.QtGui.QStyleOptionTab.SelectedPosition.NextIsS...
    """

    NoCornerWidgets: ...
    """
    PySide.QtGui.QStyleOptionTab.CornerWidget.NoCornerWi...
    """

    NotAdjacent: ...
    """
    PySide.QtGui.QStyleOptionTab.SelectedPosition.NotAdjacen...
    """

    OnlyOneTab: ... = PySide.QtGui.QStyleOptionTab.TabPosition.OnlyOneTab
    """
    """

    PreviousIsSelected: ...
    """
    PySide.QtGui.QStyleOptionTab.SelectedPosition.Pre...
    """

    RightCornerWidget: ...
    """
    PySide.QtGui.QStyleOptionTab.CornerWidget.RightCor...
    """

    SelectedPosition: ...
    """
    <type 'PySide.QtGui.QStyleOptionTab.SelectedPositio...
    """

    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleOptionTab.StyleOptionType'...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleOptionTab.StyleOptionVe...
    """

    TabPosition: ...
    """
    <type 'PySide.QtGui.QStyleOptionTab.TabPosition'>
    """

    Type: ... = PySide.QtGui.QStyleOptionTab.StyleOptionType.Type
    """
    """

    Version: ... = PySide.QtGui.QStyleOptionTab.StyleOptionVersion.Version
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleOptionTabBarBase(QStyleOption):
    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleOptionTabBarBase.StyleOpti...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleOptionTabBarBase.StyleO...
    """

    Type: ... = PySide.QtGui.QStyleOptionTabBarBase.StyleOptionType.Type
    """
    """

    Version: ...
    """
    PySide.QtGui.QStyleOptionTabBarBase.StyleOptionVersion.Versi...
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleOptionTabWidgetFrame(QStyleOption):
    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleOptionTabWidgetFrame.Style...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleOptionTabWidgetFrame.St...
    """

    Type: ... = PySide.QtGui.QStyleOptionTabWidgetFrame.StyleOptionType.Type
    """
    """

    Version: ...
    """
    PySide.QtGui.QStyleOptionTabWidgetFrame.StyleOptionVersion.V...
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleOptionTitleBar(QStyleOptionComplex):
    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleOptionTitleBar.StyleOption...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleOptionTitleBar.StyleOpt...
    """

    Type: ... = PySide.QtGui.QStyleOptionTitleBar.StyleOptionType.Type
    """
    """

    Version: ... = PySide.QtGui.QStyleOptionTitleBar.StyleOptionVersion.Version
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleOptionToolBar(QStyleOption):
    Beginning: ... = PySide.QtGui.QStyleOptionToolBar.ToolBarPosition.Beginning
    """
    """

    End: ... = PySide.QtGui.QStyleOptionToolBar.ToolBarPosition.End
    """
    """

    Middle: ... = PySide.QtGui.QStyleOptionToolBar.ToolBarPosition.Middle
    """
    """

    Movable: ... = PySide.QtGui.QStyleOptionToolBar.ToolBarFeature.Movable
    """
    """

    # None: ... = PySide.QtGui.QStyleOptionToolBar.ToolBarFeature.None

    OnlyOne: ... = PySide.QtGui.QStyleOptionToolBar.ToolBarPosition.OnlyOne
    """
    """

    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleOptionToolBar.StyleOptionT...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleOptionToolBar.StyleOpti...
    """

    ToolBarFeature: ...
    """
    <type 'PySide.QtGui.QStyleOptionToolBar.ToolBarFeatur...
    """

    ToolBarFeatures: ...
    """
    <type 'ToolBarFeatures'>
    """

    ToolBarPosition: ...
    """
    <type 'PySide.QtGui.QStyleOptionToolBar.ToolBarPosit...
    """

    Type: ... = PySide.QtGui.QStyleOptionToolBar.StyleOptionType.Type
    """
    """

    Version: ... = PySide.QtGui.QStyleOptionToolBar.StyleOptionVersion.Version
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleOptionToolBox(QStyleOption):
    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleOptionToolBox.StyleOptionT...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleOptionToolBox.StyleOpti...
    """

    Type: ... = PySide.QtGui.QStyleOptionToolBox.StyleOptionType.Type
    """
    """

    Version: ... = PySide.QtGui.QStyleOptionToolBox.StyleOptionVersion.Version
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleOptionToolButton(QStyleOptionComplex):
    Arrow: ... = PySide.QtGui.QStyleOptionToolButton.ToolButtonFeature.Arrow
    """
    """

    HasMenu: ...
    """
    PySide.QtGui.QStyleOptionToolButton.ToolButtonFeature.HasMen...
    """

    Menu: ... = PySide.QtGui.QStyleOptionToolButton.ToolButtonFeature.Menu
    """
    """

    MenuButtonPopup: ...
    """
    PySide.QtGui.QStyleOptionToolButton.ToolButtonFeatur...
    """

    # None: ... = PySide.QtGui.QStyleOptionToolButton.ToolButtonFeature.None
    """
    """

    PopupDelay: ...
    """
    PySide.QtGui.QStyleOptionToolButton.ToolButtonFeature.Pop...
    """

    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleOptionToolButton.StyleOpti...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleOptionToolButton.StyleO...
    """

    ToolButtonFeature: ...
    """
    <type 'PySide.QtGui.QStyleOptionToolButton.ToolBut...
    """

    ToolButtonFeatures: ...
    """
    <type 'ToolButtonFeatures'>
    """

    Type: ... = PySide.QtGui.QStyleOptionToolButton.StyleOptionType.Type
    """
    """

    Version: ...
    """
    PySide.QtGui.QStyleOptionToolButton.StyleOptionVersion.Versi...
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStyleOptionViewItem(QStyleOption):
    Bottom: ... = PySide.QtGui.QStyleOptionViewItem.Position.Bottom
    """
    """

    Left: ... = PySide.QtGui.QStyleOptionViewItem.Position.Left
    """
    """

    Position: ...
    """
    <type 'PySide.QtGui.QStyleOptionViewItem.Position'>
    """

    Right: ... = PySide.QtGui.QStyleOptionViewItem.Position.Right
    """
    """

    StyleOptionType: ...
    """
    <type 'PySide.QtGui.QStyleOptionViewItem.StyleOption...
    """

    StyleOptionVersion: ...
    """
    <type 'PySide.QtGui.QStyleOptionViewItem.StyleOpt...
    """

    Top: ... = PySide.QtGui.QStyleOptionViewItem.Position.Top
    """
    """

    Type: ... = PySide.QtGui.QStyleOptionViewItem.StyleOptionType.Type
    """
    """

    Version: ... = PySide.QtGui.QStyleOptionViewItem.StyleOptionVersion.Version
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __copy__(self, *args, **kwargs):
        """ """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QStylePainter(QPainter):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def begin(self, *args, **kwargs):
        """ """
        ...
    def drawComplexControl(self, *args, **kwargs):
        """ """
        ...
    def drawControl(self, *args, **kwargs):
        """ """
        ...
    def drawItemPixmap(self, *args, **kwargs):
        """ """
        ...
    def drawItemText(self, *args, **kwargs):
        """ """
        ...
    def drawPrimitive(self, *args, **kwargs):
        """ """
        ...
    def style(self, *args, **kwargs):
        """ """
        ...
    ...

class QStyledItemDelegate(QAbstractItemDelegate):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def createEditor(self, *args, **kwargs):
        """ """
        ...
    def displayText(self, *args, **kwargs):
        """ """
        ...
    def editorEvent(self, *args, **kwargs):
        """ """
        ...
    def eventFilter(self, *args, **kwargs):
        """ """
        ...
    def initStyleOption(self, *args, **kwargs):
        """ """
        ...
    def itemEditorFactory(self, *args, **kwargs):
        """ """
        ...
    def paint(self, *args, **kwargs):
        """ """
        ...
    def setEditorData(self, *args, **kwargs):
        """ """
        ...
    def setItemEditorFactory(self, *args, **kwargs):
        """ """
        ...
    def setModelData(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def updateEditorGeometry(self, *args, **kwargs):
        """ """
        ...
    ...

class QSwipeGesture(QGesture):
    Down: ... = PySide.QtGui.QSwipeGesture.SwipeDirection.Down
    """
    """

    Left: ... = PySide.QtGui.QSwipeGesture.SwipeDirection.Left
    """
    """

    NoDirection: ... = PySide.QtGui.QSwipeGesture.SwipeDirection.NoDirection
    """
    """

    Right: ... = PySide.QtGui.QSwipeGesture.SwipeDirection.Right
    """
    """

    SwipeDirection: ...
    """
    <type 'PySide.QtGui.QSwipeGesture.SwipeDirection'>
    """

    Up: ... = PySide.QtGui.QSwipeGesture.SwipeDirection.Up
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def horizontalDirection(self, *args, **kwargs):
        """ """
        ...
    def setSwipeAngle(self, *args, **kwargs):
        """ """
        ...
    def swipeAngle(self, *args, **kwargs):
        """ """
        ...
    def verticalDirection(self, *args, **kwargs):
        """ """
        ...
    ...

class QSystemTrayIcon(PySide.QtCore.QObject):
    ActivationReason: ...
    """
    <type 'PySide.QtGui.QSystemTrayIcon.ActivationReaso...
    """

    Context: ... = PySide.QtGui.QSystemTrayIcon.ActivationReason.Context
    """
    """

    Critical: ... = PySide.QtGui.QSystemTrayIcon.MessageIcon.Critical
    """
    """

    DoubleClick: ...
    """
    PySide.QtGui.QSystemTrayIcon.ActivationReason.DoubleClic...
    """

    Information: ... = PySide.QtGui.QSystemTrayIcon.MessageIcon.Information
    """
    """

    MessageIcon: ...
    """
    <type 'PySide.QtGui.QSystemTrayIcon.MessageIcon'>
    """

    MiddleClick: ...
    """
    PySide.QtGui.QSystemTrayIcon.ActivationReason.MiddleClic...
    """

    NoIcon: ... = PySide.QtGui.QSystemTrayIcon.MessageIcon.NoIcon
    """
    """

    Trigger: ... = PySide.QtGui.QSystemTrayIcon.ActivationReason.Trigger
    """
    """

    Unknown: ... = PySide.QtGui.QSystemTrayIcon.ActivationReason.Unknown
    """
    """

    Warning: ... = PySide.QtGui.QSystemTrayIcon.MessageIcon.Warning
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    activated: ...
    """
    Signal
    """

    messageClicked: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    @staticmethod
    def isSystemTrayAvailable(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def supportsMessages(*args, **kwargs):
        """ """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def contextMenu(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def geometry(self, *args, **kwargs):
        """ """
        ...
    def hide(self, *args, **kwargs):
        """ """
        ...
    def icon(self, *args, **kwargs):
        """ """
        ...
    def isVisible(self, *args, **kwargs):
        """ """
        ...
    def setContextMenu(self, *args, **kwargs):
        """ """
        ...
    def setIcon(self, *args, **kwargs):
        """ """
        ...
    def setToolTip(self, *args, **kwargs):
        """ """
        ...
    def setVisible(self, *args, **kwargs):
        """ """
        ...
    def show(self, *args, **kwargs):
        """ """
        ...
    def showMessage(self, *args, **kwargs):
        """ """
        ...
    def toolTip(self, *args, **kwargs):
        """ """
        ...
    ...

class QTabBar(QWidget):
    ButtonPosition: ...
    """
    <type 'PySide.QtGui.QTabBar.ButtonPosition'>
    """

    LeftSide: ... = PySide.QtGui.QTabBar.ButtonPosition.LeftSide
    """
    """

    RightSide: ... = PySide.QtGui.QTabBar.ButtonPosition.RightSide
    """
    """

    RoundedEast: ... = PySide.QtGui.QTabBar.Shape.RoundedEast
    """
    """

    RoundedNorth: ... = PySide.QtGui.QTabBar.Shape.RoundedNorth
    """
    """

    RoundedSouth: ... = PySide.QtGui.QTabBar.Shape.RoundedSouth
    """
    """

    RoundedWest: ... = PySide.QtGui.QTabBar.Shape.RoundedWest
    """
    """

    SelectLeftTab: ... = PySide.QtGui.QTabBar.SelectionBehavior.SelectLeftTab
    """
    """

    SelectPreviousTab: ...
    """
    PySide.QtGui.QTabBar.SelectionBehavior.SelectPrevi...
    """

    SelectRightTab: ... = PySide.QtGui.QTabBar.SelectionBehavior.SelectRightTab
    """
    """

    SelectionBehavior: ...
    """
    <type 'PySide.QtGui.QTabBar.SelectionBehavior'>
    """

    Shape: ...
    """
    <type 'PySide.QtGui.QTabBar.Shape'>
    """

    TriangularEast: ... = PySide.QtGui.QTabBar.Shape.TriangularEast
    """
    """

    TriangularNorth: ... = PySide.QtGui.QTabBar.Shape.TriangularNorth
    """
    """

    TriangularSouth: ... = PySide.QtGui.QTabBar.Shape.TriangularSouth
    """
    """

    TriangularWest: ... = PySide.QtGui.QTabBar.Shape.TriangularWest
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    currentChanged: ...
    """
    Signal
    """

    selected: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    tabCloseRequested: ...
    """
    Signal
    """

    tabMoved: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addTab(self, *args, **kwargs):
        """ """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def count(self, *args, **kwargs):
        """ """
        ...
    def currentIndex(self, *args, **kwargs):
        """ """
        ...
    def documentMode(self, *args, **kwargs):
        """ """
        ...
    def drawBase(self, *args, **kwargs):
        """ """
        ...
    def elideMode(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def expanding(self, *args, **kwargs):
        """ """
        ...
    def hideEvent(self, *args, **kwargs):
        """ """
        ...
    def iconSize(self, *args, **kwargs):
        """ """
        ...
    def initStyleOption(self, *args, **kwargs):
        """ """
        ...
    def insertTab(self, *args, **kwargs):
        """ """
        ...
    def isMovable(self, *args, **kwargs):
        """ """
        ...
    def isTabEnabled(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def minimumSizeHint(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def moveTab(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def removeTab(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def selectionBehaviorOnRemove(self, *args, **kwargs):
        """ """
        ...
    def setCurrentIndex(self, *args, **kwargs):
        """ """
        ...
    def setDocumentMode(self, *args, **kwargs):
        """ """
        ...
    def setDrawBase(self, *args, **kwargs):
        """ """
        ...
    def setElideMode(self, *args, **kwargs):
        """ """
        ...
    def setExpanding(self, *args, **kwargs):
        """ """
        ...
    def setIconSize(self, *args, **kwargs):
        """ """
        ...
    def setMovable(self, *args, **kwargs):
        """ """
        ...
    def setSelectionBehaviorOnRemove(self, *args, **kwargs):
        """ """
        ...
    def setShape(self, *args, **kwargs):
        """ """
        ...
    def setTabButton(self, *args, **kwargs):
        """ """
        ...
    def setTabData(self, *args, **kwargs):
        """ """
        ...
    def setTabEnabled(self, *args, **kwargs):
        """ """
        ...
    def setTabIcon(self, *args, **kwargs):
        """ """
        ...
    def setTabText(self, *args, **kwargs):
        """ """
        ...
    def setTabTextColor(self, *args, **kwargs):
        """ """
        ...
    def setTabToolTip(self, *args, **kwargs):
        """ """
        ...
    def setTabWhatsThis(self, *args, **kwargs):
        """ """
        ...
    def setTabsClosable(self, *args, **kwargs):
        """ """
        ...
    def setUsesScrollButtons(self, *args, **kwargs):
        """ """
        ...
    def shape(self, *args, **kwargs):
        """ """
        ...
    def showEvent(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def tabAt(self, *args, **kwargs):
        """ """
        ...
    def tabButton(self, *args, **kwargs):
        """ """
        ...
    def tabData(self, *args, **kwargs):
        """ """
        ...
    def tabIcon(self, *args, **kwargs):
        """ """
        ...
    def tabInserted(self, *args, **kwargs):
        """ """
        ...
    def tabLayoutChange(self, *args, **kwargs):
        """ """
        ...
    def tabRect(self, *args, **kwargs):
        """ """
        ...
    def tabRemoved(self, *args, **kwargs):
        """ """
        ...
    def tabSizeHint(self, *args, **kwargs):
        """ """
        ...
    def tabText(self, *args, **kwargs):
        """ """
        ...
    def tabTextColor(self, *args, **kwargs):
        """ """
        ...
    def tabToolTip(self, *args, **kwargs):
        """ """
        ...
    def tabWhatsThis(self, *args, **kwargs):
        """ """
        ...
    def tabsClosable(self, *args, **kwargs):
        """ """
        ...
    def usesScrollButtons(self, *args, **kwargs):
        """ """
        ...
    def wheelEvent(self, *args, **kwargs):
        """ """
        ...
    ...

class QTabWidget(QWidget):
    East: ... = PySide.QtGui.QTabWidget.TabPosition.East
    """
    """

    North: ... = PySide.QtGui.QTabWidget.TabPosition.North
    """
    """

    Rounded: ... = PySide.QtGui.QTabWidget.TabShape.Rounded
    """
    """

    South: ... = PySide.QtGui.QTabWidget.TabPosition.South
    """
    """

    TabPosition: ...
    """
    <type 'PySide.QtGui.QTabWidget.TabPosition'>
    """

    TabShape: ...
    """
    <type 'PySide.QtGui.QTabWidget.TabShape'>
    """

    Triangular: ... = PySide.QtGui.QTabWidget.TabShape.Triangular
    """
    """

    West: ... = PySide.QtGui.QTabWidget.TabPosition.West
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    currentChanged: ...
    """
    Signal
    """

    selected: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    tabCloseRequested: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addTab(self, *args, **kwargs):
        """ """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def clear(self, *args, **kwargs):
        """ """
        ...
    def cornerWidget(self, *args, **kwargs):
        """ """
        ...
    def count(self, *args, **kwargs):
        """ """
        ...
    def currentIndex(self, *args, **kwargs):
        """ """
        ...
    def currentWidget(self, *args, **kwargs):
        """ """
        ...
    def documentMode(self, *args, **kwargs):
        """ """
        ...
    def elideMode(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def heightForWidth(self, *args, **kwargs):
        """ """
        ...
    def iconSize(self, *args, **kwargs):
        """ """
        ...
    def indexOf(self, *args, **kwargs):
        """ """
        ...
    def initStyleOption(self, *args, **kwargs):
        """ """
        ...
    def insertTab(self, *args, **kwargs):
        """ """
        ...
    def isMovable(self, *args, **kwargs):
        """ """
        ...
    def isTabEnabled(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def minimumSizeHint(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def removeTab(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def setCornerWidget(self, *args, **kwargs):
        """ """
        ...
    def setCurrentIndex(self, *args, **kwargs):
        """ """
        ...
    def setCurrentWidget(self, *args, **kwargs):
        """ """
        ...
    def setDocumentMode(self, *args, **kwargs):
        """ """
        ...
    def setElideMode(self, *args, **kwargs):
        """ """
        ...
    def setIconSize(self, *args, **kwargs):
        """ """
        ...
    def setMovable(self, *args, **kwargs):
        """ """
        ...
    def setTabBar(self, *args, **kwargs):
        """ """
        ...
    def setTabEnabled(self, *args, **kwargs):
        """ """
        ...
    def setTabIcon(self, *args, **kwargs):
        """ """
        ...
    def setTabPosition(self, *args, **kwargs):
        """ """
        ...
    def setTabShape(self, *args, **kwargs):
        """ """
        ...
    def setTabText(self, *args, **kwargs):
        """ """
        ...
    def setTabToolTip(self, *args, **kwargs):
        """ """
        ...
    def setTabWhatsThis(self, *args, **kwargs):
        """ """
        ...
    def setTabsClosable(self, *args, **kwargs):
        """ """
        ...
    def setUsesScrollButtons(self, *args, **kwargs):
        """ """
        ...
    def showEvent(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def tabBar(self, *args, **kwargs):
        """ """
        ...
    def tabIcon(self, *args, **kwargs):
        """ """
        ...
    def tabInserted(self, *args, **kwargs):
        """ """
        ...
    def tabPosition(self, *args, **kwargs):
        """ """
        ...
    def tabRemoved(self, *args, **kwargs):
        """ """
        ...
    def tabShape(self, *args, **kwargs):
        """ """
        ...
    def tabText(self, *args, **kwargs):
        """ """
        ...
    def tabToolTip(self, *args, **kwargs):
        """ """
        ...
    def tabWhatsThis(self, *args, **kwargs):
        """ """
        ...
    def tabsClosable(self, *args, **kwargs):
        """ """
        ...
    def usesScrollButtons(self, *args, **kwargs):
        """ """
        ...
    def widget(self, *args, **kwargs):
        """ """
        ...
    ...

class QTableView(QAbstractItemView):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def clearSpans(self, *args, **kwargs):
        """ """
        ...
    def columnAt(self, *args, **kwargs):
        """ """
        ...
    def columnCountChanged(self, *args, **kwargs):
        """ """
        ...
    def columnMoved(self, *args, **kwargs):
        """ """
        ...
    def columnResized(self, *args, **kwargs):
        """ """
        ...
    def columnSpan(self, *args, **kwargs):
        """ """
        ...
    def columnViewportPosition(self, *args, **kwargs):
        """ """
        ...
    def columnWidth(self, *args, **kwargs):
        """ """
        ...
    def currentChanged(self, *args, **kwargs):
        """ """
        ...
    def doItemsLayout(self, *args, **kwargs):
        """ """
        ...
    def gridStyle(self, *args, **kwargs):
        """ """
        ...
    def hideColumn(self, *args, **kwargs):
        """ """
        ...
    def hideRow(self, *args, **kwargs):
        """ """
        ...
    def horizontalHeader(self, *args, **kwargs):
        """ """
        ...
    def horizontalOffset(self, *args, **kwargs):
        """ """
        ...
    def horizontalScrollbarAction(self, *args, **kwargs):
        """ """
        ...
    def indexAt(self, *args, **kwargs):
        """ """
        ...
    def isColumnHidden(self, *args, **kwargs):
        """ """
        ...
    def isCornerButtonEnabled(self, *args, **kwargs):
        """ """
        ...
    def isIndexHidden(self, *args, **kwargs):
        """ """
        ...
    def isRowHidden(self, *args, **kwargs):
        """ """
        ...
    def isSortingEnabled(self, *args, **kwargs):
        """ """
        ...
    def moveCursor(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def resizeColumnToContents(self, *args, **kwargs):
        """ """
        ...
    def resizeColumnsToContents(self, *args, **kwargs):
        """ """
        ...
    def resizeRowToContents(self, *args, **kwargs):
        """ """
        ...
    def resizeRowsToContents(self, *args, **kwargs):
        """ """
        ...
    def rowAt(self, *args, **kwargs):
        """ """
        ...
    def rowCountChanged(self, *args, **kwargs):
        """ """
        ...
    def rowHeight(self, *args, **kwargs):
        """ """
        ...
    def rowMoved(self, *args, **kwargs):
        """ """
        ...
    def rowResized(self, *args, **kwargs):
        """ """
        ...
    def rowSpan(self, *args, **kwargs):
        """ """
        ...
    def rowViewportPosition(self, *args, **kwargs):
        """ """
        ...
    def scrollContentsBy(self, *args, **kwargs):
        """ """
        ...
    def scrollTo(self, *args, **kwargs):
        """ """
        ...
    def selectColumn(self, *args, **kwargs):
        """ """
        ...
    def selectRow(self, *args, **kwargs):
        """ """
        ...
    def selectedIndexes(self, *args, **kwargs):
        """ """
        ...
    def selectionChanged(self, *args, **kwargs):
        """ """
        ...
    def setColumnHidden(self, *args, **kwargs):
        """ """
        ...
    def setColumnWidth(self, *args, **kwargs):
        """ """
        ...
    def setCornerButtonEnabled(self, *args, **kwargs):
        """ """
        ...
    def setGridStyle(self, *args, **kwargs):
        """ """
        ...
    def setHorizontalHeader(self, *args, **kwargs):
        """ """
        ...
    def setModel(self, *args, **kwargs):
        """ """
        ...
    def setRootIndex(self, *args, **kwargs):
        """ """
        ...
    def setRowHeight(self, *args, **kwargs):
        """ """
        ...
    def setRowHidden(self, *args, **kwargs):
        """ """
        ...
    def setSelection(self, *args, **kwargs):
        """ """
        ...
    def setSelectionModel(self, *args, **kwargs):
        """ """
        ...
    def setShowGrid(self, *args, **kwargs):
        """ """
        ...
    def setSortingEnabled(self, *args, **kwargs):
        """ """
        ...
    def setSpan(self, *args, **kwargs):
        """ """
        ...
    def setVerticalHeader(self, *args, **kwargs):
        """ """
        ...
    def setWordWrap(self, *args, **kwargs):
        """ """
        ...
    def showColumn(self, *args, **kwargs):
        """ """
        ...
    def showGrid(self, *args, **kwargs):
        """ """
        ...
    def showRow(self, *args, **kwargs):
        """ """
        ...
    def sizeHintForColumn(self, *args, **kwargs):
        """ """
        ...
    def sizeHintForRow(self, *args, **kwargs):
        """ """
        ...
    def sortByColumn(self, *args, **kwargs):
        """ """
        ...
    def timerEvent(self, *args, **kwargs):
        """ """
        ...
    def updateGeometries(self, *args, **kwargs):
        """ """
        ...
    def verticalHeader(self, *args, **kwargs):
        """ """
        ...
    def verticalOffset(self, *args, **kwargs):
        """ """
        ...
    def verticalScrollbarAction(self, *args, **kwargs):
        """ """
        ...
    def viewOptions(self, *args, **kwargs):
        """ """
        ...
    def visualRect(self, *args, **kwargs):
        """ """
        ...
    def visualRegionForSelection(self, *args, **kwargs):
        """ """
        ...
    def wordWrap(self, *args, **kwargs):
        """ """
        ...
    ...

class QTableWidget(QTableView):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    cellActivated: ...
    """
    Signal
    """

    cellChanged: ...
    """
    Signal
    """

    cellClicked: ...
    """
    Signal
    """

    cellDoubleClicked: ...
    """
    Signal
    """

    cellEntered: ...
    """
    Signal
    """

    cellPressed: ...
    """
    Signal
    """

    currentCellChanged: ...
    """
    Signal
    """

    currentItemChanged: ...
    """
    Signal
    """

    itemActivated: ...
    """
    Signal
    """

    itemChanged: ...
    """
    Signal
    """

    itemClicked: ...
    """
    Signal
    """

    itemDoubleClicked: ...
    """
    Signal
    """

    itemEntered: ...
    """
    Signal
    """

    itemPressed: ...
    """
    Signal
    """

    itemSelectionChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def cellWidget(self, *args, **kwargs):
        """ """
        ...
    def clear(self, *args, **kwargs):
        """ """
        ...
    def clearContents(self, *args, **kwargs):
        """ """
        ...
    def closePersistentEditor(self, *args, **kwargs):
        """ """
        ...
    def column(self, *args, **kwargs):
        """ """
        ...
    def columnCount(self, *args, **kwargs):
        """ """
        ...
    def currentColumn(self, *args, **kwargs):
        """ """
        ...
    def currentItem(self, *args, **kwargs):
        """ """
        ...
    def currentRow(self, *args, **kwargs):
        """ """
        ...
    def dropEvent(self, *args, **kwargs):
        """ """
        ...
    def dropMimeData(self, *args, **kwargs):
        """ """
        ...
    def editItem(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def findItems(self, *args, **kwargs):
        """ """
        ...
    def horizontalHeaderItem(self, *args, **kwargs):
        """ """
        ...
    def indexFromItem(self, *args, **kwargs):
        """ """
        ...
    def insertColumn(self, *args, **kwargs):
        """ """
        ...
    def insertRow(self, *args, **kwargs):
        """ """
        ...
    def isSortingEnabled(self, *args, **kwargs):
        """ """
        ...
    def item(self, *args, **kwargs):
        """ """
        ...
    def itemAt(self, *args, **kwargs):
        """ """
        ...
    def itemFromIndex(self, *args, **kwargs):
        """ """
        ...
    def itemPrototype(self, *args, **kwargs):
        """ """
        ...
    def items(self, *args, **kwargs):
        """ """
        ...
    def mimeData(self, *args, **kwargs):
        """ """
        ...
    def mimeTypes(self, *args, **kwargs):
        """ """
        ...
    def openPersistentEditor(self, *args, **kwargs):
        """ """
        ...
    def removeCellWidget(self, *args, **kwargs):
        """ """
        ...
    def removeColumn(self, *args, **kwargs):
        """ """
        ...
    def removeRow(self, *args, **kwargs):
        """ """
        ...
    def row(self, *args, **kwargs):
        """ """
        ...
    def rowCount(self, *args, **kwargs):
        """ """
        ...
    def scrollToItem(self, *args, **kwargs):
        """ """
        ...
    def selectedItems(self, *args, **kwargs):
        """ """
        ...
    def selectedRanges(self, *args, **kwargs):
        """ """
        ...
    def setCellWidget(self, *args, **kwargs):
        """ """
        ...
    def setColumnCount(self, *args, **kwargs):
        """ """
        ...
    def setCurrentCell(self, *args, **kwargs):
        """ """
        ...
    def setCurrentItem(self, *args, **kwargs):
        """ """
        ...
    def setHorizontalHeaderItem(self, *args, **kwargs):
        """ """
        ...
    def setHorizontalHeaderLabels(self, *args, **kwargs):
        """ """
        ...
    def setItem(self, *args, **kwargs):
        """ """
        ...
    def setItemPrototype(self, *args, **kwargs):
        """ """
        ...
    def setModel(self, *args, **kwargs):
        """ """
        ...
    def setRangeSelected(self, *args, **kwargs):
        """ """
        ...
    def setRowCount(self, *args, **kwargs):
        """ """
        ...
    def setSortingEnabled(self, *args, **kwargs):
        """ """
        ...
    def setVerticalHeaderItem(self, *args, **kwargs):
        """ """
        ...
    def setVerticalHeaderLabels(self, *args, **kwargs):
        """ """
        ...
    def sortItems(self, *args, **kwargs):
        """ """
        ...
    def supportedDropActions(self, *args, **kwargs):
        """ """
        ...
    def takeHorizontalHeaderItem(self, *args, **kwargs):
        """ """
        ...
    def takeItem(self, *args, **kwargs):
        """ """
        ...
    def takeVerticalHeaderItem(self, *args, **kwargs):
        """ """
        ...
    def verticalHeaderItem(self, *args, **kwargs):
        """ """
        ...
    def visualColumn(self, *args, **kwargs):
        """ """
        ...
    def visualItemRect(self, *args, **kwargs):
        """ """
        ...
    def visualRow(self, *args, **kwargs):
        """ """
        ...
    ...

class QTableWidgetItem(Shiboken.Object):
    ItemType: ...
    """
    <type 'PySide.QtGui.QTableWidgetItem.ItemType'>
    """

    Type: ... = PySide.QtGui.QTableWidgetItem.ItemType.Type
    """
    """

    UserType: ... = PySide.QtGui.QTableWidgetItem.ItemType.UserType
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __eq__(self, *args, **kwargs):
        """
        x.__eq__(y) <==> x==y
        """
        ...
    def __ge__(self, *args, **kwargs):
        """
        x.__ge__(y) <==> x>=y
        """
        ...
    def __gt__(self, *args, **kwargs):
        """
        x.__gt__(y) <==> x>y
        """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def __le__(self, *args, **kwargs):
        """
        x.__le__(y) <==> x<=y
        """
        ...
    def __lshift__(self, *args, **kwargs):
        """
        x.__lshift__(y) <==> x<<y
        """
        ...
    def __lt__(self, *args, **kwargs):
        """
        x.__lt__(y) <==> x<y
        """
        ...
    def __ne__(self, *args, **kwargs):
        """
        x.__ne__(y) <==> x!=y
        """
        ...
    def __rlshift__(self, *args, **kwargs):
        """
        x.__rlshift__(y) <==> y<<x
        """
        ...
    def __rrshift__(self, *args, **kwargs):
        """
        x.__rrshift__(y) <==> y>>x
        """
        ...
    def __rshift__(self, *args, **kwargs):
        """
        x.__rshift__(y) <==> x>>y
        """
        ...
    def background(self, *args, **kwargs):
        """ """
        ...
    def checkState(self, *args, **kwargs):
        """ """
        ...
    def clone(self, *args, **kwargs):
        """ """
        ...
    def column(self, *args, **kwargs):
        """ """
        ...
    def data(self, *args, **kwargs):
        """ """
        ...
    def flags(self, *args, **kwargs):
        """ """
        ...
    def font(self, *args, **kwargs):
        """ """
        ...
    def foreground(self, *args, **kwargs):
        """ """
        ...
    def icon(self, *args, **kwargs):
        """ """
        ...
    def isSelected(self, *args, **kwargs):
        """ """
        ...
    def read(self, *args, **kwargs):
        """ """
        ...
    def row(self, *args, **kwargs):
        """ """
        ...
    def setBackground(self, *args, **kwargs):
        """ """
        ...
    def setCheckState(self, *args, **kwargs):
        """ """
        ...
    def setData(self, *args, **kwargs):
        """ """
        ...
    def setFlags(self, *args, **kwargs):
        """ """
        ...
    def setFont(self, *args, **kwargs):
        """ """
        ...
    def setForeground(self, *args, **kwargs):
        """ """
        ...
    def setIcon(self, *args, **kwargs):
        """ """
        ...
    def setSelected(self, *args, **kwargs):
        """ """
        ...
    def setSizeHint(self, *args, **kwargs):
        """ """
        ...
    def setStatusTip(self, *args, **kwargs):
        """ """
        ...
    def setText(self, *args, **kwargs):
        """ """
        ...
    def setTextAlignment(self, *args, **kwargs):
        """ """
        ...
    def setToolTip(self, *args, **kwargs):
        """ """
        ...
    def setWhatsThis(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def statusTip(self, *args, **kwargs):
        """ """
        ...
    def tableWidget(self, *args, **kwargs):
        """ """
        ...
    def text(self, *args, **kwargs):
        """ """
        ...
    def textAlignment(self, *args, **kwargs):
        """ """
        ...
    def toolTip(self, *args, **kwargs):
        """ """
        ...
    def type(self, *args, **kwargs):
        """ """
        ...
    def whatsThis(self, *args, **kwargs):
        """ """
        ...
    def write(self, *args, **kwargs):
        """ """
        ...
    ...

class QTableWidgetSelectionRange(Shiboken.Object):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __copy__(self, *args, **kwargs):
        """ """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def bottomRow(self, *args, **kwargs):
        """ """
        ...
    def columnCount(self, *args, **kwargs):
        """ """
        ...
    def leftColumn(self, *args, **kwargs):
        """ """
        ...
    def rightColumn(self, *args, **kwargs):
        """ """
        ...
    def rowCount(self, *args, **kwargs):
        """ """
        ...
    def topRow(self, *args, **kwargs):
        """ """
        ...
    ...

class QTapAndHoldGesture(QGesture):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    @staticmethod
    def setTimeout(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def timeout(*args, **kwargs):
        """ """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def position(self, *args, **kwargs):
        """ """
        ...
    def setPosition(self, *args, **kwargs):
        """ """
        ...
    ...

class QTapGesture(QGesture):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def position(self, *args, **kwargs):
        """ """
        ...
    def setPosition(self, *args, **kwargs):
        """ """
        ...
    ...

class QTextBrowser(QTextEdit):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    anchorClicked: ...
    """
    Signal
    """

    backwardAvailable: ...
    """
    Signal
    """

    forwardAvailable: ...
    """
    Signal
    """

    highlighted: ...
    """
    Signal
    """

    historyChanged: ...
    """
    Signal
    """

    sourceChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def backward(self, *args, **kwargs):
        """ """
        ...
    def backwardHistoryCount(self, *args, **kwargs):
        """ """
        ...
    def clearHistory(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def focusNextPrevChild(self, *args, **kwargs):
        """ """
        ...
    def focusOutEvent(self, *args, **kwargs):
        """ """
        ...
    def forward(self, *args, **kwargs):
        """ """
        ...
    def forwardHistoryCount(self, *args, **kwargs):
        """ """
        ...
    def historyTitle(self, *args, **kwargs):
        """ """
        ...
    def historyUrl(self, *args, **kwargs):
        """ """
        ...
    def home(self, *args, **kwargs):
        """ """
        ...
    def isBackwardAvailable(self, *args, **kwargs):
        """ """
        ...
    def isForwardAvailable(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def loadResource(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def openExternalLinks(self, *args, **kwargs):
        """ """
        ...
    def openLinks(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def reload(self, *args, **kwargs):
        """ """
        ...
    def searchPaths(self, *args, **kwargs):
        """ """
        ...
    def setOpenExternalLinks(self, *args, **kwargs):
        """ """
        ...
    def setOpenLinks(self, *args, **kwargs):
        """ """
        ...
    def setSearchPaths(self, *args, **kwargs):
        """ """
        ...
    def setSource(self, *args, **kwargs):
        """ """
        ...
    def source(self, *args, **kwargs):
        """ """
        ...
    ...

class QTextEdit(QAbstractScrollArea):
    AutoAll: ... = PySide.QtGui.QTextEdit.AutoFormattingFlag.AutoAll
    """
    """

    AutoBulletList: ...
    """
    PySide.QtGui.QTextEdit.AutoFormattingFlag.AutoBulletL...
    """

    AutoFormatting: ...
    """
    <type 'AutoFormatting'>
    """

    AutoFormattingFlag: ...
    """
    <type 'PySide.QtGui.QTextEdit.AutoFormattingFlag'...
    """

    AutoNone: ... = PySide.QtGui.QTextEdit.AutoFormattingFlag.AutoNone
    """
    """

    ExtraSelection: ...
    """
    <type 'PySide.QtGui.QTextEdit.ExtraSelection'>
    """

    FixedColumnWidth: ...
    """
    PySide.QtGui.QTextEdit.LineWrapMode.FixedColumnWidt...
    """

    FixedPixelWidth: ... = PySide.QtGui.QTextEdit.LineWrapMode.FixedPixelWidth
    """
    """

    LineWrapMode: ...
    """
    <type 'PySide.QtGui.QTextEdit.LineWrapMode'>
    """

    NoWrap: ... = PySide.QtGui.QTextEdit.LineWrapMode.NoWrap
    """
    """

    WidgetWidth: ... = PySide.QtGui.QTextEdit.LineWrapMode.WidgetWidth
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    copyAvailable: ...
    """
    Signal
    """

    currentCharFormatChanged: ...
    """
    Signal
    """

    currentColorChanged: ...
    """
    Signal
    """

    currentFontChanged: ...
    """
    Signal
    """

    cursorPositionChanged: ...
    """
    Signal
    """

    redoAvailable: ...
    """
    Signal
    """

    selectionChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    textChanged: ...
    """
    Signal
    """

    undoAvailable: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def acceptRichText(self, *args, **kwargs):
        """ """
        ...
    def alignment(self, *args, **kwargs):
        """ """
        ...
    def anchorAt(self, *args, **kwargs):
        """ """
        ...
    def append(self, *args, **kwargs):
        """ """
        ...
    def autoFormatting(self, *args, **kwargs):
        """ """
        ...
    def canInsertFromMimeData(self, *args, **kwargs):
        """ """
        ...
    def canPaste(self, *args, **kwargs):
        """ """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def clear(self, *args, **kwargs):
        """ """
        ...
    def contextMenuEvent(self, *args, **kwargs):
        """ """
        ...
    def copy(self, *args, **kwargs):
        """ """
        ...
    def createMimeDataFromSelection(self, *args, **kwargs):
        """ """
        ...
    def createStandardContextMenu(self, *args, **kwargs):
        """ """
        ...
    def currentCharFormat(self, *args, **kwargs):
        """ """
        ...
    def currentFont(self, *args, **kwargs):
        """ """
        ...
    def cursorForPosition(self, *args, **kwargs):
        """ """
        ...
    def cursorRect(self, *args, **kwargs):
        """ """
        ...
    def cursorWidth(self, *args, **kwargs):
        """ """
        ...
    def cut(self, *args, **kwargs):
        """ """
        ...
    def document(self, *args, **kwargs):
        """ """
        ...
    def documentTitle(self, *args, **kwargs):
        """ """
        ...
    def dragEnterEvent(self, *args, **kwargs):
        """ """
        ...
    def dragLeaveEvent(self, *args, **kwargs):
        """ """
        ...
    def dragMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def dropEvent(self, *args, **kwargs):
        """ """
        ...
    def ensureCursorVisible(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def extraSelections(self, *args, **kwargs):
        """ """
        ...
    def find(self, *args, **kwargs):
        """ """
        ...
    def focusInEvent(self, *args, **kwargs):
        """ """
        ...
    def focusNextPrevChild(self, *args, **kwargs):
        """ """
        ...
    def focusOutEvent(self, *args, **kwargs):
        """ """
        ...
    def fontFamily(self, *args, **kwargs):
        """ """
        ...
    def fontItalic(self, *args, **kwargs):
        """ """
        ...
    def fontPointSize(self, *args, **kwargs):
        """ """
        ...
    def fontUnderline(self, *args, **kwargs):
        """ """
        ...
    def fontWeight(self, *args, **kwargs):
        """ """
        ...
    def inputMethodEvent(self, *args, **kwargs):
        """ """
        ...
    def inputMethodQuery(self, *args, **kwargs):
        """ """
        ...
    def insertFromMimeData(self, *args, **kwargs):
        """ """
        ...
    def insertHtml(self, *args, **kwargs):
        """ """
        ...
    def insertPlainText(self, *args, **kwargs):
        """ """
        ...
    def isReadOnly(self, *args, **kwargs):
        """ """
        ...
    def isUndoRedoEnabled(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def keyReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def lineWrapColumnOrWidth(self, *args, **kwargs):
        """ """
        ...
    def lineWrapMode(self, *args, **kwargs):
        """ """
        ...
    def loadResource(self, *args, **kwargs):
        """ """
        ...
    def mergeCurrentCharFormat(self, *args, **kwargs):
        """ """
        ...
    def mouseDoubleClickEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def moveCursor(self, *args, **kwargs):
        """ """
        ...
    def overwriteMode(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def paste(self, *args, **kwargs):
        """ """
        ...
    def print_(self, *args, **kwargs):
        """ """
        ...
    def redo(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def scrollContentsBy(self, *args, **kwargs):
        """ """
        ...
    def scrollToAnchor(self, *args, **kwargs):
        """ """
        ...
    def selectAll(self, *args, **kwargs):
        """ """
        ...
    def setAcceptRichText(self, *args, **kwargs):
        """ """
        ...
    def setAlignment(self, *args, **kwargs):
        """ """
        ...
    def setAutoFormatting(self, *args, **kwargs):
        """ """
        ...
    def setCurrentCharFormat(self, *args, **kwargs):
        """ """
        ...
    def setCurrentFont(self, *args, **kwargs):
        """ """
        ...
    def setCursorWidth(self, *args, **kwargs):
        """ """
        ...
    def setDocument(self, *args, **kwargs):
        """ """
        ...
    def setDocumentTitle(self, *args, **kwargs):
        """ """
        ...
    def setExtraSelections(self, *args, **kwargs):
        """ """
        ...
    def setFontFamily(self, *args, **kwargs):
        """ """
        ...
    def setFontItalic(self, *args, **kwargs):
        """ """
        ...
    def setFontPointSize(self, *args, **kwargs):
        """ """
        ...
    def setFontUnderline(self, *args, **kwargs):
        """ """
        ...
    def setFontWeight(self, *args, **kwargs):
        """ """
        ...
    def setHtml(self, *args, **kwargs):
        """ """
        ...
    def setLineWrapColumnOrWidth(self, *args, **kwargs):
        """ """
        ...
    def setLineWrapMode(self, *args, **kwargs):
        """ """
        ...
    def setOverwriteMode(self, *args, **kwargs):
        """ """
        ...
    def setPlainText(self, *args, **kwargs):
        """ """
        ...
    def setReadOnly(self, *args, **kwargs):
        """ """
        ...
    def setTabChangesFocus(self, *args, **kwargs):
        """ """
        ...
    def setTabStopWidth(self, *args, **kwargs):
        """ """
        ...
    def setText(self, *args, **kwargs):
        """ """
        ...
    def setTextBackgroundColor(self, *args, **kwargs):
        """ """
        ...
    def setTextColor(self, *args, **kwargs):
        """ """
        ...
    def setTextCursor(self, *args, **kwargs):
        """ """
        ...
    def setTextInteractionFlags(self, *args, **kwargs):
        """ """
        ...
    def setUndoRedoEnabled(self, *args, **kwargs):
        """ """
        ...
    def setWordWrapMode(self, *args, **kwargs):
        """ """
        ...
    def showEvent(self, *args, **kwargs):
        """ """
        ...
    def tabChangesFocus(self, *args, **kwargs):
        """ """
        ...
    def tabStopWidth(self, *args, **kwargs):
        """ """
        ...
    def textBackgroundColor(self, *args, **kwargs):
        """ """
        ...
    def textColor(self, *args, **kwargs):
        """ """
        ...
    def textCursor(self, *args, **kwargs):
        """ """
        ...
    def textInteractionFlags(self, *args, **kwargs):
        """ """
        ...
    def timerEvent(self, *args, **kwargs):
        """ """
        ...
    def toHtml(self, *args, **kwargs):
        """ """
        ...
    def toPlainText(self, *args, **kwargs):
        """ """
        ...
    def undo(self, *args, **kwargs):
        """ """
        ...
    def wheelEvent(self, *args, **kwargs):
        """ """
        ...
    def wordWrapMode(self, *args, **kwargs):
        """ """
        ...
    def zoomIn(self, *args, **kwargs):
        """ """
        ...
    def zoomOut(self, *args, **kwargs):
        """ """
        ...
    ...

class QTimeEdit(QDateTimeEdit):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QToolBar(QWidget):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    actionTriggered: ...
    """
    Signal
    """

    allowedAreasChanged: ...
    """
    Signal
    """

    iconSizeChanged: ...
    """
    Signal
    """

    movableChanged: ...
    """
    Signal
    """

    orientationChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    toolButtonStyleChanged: ...
    """
    Signal
    """

    topLevelChanged: ...
    """
    Signal
    """

    visibilityChanged: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def actionAt(self, *args, **kwargs):
        """ """
        ...
    def actionEvent(self, *args, **kwargs):
        """ """
        ...
    def actionGeometry(self, *args, **kwargs):
        """ """
        ...
    def addAction(self, *args, **kwargs):
        """ """
        ...
    def addSeparator(self, *args, **kwargs):
        """ """
        ...
    def addWidget(self, *args, **kwargs):
        """ """
        ...
    def allowedAreas(self, *args, **kwargs):
        """ """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def childEvent(self, *args, **kwargs):
        """ """
        ...
    def clear(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def iconSize(self, *args, **kwargs):
        """ """
        ...
    def initStyleOption(self, *args, **kwargs):
        """ """
        ...
    def insertSeparator(self, *args, **kwargs):
        """ """
        ...
    def insertWidget(self, *args, **kwargs):
        """ """
        ...
    def isAreaAllowed(self, *args, **kwargs):
        """ """
        ...
    def isFloatable(self, *args, **kwargs):
        """ """
        ...
    def isFloating(self, *args, **kwargs):
        """ """
        ...
    def isMovable(self, *args, **kwargs):
        """ """
        ...
    def orientation(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def setAllowedAreas(self, *args, **kwargs):
        """ """
        ...
    def setFloatable(self, *args, **kwargs):
        """ """
        ...
    def setIconSize(self, *args, **kwargs):
        """ """
        ...
    def setMovable(self, *args, **kwargs):
        """ """
        ...
    def setOrientation(self, *args, **kwargs):
        """ """
        ...
    def setToolButtonStyle(self, *args, **kwargs):
        """ """
        ...
    def toggleViewAction(self, *args, **kwargs):
        """ """
        ...
    def toolButtonStyle(self, *args, **kwargs):
        """ """
        ...
    def widgetForAction(self, *args, **kwargs):
        """ """
        ...
    ...

class QToolBox(QFrame):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    currentChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addItem(self, *args, **kwargs):
        """ """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def count(self, *args, **kwargs):
        """ """
        ...
    def currentIndex(self, *args, **kwargs):
        """ """
        ...
    def currentWidget(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def indexOf(self, *args, **kwargs):
        """ """
        ...
    def insertItem(self, *args, **kwargs):
        """ """
        ...
    def isItemEnabled(self, *args, **kwargs):
        """ """
        ...
    def itemIcon(self, *args, **kwargs):
        """ """
        ...
    def itemInserted(self, *args, **kwargs):
        """ """
        ...
    def itemRemoved(self, *args, **kwargs):
        """ """
        ...
    def itemText(self, *args, **kwargs):
        """ """
        ...
    def itemToolTip(self, *args, **kwargs):
        """ """
        ...
    def removeItem(self, *args, **kwargs):
        """ """
        ...
    def setCurrentIndex(self, *args, **kwargs):
        """ """
        ...
    def setCurrentWidget(self, *args, **kwargs):
        """ """
        ...
    def setItemEnabled(self, *args, **kwargs):
        """ """
        ...
    def setItemIcon(self, *args, **kwargs):
        """ """
        ...
    def setItemText(self, *args, **kwargs):
        """ """
        ...
    def setItemToolTip(self, *args, **kwargs):
        """ """
        ...
    def showEvent(self, *args, **kwargs):
        """ """
        ...
    def widget(self, *args, **kwargs):
        """ """
        ...
    ...

class QToolButton(QAbstractButton):
    DelayedPopup: ...
    """
    PySide.QtGui.QToolButton.ToolButtonPopupMode.DelayedPop...
    """

    InstantPopup: ...
    """
    PySide.QtGui.QToolButton.ToolButtonPopupMode.InstantPop...
    """

    MenuButtonPopup: ...
    """
    PySide.QtGui.QToolButton.ToolButtonPopupMode.MenuBut...
    """

    ToolButtonPopupMode: ...
    """
    <type 'PySide.QtGui.QToolButton.ToolButtonPopupM...
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    triggered: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def actionEvent(self, *args, **kwargs):
        """ """
        ...
    def arrowType(self, *args, **kwargs):
        """ """
        ...
    def autoRaise(self, *args, **kwargs):
        """ """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def defaultAction(self, *args, **kwargs):
        """ """
        ...
    def enterEvent(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def hitButton(self, *args, **kwargs):
        """ """
        ...
    def initStyleOption(self, *args, **kwargs):
        """ """
        ...
    def leaveEvent(self, *args, **kwargs):
        """ """
        ...
    def menu(self, *args, **kwargs):
        """ """
        ...
    def minimumSizeHint(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def nextCheckState(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def popupMode(self, *args, **kwargs):
        """ """
        ...
    def setArrowType(self, *args, **kwargs):
        """ """
        ...
    def setAutoRaise(self, *args, **kwargs):
        """ """
        ...
    def setDefaultAction(self, *args, **kwargs):
        """ """
        ...
    def setMenu(self, *args, **kwargs):
        """ """
        ...
    def setPopupMode(self, *args, **kwargs):
        """ """
        ...
    def setToolButtonStyle(self, *args, **kwargs):
        """ """
        ...
    def showMenu(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def timerEvent(self, *args, **kwargs):
        """ """
        ...
    def toolButtonStyle(self, *args, **kwargs):
        """ """
        ...
    ...

class QToolTip(Shiboken.Object):
    @staticmethod
    def font(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def hideText(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def isVisible(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def palette(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setFont(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setPalette(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def showText(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def text(*args, **kwargs):
        """ """
        ...
    ...

class QTreeView(QAbstractItemView):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    collapsed: ...
    """
    Signal
    """

    expanded: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def allColumnsShowFocus(self, *args, **kwargs):
        """ """
        ...
    def autoExpandDelay(self, *args, **kwargs):
        """ """
        ...
    def collapse(self, *args, **kwargs):
        """ """
        ...
    def collapseAll(self, *args, **kwargs):
        """ """
        ...
    def columnAt(self, *args, **kwargs):
        """ """
        ...
    def columnCountChanged(self, *args, **kwargs):
        """ """
        ...
    def columnMoved(self, *args, **kwargs):
        """ """
        ...
    def columnResized(self, *args, **kwargs):
        """ """
        ...
    def columnViewportPosition(self, *args, **kwargs):
        """ """
        ...
    def columnWidth(self, *args, **kwargs):
        """ """
        ...
    def currentChanged(self, *args, **kwargs):
        """ """
        ...
    def dataChanged(self, *args, **kwargs):
        """ """
        ...
    def doItemsLayout(self, *args, **kwargs):
        """ """
        ...
    def dragMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def drawBranches(self, *args, **kwargs):
        """ """
        ...
    def drawRow(self, *args, **kwargs):
        """ """
        ...
    def drawTree(self, *args, **kwargs):
        """ """
        ...
    def expand(self, *args, **kwargs):
        """ """
        ...
    def expandAll(self, *args, **kwargs):
        """ """
        ...
    def expandToDepth(self, *args, **kwargs):
        """ """
        ...
    def expandsOnDoubleClick(self, *args, **kwargs):
        """ """
        ...
    def header(self, *args, **kwargs):
        """ """
        ...
    def hideColumn(self, *args, **kwargs):
        """ """
        ...
    def horizontalOffset(self, *args, **kwargs):
        """ """
        ...
    def horizontalScrollbarAction(self, *args, **kwargs):
        """ """
        ...
    def indentation(self, *args, **kwargs):
        """ """
        ...
    def indexAbove(self, *args, **kwargs):
        """ """
        ...
    def indexAt(self, *args, **kwargs):
        """ """
        ...
    def indexBelow(self, *args, **kwargs):
        """ """
        ...
    def indexRowSizeHint(self, *args, **kwargs):
        """ """
        ...
    def isAnimated(self, *args, **kwargs):
        """ """
        ...
    def isColumnHidden(self, *args, **kwargs):
        """ """
        ...
    def isExpanded(self, *args, **kwargs):
        """ """
        ...
    def isFirstColumnSpanned(self, *args, **kwargs):
        """ """
        ...
    def isHeaderHidden(self, *args, **kwargs):
        """ """
        ...
    def isIndexHidden(self, *args, **kwargs):
        """ """
        ...
    def isRowHidden(self, *args, **kwargs):
        """ """
        ...
    def isSortingEnabled(self, *args, **kwargs):
        """ """
        ...
    def itemsExpandable(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def keyboardSearch(self, *args, **kwargs):
        """ """
        ...
    def mouseDoubleClickEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def moveCursor(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def reexpand(self, *args, **kwargs):
        """ """
        ...
    def reset(self, *args, **kwargs):
        """ """
        ...
    def resizeColumnToContents(self, *args, **kwargs):
        """ """
        ...
    def rootIsDecorated(self, *args, **kwargs):
        """ """
        ...
    def rowHeight(self, *args, **kwargs):
        """ """
        ...
    def rowsAboutToBeRemoved(self, *args, **kwargs):
        """ """
        ...
    def rowsInserted(self, *args, **kwargs):
        """ """
        ...
    def rowsRemoved(self, *args, **kwargs):
        """ """
        ...
    def scrollContentsBy(self, *args, **kwargs):
        """ """
        ...
    def scrollTo(self, *args, **kwargs):
        """ """
        ...
    def selectAll(self, *args, **kwargs):
        """ """
        ...
    def selectedIndexes(self, *args, **kwargs):
        """ """
        ...
    def selectionChanged(self, *args, **kwargs):
        """ """
        ...
    def setAllColumnsShowFocus(self, *args, **kwargs):
        """ """
        ...
    def setAnimated(self, *args, **kwargs):
        """ """
        ...
    def setAutoExpandDelay(self, *args, **kwargs):
        """ """
        ...
    def setColumnHidden(self, *args, **kwargs):
        """ """
        ...
    def setColumnWidth(self, *args, **kwargs):
        """ """
        ...
    def setExpanded(self, *args, **kwargs):
        """ """
        ...
    def setExpandsOnDoubleClick(self, *args, **kwargs):
        """ """
        ...
    def setFirstColumnSpanned(self, *args, **kwargs):
        """ """
        ...
    def setHeader(self, *args, **kwargs):
        """ """
        ...
    def setHeaderHidden(self, *args, **kwargs):
        """ """
        ...
    def setIndentation(self, *args, **kwargs):
        """ """
        ...
    def setItemsExpandable(self, *args, **kwargs):
        """ """
        ...
    def setModel(self, *args, **kwargs):
        """ """
        ...
    def setRootIndex(self, *args, **kwargs):
        """ """
        ...
    def setRootIsDecorated(self, *args, **kwargs):
        """ """
        ...
    def setRowHidden(self, *args, **kwargs):
        """ """
        ...
    def setSelection(self, *args, **kwargs):
        """ """
        ...
    def setSelectionModel(self, *args, **kwargs):
        """ """
        ...
    def setSortingEnabled(self, *args, **kwargs):
        """ """
        ...
    def setUniformRowHeights(self, *args, **kwargs):
        """ """
        ...
    def setWordWrap(self, *args, **kwargs):
        """ """
        ...
    def showColumn(self, *args, **kwargs):
        """ """
        ...
    def sizeHintForColumn(self, *args, **kwargs):
        """ """
        ...
    def sortByColumn(self, *args, **kwargs):
        """ """
        ...
    def timerEvent(self, *args, **kwargs):
        """ """
        ...
    def uniformRowHeights(self, *args, **kwargs):
        """ """
        ...
    def updateGeometries(self, *args, **kwargs):
        """ """
        ...
    def verticalOffset(self, *args, **kwargs):
        """ """
        ...
    def viewportEvent(self, *args, **kwargs):
        """ """
        ...
    def visualRect(self, *args, **kwargs):
        """ """
        ...
    def visualRegionForSelection(self, *args, **kwargs):
        """ """
        ...
    def wordWrap(self, *args, **kwargs):
        """ """
        ...
    ...

class QTreeWidget(QTreeView):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    currentItemChanged: ...
    """
    Signal
    """

    itemActivated: ...
    """
    Signal
    """

    itemChanged: ...
    """
    Signal
    """

    itemClicked: ...
    """
    Signal
    """

    itemCollapsed: ...
    """
    Signal
    """

    itemDoubleClicked: ...
    """
    Signal
    """

    itemEntered: ...
    """
    Signal
    """

    itemExpanded: ...
    """
    Signal
    """

    itemPressed: ...
    """
    Signal
    """

    itemSelectionChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addTopLevelItem(self, *args, **kwargs):
        """ """
        ...
    def addTopLevelItems(self, *args, **kwargs):
        """ """
        ...
    def clear(self, *args, **kwargs):
        """ """
        ...
    def closePersistentEditor(self, *args, **kwargs):
        """ """
        ...
    def collapseItem(self, *args, **kwargs):
        """ """
        ...
    def columnCount(self, *args, **kwargs):
        """ """
        ...
    def currentColumn(self, *args, **kwargs):
        """ """
        ...
    def currentItem(self, *args, **kwargs):
        """ """
        ...
    def dropEvent(self, *args, **kwargs):
        """ """
        ...
    def dropMimeData(self, *args, **kwargs):
        """ """
        ...
    def editItem(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def expandItem(self, *args, **kwargs):
        """ """
        ...
    def findItems(self, *args, **kwargs):
        """ """
        ...
    def headerItem(self, *args, **kwargs):
        """ """
        ...
    def indexFromItem(self, *args, **kwargs):
        """ """
        ...
    def indexOfTopLevelItem(self, *args, **kwargs):
        """ """
        ...
    def insertTopLevelItem(self, *args, **kwargs):
        """ """
        ...
    def insertTopLevelItems(self, *args, **kwargs):
        """ """
        ...
    def invisibleRootItem(self, *args, **kwargs):
        """ """
        ...
    def isFirstItemColumnSpanned(self, *args, **kwargs):
        """ """
        ...
    def isItemExpanded(self, *args, **kwargs):
        """ """
        ...
    def isItemHidden(self, *args, **kwargs):
        """ """
        ...
    def isItemSelected(self, *args, **kwargs):
        """ """
        ...
    def isSortingEnabled(self, *args, **kwargs):
        """ """
        ...
    def itemAbove(self, *args, **kwargs):
        """ """
        ...
    def itemAt(self, *args, **kwargs):
        """ """
        ...
    def itemBelow(self, *args, **kwargs):
        """ """
        ...
    def itemFromIndex(self, *args, **kwargs):
        """ """
        ...
    def itemWidget(self, *args, **kwargs):
        """ """
        ...
    def mimeData(self, *args, **kwargs):
        """ """
        ...
    def mimeTypes(self, *args, **kwargs):
        """ """
        ...
    def openPersistentEditor(self, *args, **kwargs):
        """ """
        ...
    def removeItemWidget(self, *args, **kwargs):
        """ """
        ...
    def scrollToItem(self, *args, **kwargs):
        """ """
        ...
    def selectedItems(self, *args, **kwargs):
        """ """
        ...
    def setColumnCount(self, *args, **kwargs):
        """ """
        ...
    def setCurrentItem(self, *args, **kwargs):
        """ """
        ...
    def setFirstItemColumnSpanned(self, *args, **kwargs):
        """ """
        ...
    def setHeaderItem(self, *args, **kwargs):
        """ """
        ...
    def setHeaderLabel(self, *args, **kwargs):
        """ """
        ...
    def setHeaderLabels(self, *args, **kwargs):
        """ """
        ...
    def setItemExpanded(self, *args, **kwargs):
        """ """
        ...
    def setItemHidden(self, *args, **kwargs):
        """ """
        ...
    def setItemSelected(self, *args, **kwargs):
        """ """
        ...
    def setItemWidget(self, *args, **kwargs):
        """ """
        ...
    def setModel(self, *args, **kwargs):
        """ """
        ...
    def setSelectionModel(self, *args, **kwargs):
        """ """
        ...
    def setSortingEnabled(self, *args, **kwargs):
        """ """
        ...
    def sortColumn(self, *args, **kwargs):
        """ """
        ...
    def sortItems(self, *args, **kwargs):
        """ """
        ...
    def supportedDropActions(self, *args, **kwargs):
        """ """
        ...
    def takeTopLevelItem(self, *args, **kwargs):
        """ """
        ...
    def topLevelItem(self, *args, **kwargs):
        """ """
        ...
    def topLevelItemCount(self, *args, **kwargs):
        """ """
        ...
    def visualItemRect(self, *args, **kwargs):
        """ """
        ...
    ...

class QTreeWidgetItem(Shiboken.Object):
    ChildIndicatorPolicy: ...
    """
    <type 'PySide.QtGui.QTreeWidgetItem.ChildIndica...
    """

    DontShowIndicator: ...
    """
    PySide.QtGui.QTreeWidgetItem.ChildIndicatorPolicy....
    """

    DontShowIndicatorWhenChildless: ...
    """
    PySide.QtGui.QTreeWidgetItem.ChildInd...
    """

    ItemType: ...
    """
    <type 'PySide.QtGui.QTreeWidgetItem.ItemType'>
    """

    ShowIndicator: ...
    """
    PySide.QtGui.QTreeWidgetItem.ChildIndicatorPolicy.Show...
    """

    Type: ... = PySide.QtGui.QTreeWidgetItem.ItemType.Type
    """
    """

    UserType: ... = PySide.QtGui.QTreeWidgetItem.ItemType.UserType
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __eq__(self, *args, **kwargs):
        """
        x.__eq__(y) <==> x==y
        """
        ...
    def __ge__(self, *args, **kwargs):
        """
        x.__ge__(y) <==> x>=y
        """
        ...
    def __gt__(self, *args, **kwargs):
        """
        x.__gt__(y) <==> x>y
        """
        ...
    def __hash__(self, *args, **kwargs):
        """
        x.__hash__() <==> hash(x)
        """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def __le__(self, *args, **kwargs):
        """
        x.__le__(y) <==> x<=y
        """
        ...
    def __lshift__(self, *args, **kwargs):
        """
        x.__lshift__(y) <==> x<<y
        """
        ...
    def __lt__(self, *args, **kwargs):
        """
        x.__lt__(y) <==> x<y
        """
        ...
    def __ne__(self, *args, **kwargs):
        """
        x.__ne__(y) <==> x!=y
        """
        ...
    def __rlshift__(self, *args, **kwargs):
        """
        x.__rlshift__(y) <==> y<<x
        """
        ...
    def __rrshift__(self, *args, **kwargs):
        """
        x.__rrshift__(y) <==> y>>x
        """
        ...
    def __rshift__(self, *args, **kwargs):
        """
        x.__rshift__(y) <==> x>>y
        """
        ...
    def addChild(self, *args, **kwargs):
        """ """
        ...
    def addChildren(self, *args, **kwargs):
        """ """
        ...
    def background(self, *args, **kwargs):
        """ """
        ...
    def checkState(self, *args, **kwargs):
        """ """
        ...
    def child(self, *args, **kwargs):
        """ """
        ...
    def childCount(self, *args, **kwargs):
        """ """
        ...
    def childIndicatorPolicy(self, *args, **kwargs):
        """ """
        ...
    def clone(self, *args, **kwargs):
        """ """
        ...
    def columnCount(self, *args, **kwargs):
        """ """
        ...
    def data(self, *args, **kwargs):
        """ """
        ...
    def emitDataChanged(self, *args, **kwargs):
        """ """
        ...
    def flags(self, *args, **kwargs):
        """ """
        ...
    def font(self, *args, **kwargs):
        """ """
        ...
    def foreground(self, *args, **kwargs):
        """ """
        ...
    def icon(self, *args, **kwargs):
        """ """
        ...
    def indexOfChild(self, *args, **kwargs):
        """ """
        ...
    def insertChild(self, *args, **kwargs):
        """ """
        ...
    def insertChildren(self, *args, **kwargs):
        """ """
        ...
    def isDisabled(self, *args, **kwargs):
        """ """
        ...
    def isExpanded(self, *args, **kwargs):
        """ """
        ...
    def isFirstColumnSpanned(self, *args, **kwargs):
        """ """
        ...
    def isHidden(self, *args, **kwargs):
        """ """
        ...
    def isSelected(self, *args, **kwargs):
        """ """
        ...
    def parent(self, *args, **kwargs):
        """ """
        ...
    def read(self, *args, **kwargs):
        """ """
        ...
    def removeChild(self, *args, **kwargs):
        """ """
        ...
    def setBackground(self, *args, **kwargs):
        """ """
        ...
    def setCheckState(self, *args, **kwargs):
        """ """
        ...
    def setChildIndicatorPolicy(self, *args, **kwargs):
        """ """
        ...
    def setData(self, *args, **kwargs):
        """ """
        ...
    def setDisabled(self, *args, **kwargs):
        """ """
        ...
    def setExpanded(self, *args, **kwargs):
        """ """
        ...
    def setFirstColumnSpanned(self, *args, **kwargs):
        """ """
        ...
    def setFlags(self, *args, **kwargs):
        """ """
        ...
    def setFont(self, *args, **kwargs):
        """ """
        ...
    def setForeground(self, *args, **kwargs):
        """ """
        ...
    def setHidden(self, *args, **kwargs):
        """ """
        ...
    def setIcon(self, *args, **kwargs):
        """ """
        ...
    def setSelected(self, *args, **kwargs):
        """ """
        ...
    def setSizeHint(self, *args, **kwargs):
        """ """
        ...
    def setStatusTip(self, *args, **kwargs):
        """ """
        ...
    def setText(self, *args, **kwargs):
        """ """
        ...
    def setTextAlignment(self, *args, **kwargs):
        """ """
        ...
    def setToolTip(self, *args, **kwargs):
        """ """
        ...
    def setWhatsThis(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def sortChildren(self, *args, **kwargs):
        """ """
        ...
    def statusTip(self, *args, **kwargs):
        """ """
        ...
    def takeChild(self, *args, **kwargs):
        """ """
        ...
    def takeChildren(self, *args, **kwargs):
        """ """
        ...
    def text(self, *args, **kwargs):
        """ """
        ...
    def textAlignment(self, *args, **kwargs):
        """ """
        ...
    def toolTip(self, *args, **kwargs):
        """ """
        ...
    def treeWidget(self, *args, **kwargs):
        """ """
        ...
    def type(self, *args, **kwargs):
        """ """
        ...
    def whatsThis(self, *args, **kwargs):
        """ """
        ...
    def write(self, *args, **kwargs):
        """ """
        ...
    ...

class QTreeWidgetItemIterator(Shiboken.Object):
    All: ... = PySide.QtGui.QTreeWidgetItemIterator.IteratorFlag.All
    """
    """

    Checked: ... = PySide.QtGui.QTreeWidgetItemIterator.IteratorFlag.Checked
    """
    """

    Disabled: ... = PySide.QtGui.QTreeWidgetItemIterator.IteratorFlag.Disabled
    """
    """

    DragDisabled: ...
    """
    PySide.QtGui.QTreeWidgetItemIterator.IteratorFlag.DragD...
    """

    DragEnabled: ...
    """
    PySide.QtGui.QTreeWidgetItemIterator.IteratorFlag.DragEn...
    """

    DropDisabled: ...
    """
    PySide.QtGui.QTreeWidgetItemIterator.IteratorFlag.DropD...
    """

    DropEnabled: ...
    """
    PySide.QtGui.QTreeWidgetItemIterator.IteratorFlag.DropEn...
    """

    Editable: ... = PySide.QtGui.QTreeWidgetItemIterator.IteratorFlag.Editable
    """
    """

    Enabled: ... = PySide.QtGui.QTreeWidgetItemIterator.IteratorFlag.Enabled
    """
    """

    HasChildren: ...
    """
    PySide.QtGui.QTreeWidgetItemIterator.IteratorFlag.HasChi...
    """

    Hidden: ... = PySide.QtGui.QTreeWidgetItemIterator.IteratorFlag.Hidden
    """
    """

    IteratorFlag: ...
    """
    <type 'PySide.QtGui.QTreeWidgetItemIterator.IteratorFla...
    """

    IteratorFlags: ...
    """
    <type 'IteratorFlags'>
    """

    NoChildren: ...
    """
    PySide.QtGui.QTreeWidgetItemIterator.IteratorFlag.NoChild...
    """

    NotChecked: ...
    """
    PySide.QtGui.QTreeWidgetItemIterator.IteratorFlag.NotChec...
    """

    NotEditable: ...
    """
    PySide.QtGui.QTreeWidgetItemIterator.IteratorFlag.NotEdi...
    """

    NotHidden: ...
    """
    PySide.QtGui.QTreeWidgetItemIterator.IteratorFlag.NotHidde...
    """

    NotSelectable: ...
    """
    PySide.QtGui.QTreeWidgetItemIterator.IteratorFlag.NotS...
    """

    Selectable: ...
    """
    PySide.QtGui.QTreeWidgetItemIterator.IteratorFlag.Selecta...
    """

    Selected: ... = PySide.QtGui.QTreeWidgetItemIterator.IteratorFlag.Selected
    """
    """

    Unselected: ...
    """
    PySide.QtGui.QTreeWidgetItemIterator.IteratorFlag.Unselec...
    """

    UserFlag: ... = PySide.QtGui.QTreeWidgetItemIterator.IteratorFlag.UserFlag
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __copy__(self, *args, **kwargs):
        """ """
        ...
    def __iadd__(self, *args, **kwargs):
        """
        x.__iadd__(y) <==> x+=y
        """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def __isub__(self, *args, **kwargs):
        """
        x.__isub__(y) <==> x-=y
        """
        ...
    def __iter__(self, *args, **kwargs):
        """
        x.__iter__() <==> iter(x)
        """
        ...
    def next(self, *args, **kwargs):
        """
        x.next() -> the next value, or raise StopIteration
        """
        ...
    def value(self, *args, **kwargs):
        """ """
        ...
    ...

class QUndoCommand(Shiboken.Object):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def actionText(self, *args, **kwargs):
        """ """
        ...
    def child(self, *args, **kwargs):
        """ """
        ...
    def childCount(self, *args, **kwargs):
        """ """
        ...
    def id(self, *args, **kwargs):
        """ """
        ...
    def mergeWith(self, *args, **kwargs):
        """ """
        ...
    def redo(self, *args, **kwargs):
        """ """
        ...
    def setText(self, *args, **kwargs):
        """ """
        ...
    def text(self, *args, **kwargs):
        """ """
        ...
    def undo(self, *args, **kwargs):
        """ """
        ...
    ...

class QUndoGroup(PySide.QtCore.QObject):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    activeStackChanged: ...
    """
    Signal
    """

    canRedoChanged: ...
    """
    Signal
    """

    canUndoChanged: ...
    """
    Signal
    """

    cleanChanged: ...
    """
    Signal
    """

    indexChanged: ...
    """
    Signal
    """

    redoTextChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    undoTextChanged: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def activeStack(self, *args, **kwargs):
        """ """
        ...
    def addStack(self, *args, **kwargs):
        """ """
        ...
    def canRedo(self, *args, **kwargs):
        """ """
        ...
    def canUndo(self, *args, **kwargs):
        """ """
        ...
    def createRedoAction(self, *args, **kwargs):
        """ """
        ...
    def createUndoAction(self, *args, **kwargs):
        """ """
        ...
    def isClean(self, *args, **kwargs):
        """ """
        ...
    def redo(self, *args, **kwargs):
        """ """
        ...
    def redoText(self, *args, **kwargs):
        """ """
        ...
    def removeStack(self, *args, **kwargs):
        """ """
        ...
    def setActiveStack(self, *args, **kwargs):
        """ """
        ...
    def stacks(self, *args, **kwargs):
        """ """
        ...
    def undo(self, *args, **kwargs):
        """ """
        ...
    def undoText(self, *args, **kwargs):
        """ """
        ...
    ...

class QUndoStack(PySide.QtCore.QObject):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    canRedoChanged: ...
    """
    Signal
    """

    canUndoChanged: ...
    """
    Signal
    """

    cleanChanged: ...
    """
    Signal
    """

    indexChanged: ...
    """
    Signal
    """

    redoTextChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    undoTextChanged: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def beginMacro(self, *args, **kwargs):
        """ """
        ...
    def canRedo(self, *args, **kwargs):
        """ """
        ...
    def canUndo(self, *args, **kwargs):
        """ """
        ...
    def cleanIndex(self, *args, **kwargs):
        """ """
        ...
    def clear(self, *args, **kwargs):
        """ """
        ...
    def command(self, *args, **kwargs):
        """ """
        ...
    def count(self, *args, **kwargs):
        """ """
        ...
    def createRedoAction(self, *args, **kwargs):
        """ """
        ...
    def createUndoAction(self, *args, **kwargs):
        """ """
        ...
    def endMacro(self, *args, **kwargs):
        """ """
        ...
    def index(self, *args, **kwargs):
        """ """
        ...
    def isActive(self, *args, **kwargs):
        """ """
        ...
    def isClean(self, *args, **kwargs):
        """ """
        ...
    def push(self, *args, **kwargs):
        """ """
        ...
    def redo(self, *args, **kwargs):
        """ """
        ...
    def redoText(self, *args, **kwargs):
        """ """
        ...
    def setActive(self, *args, **kwargs):
        """ """
        ...
    def setClean(self, *args, **kwargs):
        """ """
        ...
    def setIndex(self, *args, **kwargs):
        """ """
        ...
    def setUndoLimit(self, *args, **kwargs):
        """ """
        ...
    def text(self, *args, **kwargs):
        """ """
        ...
    def undo(self, *args, **kwargs):
        """ """
        ...
    def undoLimit(self, *args, **kwargs):
        """ """
        ...
    def undoText(self, *args, **kwargs):
        """ """
        ...
    ...

class QUndoView(QListView):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def cleanIcon(self, *args, **kwargs):
        """ """
        ...
    def emptyLabel(self, *args, **kwargs):
        """ """
        ...
    def group(self, *args, **kwargs):
        """ """
        ...
    def setCleanIcon(self, *args, **kwargs):
        """ """
        ...
    def setEmptyLabel(self, *args, **kwargs):
        """ """
        ...
    def setGroup(self, *args, **kwargs):
        """ """
        ...
    def setStack(self, *args, **kwargs):
        """ """
        ...
    def stack(self, *args, **kwargs):
        """ """
        ...
    ...

class QVBoxLayout(QBoxLayout):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    ...

class QWhatsThis(Shiboken.Object):
    @staticmethod
    def createAction(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def enterWhatsThisMode(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def hideText(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def inWhatsThisMode(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def leaveWhatsThisMode(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def showText(*args, **kwargs):
        """ """
        ...
    ...

class QWidget(QtCore.QObject, QtGui.QPaintDevice):
    DrawChildren: ... = PySide.QtGui.QWidget.RenderFlag.DrawChildren
    """
    """

    DrawWindowBackground: ...
    """
    PySide.QtGui.QWidget.RenderFlag.DrawWindowBackg...
    """

    IgnoreMask: ... = PySide.QtGui.QWidget.RenderFlag.IgnoreMask
    """
    """

    RenderFlag: ...
    """
    <type 'PySide.QtGui.QWidget.RenderFlag'>
    """

    RenderFlags: ...
    """
    <type 'RenderFlags'>
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    customContextMenuRequested: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    @staticmethod
    def keyboardGrabber(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def mouseGrabber(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def setTabOrder(*args, **kwargs):
        """ """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def acceptDrops(self, *args, **kwargs):
        """ """
        ...
    def accessibleDescription(self, *args, **kwargs):
        """ """
        ...
    def accessibleName(self, *args, **kwargs):
        """ """
        ...
    def actionEvent(self, *args, **kwargs):
        """ """
        ...
    def actions(self) -> typing.List[QAction]:
        """ """
        ...
    def activateWindow(self, *args, **kwargs):
        """ """
        ...
    def addAction(self, *args, **kwargs):
        """ """
        ...
    def addActions(self, *args, **kwargs):
        """ """
        ...
    def adjustSize(self, *args, **kwargs):
        """ """
        ...
    def autoFillBackground(self, *args, **kwargs):
        """ """
        ...
    def backgroundRole(self, *args, **kwargs):
        """ """
        ...
    def baseSize(self, *args, **kwargs):
        """ """
        ...
    def changeEvent(self, *args, **kwargs):
        """ """
        ...
    def childAt(self, *args, **kwargs):
        """ """
        ...
    def childrenRect(self, *args, **kwargs):
        """ """
        ...
    def childrenRegion(self, *args, **kwargs):
        """ """
        ...
    def clearFocus(self, *args, **kwargs):
        """ """
        ...
    def clearMask(self, *args, **kwargs):
        """ """
        ...
    def close(self, *args, **kwargs):
        """ """
        ...
    def closeEvent(self, *args, **kwargs):
        """ """
        ...
    def contentsMargins(self, *args, **kwargs):
        """ """
        ...
    def contentsRect(self, *args, **kwargs):
        """ """
        ...
    def contextMenuEvent(self, *args, **kwargs):
        """ """
        ...
    def contextMenuPolicy(self, *args, **kwargs):
        """ """
        ...
    def createWinId(self, *args, **kwargs):
        """ """
        ...
    def cursor(self, *args, **kwargs):
        """ """
        ...
    def destroy(
        self, destroyWindow: bool = True, destroySubWindows: bool = True
    ) -> None:
        """ """
        ...
    def devType(self, *args, **kwargs):
        """ """
        ...
    def dragEnterEvent(self, *args, **kwargs):
        """ """
        ...
    def dragLeaveEvent(self, *args, **kwargs):
        """ """
        ...
    def dragMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def dropEvent(self, *args, **kwargs):
        """ """
        ...
    def effectiveWinId(self, *args, **kwargs):
        """ """
        ...
    def ensurePolished(self, *args, **kwargs):
        """ """
        ...
    def enterEvent(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def focusInEvent(self, *args, **kwargs):
        """ """
        ...
    def focusNextChild(self, *args, **kwargs):
        """ """
        ...
    def focusNextPrevChild(self, *args, **kwargs):
        """ """
        ...
    def focusOutEvent(self, *args, **kwargs):
        """ """
        ...
    def focusPolicy(self, *args, **kwargs):
        """ """
        ...
    def focusPreviousChild(self, *args, **kwargs):
        """ """
        ...
    def focusProxy(self, *args, **kwargs):
        """ """
        ...
    def focusWidget(self, *args, **kwargs):
        """ """
        ...
    def font(self, *args, **kwargs):
        """ """
        ...
    def fontInfo(self, *args, **kwargs):
        """ """
        ...
    def fontMetrics(self, *args, **kwargs):
        """ """
        ...
    def foregroundRole(self, *args, **kwargs):
        """ """
        ...
    def frameGeometry(self, *args, **kwargs):
        """ """
        ...
    def frameSize(self, *args, **kwargs):
        """ """
        ...
    def geometry(self, *args, **kwargs):
        """ """
        ...
    def getContentsMargins(self, *args, **kwargs):
        """ """
        ...
    def grabGesture(self, *args, **kwargs):
        """ """
        ...
    def grabKeyboard(self, *args, **kwargs):
        """ """
        ...
    def grabMouse(self, *args, **kwargs):
        """ """
        ...
    def grabShortcut(self, *args, **kwargs):
        """ """
        ...
    def graphicsEffect(self, *args, **kwargs):
        """ """
        ...
    def graphicsProxyWidget(self, *args, **kwargs):
        """ """
        ...
    def hasFocus(self, *args, **kwargs):
        """ """
        ...
    def hasMouseTracking(self, *args, **kwargs):
        """ """
        ...
    def height(self, *args, **kwargs):
        """ """
        ...
    def heightForWidth(self, *args, **kwargs):
        """ """
        ...
    def hide(self, *args, **kwargs):
        """ """
        ...
    def hideEvent(self, *args, **kwargs):
        """ """
        ...
    def inputContext(self, *args, **kwargs):
        """ """
        ...
    def inputMethodEvent(self, *args, **kwargs):
        """ """
        ...
    def inputMethodHints(self, *args, **kwargs):
        """ """
        ...
    def inputMethodQuery(self, *args, **kwargs):
        """ """
        ...
    def insertAction(self, *args, **kwargs):
        """ """
        ...
    def insertActions(self, *args, **kwargs):
        """ """
        ...
    def isActiveWindow(self, *args, **kwargs):
        """ """
        ...
    def isAncestorOf(self, *args, **kwargs):
        """ """
        ...
    def isEnabled(self, *args, **kwargs):
        """ """
        ...
    def isEnabledTo(self, *args, **kwargs):
        """ """
        ...
    def isFullScreen(self, *args, **kwargs):
        """ """
        ...
    def isHidden(self, *args, **kwargs):
        """ """
        ...
    def isLeftToRight(self, *args, **kwargs):
        """ """
        ...
    def isMaximized(self, *args, **kwargs):
        """ """
        ...
    def isMinimized(self, *args, **kwargs):
        """ """
        ...
    def isModal(self, *args, **kwargs):
        """ """
        ...
    def isRightToLeft(self, *args, **kwargs):
        """ """
        ...
    def isVisible(self, *args, **kwargs):
        """ """
        ...
    def isVisibleTo(self, *args, **kwargs):
        """ """
        ...
    def isWindow(self, *args, **kwargs):
        """ """
        ...
    def isWindowModified(self, *args, **kwargs):
        """ """
        ...
    def keyPressEvent(self, *args, **kwargs):
        """ """
        ...
    def keyReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def languageChange(self, *args, **kwargs):
        """ """
        ...
    def layout(self, *args, **kwargs):
        """ """
        ...
    def layoutDirection(self, *args, **kwargs):
        """ """
        ...
    def leaveEvent(self, *args, **kwargs):
        """ """
        ...
    def locale(self, *args, **kwargs):
        """ """
        ...
    def lower(self, *args, **kwargs):
        """ """
        ...
    def mapFrom(self, *args, **kwargs):
        """ """
        ...
    def mapFromGlobal(self, *args, **kwargs):
        """ """
        ...
    def mapFromParent(self, *args, **kwargs):
        """ """
        ...
    def mapTo(self, *args, **kwargs):
        """ """
        ...
    def mapToGlobal(self, *args, **kwargs):
        """ """
        ...
    def mapToParent(self, *args, **kwargs):
        """ """
        ...
    def mask(self, *args, **kwargs):
        """ """
        ...
    def maximumHeight(self, *args, **kwargs):
        """ """
        ...
    def maximumSize(self, *args, **kwargs):
        """ """
        ...
    def maximumWidth(self, *args, **kwargs):
        """ """
        ...
    def metric(self, *args, **kwargs):
        """ """
        ...
    def minimumHeight(self, *args, **kwargs):
        """ """
        ...
    def minimumSize(self, *args, **kwargs):
        """ """
        ...
    def minimumSizeHint(self, *args, **kwargs):
        """ """
        ...
    def minimumWidth(self, *args, **kwargs):
        """ """
        ...
    def mouseDoubleClickEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseMoveEvent(self, *args, **kwargs):
        """ """
        ...
    def mousePressEvent(self, *args, **kwargs):
        """ """
        ...
    def mouseReleaseEvent(self, *args, **kwargs):
        """ """
        ...
    def move(self, *args, **kwargs):
        """ """
        ...
    def moveEvent(self, *args, **kwargs):
        """ """
        ...
    def nativeParentWidget(self, *args, **kwargs):
        """ """
        ...
    def nextInFocusChain(self, *args, **kwargs):
        """ """
        ...
    def normalGeometry(self, *args, **kwargs):
        """ """
        ...
    def overrideWindowFlags(self, *args, **kwargs):
        """ """
        ...
    def overrideWindowState(self, *args, **kwargs):
        """ """
        ...
    def paintEngine(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def palette(self, *args, **kwargs):
        """ """
        ...
    def parentWidget(self) -> QWidget:
        """ """
        ...
    def pos(self, *args, **kwargs):
        """ """
        ...
    def previousInFocusChain(self, *args, **kwargs):
        """ """
        ...
    def raise_(self, *args, **kwargs):
        """ """
        ...
    def rect(self, *args, **kwargs):
        """ """
        ...
    def releaseKeyboard(self, *args, **kwargs):
        """ """
        ...
    def releaseMouse(self, *args, **kwargs):
        """ """
        ...
    def releaseShortcut(self, *args, **kwargs):
        """ """
        ...
    def removeAction(self, action: QAction) -> None:
        """ """
        ...
    def render(self, *args, **kwargs):
        """ """
        ...
    def repaint(self, *args, **kwargs):
        """ """
        ...
    def resetInputContext(self, *args, **kwargs):
        """ """
        ...
    def resize(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def restoreGeometry(self, *args, **kwargs):
        """ """
        ...
    def saveGeometry(self, *args, **kwargs):
        """ """
        ...
    def scroll(self, *args, **kwargs):
        """ """
        ...
    def setAcceptDrops(self, *args, **kwargs):
        """ """
        ...
    def setAccessibleDescription(self, *args, **kwargs):
        """ """
        ...
    def setAccessibleName(self, *args, **kwargs):
        """ """
        ...
    def setAttribute(self, *args, **kwargs):
        """ """
        ...
    def setAutoFillBackground(self, *args, **kwargs):
        """ """
        ...
    def setBackgroundRole(self, *args, **kwargs):
        """ """
        ...
    def setBaseSize(self, *args, **kwargs):
        """ """
        ...
    def setContentsMargins(self, *args, **kwargs):
        """ """
        ...
    def setContextMenuPolicy(self, *args, **kwargs):
        """ """
        ...
    def setCursor(self, *args, **kwargs):
        """ """
        ...
    def setDisabled(self, *args, **kwargs):
        """ """
        ...
    def setEnabled(self, *args, **kwargs):
        """ """
        ...
    def setFixedHeight(self, *args, **kwargs):
        """ """
        ...
    def setFixedSize(self, *args, **kwargs):
        """ """
        ...
    def setFixedWidth(self, *args, **kwargs):
        """ """
        ...
    def setFocus(self, *args, **kwargs):
        """ """
        ...
    def setFocusPolicy(self, *args, **kwargs):
        """ """
        ...
    def setFocusProxy(self, *args, **kwargs):
        """ """
        ...
    def setFont(self, *args, **kwargs):
        """ """
        ...
    def setForegroundRole(self, *args, **kwargs):
        """ """
        ...
    def setGeometry(self, *args, **kwargs):
        """ """
        ...
    def setGraphicsEffect(self, *args, **kwargs):
        """ """
        ...
    def setHidden(self, *args, **kwargs):
        """ """
        ...
    def setInputContext(self, *args, **kwargs):
        """ """
        ...
    def setInputMethodHints(self, *args, **kwargs):
        """ """
        ...
    def setLayout(self, *args, **kwargs):
        """ """
        ...
    def setLayoutDirection(self, *args, **kwargs):
        """ """
        ...
    def setLocale(self, *args, **kwargs):
        """ """
        ...
    def setMask(self, *args, **kwargs):
        """ """
        ...
    def setMaximumHeight(self, *args, **kwargs):
        """ """
        ...
    def setMaximumSize(self, *args, **kwargs):
        """ """
        ...
    def setMaximumWidth(self, *args, **kwargs):
        """ """
        ...
    def setMinimumHeight(self, *args, **kwargs):
        """ """
        ...
    def setMinimumSize(self, *args, **kwargs):
        """ """
        ...
    def setMinimumWidth(self, *args, **kwargs):
        """ """
        ...
    def setMouseTracking(self, *args, **kwargs):
        """ """
        ...
    def setPalette(self, *args, **kwargs):
        """ """
        ...
    def setParent(self, parent: QWidget, f: QtCore.Qt.WindowFlags = ...) -> None:
        """ """
        ...
    def setShortcutAutoRepeat(self, *args, **kwargs):
        """ """
        ...
    def setShortcutEnabled(self, *args, **kwargs):
        """ """
        ...
    def setSizeIncrement(self, *args, **kwargs):
        """ """
        ...
    def setSizePolicy(self, *args, **kwargs):
        """ """
        ...
    def setStatusTip(self, *args, **kwargs):
        """ """
        ...
    def setStyle(self, *args, **kwargs):
        """ """
        ...
    def setStyleSheet(self, *args, **kwargs):
        """ """
        ...
    def setToolTip(self, *args, **kwargs):
        """ """
        ...
    def setUpdatesEnabled(self, *args, **kwargs):
        """ """
        ...
    def setVisible(self, *args, **kwargs):
        """ """
        ...
    def setWhatsThis(self, *args, **kwargs):
        """ """
        ...
    def setWindowFilePath(self, *args, **kwargs):
        """ """
        ...
    def setWindowFlags(self, *args, **kwargs):
        """ """
        ...
    def setWindowIcon(self, *args, **kwargs):
        """ """
        ...
    def setWindowIconText(self, *args, **kwargs):
        """ """
        ...
    def setWindowModality(self, *args, **kwargs):
        """ """
        ...
    def setWindowModified(self, *args, **kwargs):
        """ """
        ...
    def setWindowOpacity(self, *args, **kwargs):
        """ """
        ...
    def setWindowRole(self, *args, **kwargs):
        """ """
        ...
    def setWindowState(self, *args, **kwargs):
        """ """
        ...
    def setWindowTitle(self, *args, **kwargs):
        """ """
        ...
    def show(self, *args, **kwargs):
        """ """
        ...
    def showEvent(self, *args, **kwargs):
        """ """
        ...
    def showFullScreen(self, *args, **kwargs):
        """ """
        ...
    def showMaximized(self, *args, **kwargs):
        """ """
        ...
    def showMinimized(self, *args, **kwargs):
        """ """
        ...
    def showNormal(self, *args, **kwargs):
        """ """
        ...
    def size(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def sizeIncrement(self, *args, **kwargs):
        """ """
        ...
    def sizePolicy(self, *args, **kwargs):
        """ """
        ...
    def stackUnder(self, *args, **kwargs):
        """ """
        ...
    def statusTip(self, *args, **kwargs):
        """ """
        ...
    def style(self, *args, **kwargs):
        """ """
        ...
    def styleSheet(self, *args, **kwargs):
        """ """
        ...
    def tabletEvent(self, *args, **kwargs):
        """ """
        ...
    def testAttribute(self, *args, **kwargs):
        """ """
        ...
    def toolTip(self, *args, **kwargs):
        """ """
        ...
    def underMouse(self, *args, **kwargs):
        """ """
        ...
    def ungrabGesture(self, *args, **kwargs):
        """ """
        ...
    def unsetCursor(self, *args, **kwargs):
        """ """
        ...
    def unsetLayoutDirection(self, *args, **kwargs):
        """ """
        ...
    def unsetLocale(self, *args, **kwargs):
        """ """
        ...
    def update(self, *args, **kwargs):
        """ """
        ...
    def updateGeometry(self, *args, **kwargs):
        """ """
        ...
    def updateMicroFocus(self, *args, **kwargs):
        """ """
        ...
    def updatesEnabled(self, *args, **kwargs):
        """ """
        ...
    def visibleRegion(self, *args, **kwargs):
        """ """
        ...
    def whatsThis(self, *args, **kwargs):
        """ """
        ...
    def wheelEvent(self, *args, **kwargs):
        """ """
        ...
    def width(self, *args, **kwargs):
        """ """
        ...
    def winEvent(self, *args, **kwargs):
        """ """
        ...
    def winId(self, *args, **kwargs):
        """ """
        ...
    def window(self, *args, **kwargs):
        """ """
        ...
    def windowFilePath(self, *args, **kwargs):
        """ """
        ...
    def windowFlags(self, *args, **kwargs):
        """ """
        ...
    def windowIcon(self, *args, **kwargs):
        """ """
        ...
    def windowIconText(self, *args, **kwargs):
        """ """
        ...
    def windowModality(self, *args, **kwargs):
        """ """
        ...
    def windowOpacity(self, *args, **kwargs):
        """ """
        ...
    def windowRole(self, *args, **kwargs):
        """ """
        ...
    def windowState(self, *args, **kwargs):
        """ """
        ...
    def windowTitle(self, *args, **kwargs):
        """ """
        ...
    def windowType(self, *args, **kwargs):
        """ """
        ...
    def x(self, *args, **kwargs):
        """ """
        ...
    def y(self, *args, **kwargs):
        """ """
        ...
    ...

class QWidgetAction(QAction):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def createWidget(self, *args, **kwargs):
        """ """
        ...
    def createdWidgets(self, *args, **kwargs):
        """ """
        ...
    def defaultWidget(self, *args, **kwargs):
        """ """
        ...
    def deleteWidget(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def eventFilter(self, *args, **kwargs):
        """ """
        ...
    def releaseWidget(self, *args, **kwargs):
        """ """
        ...
    def requestWidget(self, *args, **kwargs):
        """ """
        ...
    def setDefaultWidget(self, *args, **kwargs):
        """ """
        ...
    ...

class QWidgetItem(QLayoutItem):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def expandingDirections(self, *args, **kwargs):
        """ """
        ...
    def geometry(self, *args, **kwargs):
        """ """
        ...
    def hasHeightForWidth(self, *args, **kwargs):
        """ """
        ...
    def heightForWidth(self, *args, **kwargs):
        """ """
        ...
    def isEmpty(self, *args, **kwargs):
        """ """
        ...
    def maximumSize(self, *args, **kwargs):
        """ """
        ...
    def minimumSize(self, *args, **kwargs):
        """ """
        ...
    def setGeometry(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def widget(self, *args, **kwargs):
        """ """
        ...
    ...

class QWizard(QDialog):
    AeroStyle: ... = PySide.QtGui.QWizard.WizardStyle.AeroStyle
    """
    """

    BackButton: ... = PySide.QtGui.QWizard.WizardButton.BackButton
    """
    """

    BackgroundPixmap: ... = PySide.QtGui.QWizard.WizardPixmap.BackgroundPixmap
    """
    """

    BannerPixmap: ... = PySide.QtGui.QWizard.WizardPixmap.BannerPixmap
    """
    """

    CancelButton: ... = PySide.QtGui.QWizard.WizardButton.CancelButton
    """
    """

    CancelButtonOnLeft: ...
    """
    PySide.QtGui.QWizard.WizardOption.CancelButtonOnL...
    """

    ClassicStyle: ... = PySide.QtGui.QWizard.WizardStyle.ClassicStyle
    """
    """

    CommitButton: ... = PySide.QtGui.QWizard.WizardButton.CommitButton
    """
    """

    CustomButton1: ... = PySide.QtGui.QWizard.WizardButton.CustomButton1
    """
    """

    CustomButton2: ... = PySide.QtGui.QWizard.WizardButton.CustomButton2
    """
    """

    CustomButton3: ... = PySide.QtGui.QWizard.WizardButton.CustomButton3
    """
    """

    DisabledBackButtonOnLastPage: ...
    """
    PySide.QtGui.QWizard.WizardOption.Disab...
    """

    ExtendedWatermarkPixmap: ...
    """
    PySide.QtGui.QWizard.WizardOption.ExtendedWa...
    """

    FinishButton: ... = PySide.QtGui.QWizard.WizardButton.FinishButton
    """
    """

    HaveCustomButton1: ...
    """
    PySide.QtGui.QWizard.WizardOption.HaveCustomButton...
    """

    HaveCustomButton2: ...
    """
    PySide.QtGui.QWizard.WizardOption.HaveCustomButton...
    """

    HaveCustomButton3: ...
    """
    PySide.QtGui.QWizard.WizardOption.HaveCustomButton...
    """

    HaveFinishButtonOnEarlyPages: ...
    """
    PySide.QtGui.QWizard.WizardOption.HaveF...
    """

    HaveHelpButton: ... = PySide.QtGui.QWizard.WizardOption.HaveHelpButton
    """
    """

    HaveNextButtonOnLastPage: ...
    """
    PySide.QtGui.QWizard.WizardOption.HaveNextB...
    """

    HelpButton: ... = PySide.QtGui.QWizard.WizardButton.HelpButton
    """
    """

    HelpButtonOnRight: ...
    """
    PySide.QtGui.QWizard.WizardOption.HelpButtonOnRigh...
    """

    IgnoreSubTitles: ... = PySide.QtGui.QWizard.WizardOption.IgnoreSubTitles
    """
    """

    IndependentPages: ... = PySide.QtGui.QWizard.WizardOption.IndependentPages
    """
    """

    LogoPixmap: ... = PySide.QtGui.QWizard.WizardPixmap.LogoPixmap
    """
    """

    MacStyle: ... = PySide.QtGui.QWizard.WizardStyle.MacStyle
    """
    """

    ModernStyle: ... = PySide.QtGui.QWizard.WizardStyle.ModernStyle
    """
    """

    NButtons: ... = PySide.QtGui.QWizard.WizardButton.NButtons
    """
    """

    NPixmaps: ... = PySide.QtGui.QWizard.WizardPixmap.NPixmaps
    """
    """

    NStandardButtons: ... = PySide.QtGui.QWizard.WizardButton.NStandardButtons
    """
    """

    NStyles: ... = PySide.QtGui.QWizard.WizardStyle.NStyles
    """
    """

    NextButton: ... = PySide.QtGui.QWizard.WizardButton.NextButton
    """
    """

    NoBackButtonOnLastPage: ...
    """
    PySide.QtGui.QWizard.WizardOption.NoBackButto...
    """

    NoBackButtonOnStartPage: ...
    """
    PySide.QtGui.QWizard.WizardOption.NoBackButt...
    """

    NoButton: ... = PySide.QtGui.QWizard.WizardButton.NoButton
    """
    """

    NoCancelButton: ... = PySide.QtGui.QWizard.WizardOption.NoCancelButton
    """
    """

    NoDefaultButton: ... = PySide.QtGui.QWizard.WizardOption.NoDefaultButton
    """
    """

    Stretch: ... = PySide.QtGui.QWizard.WizardButton.Stretch
    """
    """

    WatermarkPixmap: ... = PySide.QtGui.QWizard.WizardPixmap.WatermarkPixmap
    """
    """

    WizardButton: ...
    """
    <type 'PySide.QtGui.QWizard.WizardButton'>
    """

    WizardOption: ...
    """
    <type 'PySide.QtGui.QWizard.WizardOption'>
    """

    WizardOptions: ...
    """
    <type 'WizardOptions'>
    """

    WizardPixmap: ...
    """
    <type 'PySide.QtGui.QWizard.WizardPixmap'>
    """

    WizardStyle: ...
    """
    <type 'PySide.QtGui.QWizard.WizardStyle'>
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    currentIdChanged: ...
    """
    Signal
    """

    customButtonClicked: ...
    """
    Signal
    """

    helpRequested: ...
    """
    Signal
    """

    pageAdded: ...
    """
    Signal
    """

    pageRemoved: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addPage(self, *args, **kwargs):
        """ """
        ...
    def back(self, *args, **kwargs):
        """ """
        ...
    def button(self, *args, **kwargs):
        """ """
        ...
    def buttonText(self, *args, **kwargs):
        """ """
        ...
    def cleanupPage(self, *args, **kwargs):
        """ """
        ...
    def currentId(self, *args, **kwargs):
        """ """
        ...
    def currentPage(self, *args, **kwargs):
        """ """
        ...
    def done(self, *args, **kwargs):
        """ """
        ...
    def event(self, *args, **kwargs):
        """ """
        ...
    def field(self, *args, **kwargs):
        """ """
        ...
    def hasVisitedPage(self, *args, **kwargs):
        """ """
        ...
    def initializePage(self, *args, **kwargs):
        """ """
        ...
    def next(self, *args, **kwargs):
        """ """
        ...
    def nextId(self, *args, **kwargs):
        """ """
        ...
    def options(self, *args, **kwargs):
        """ """
        ...
    def page(self, *args, **kwargs):
        """ """
        ...
    def pageIds(self, *args, **kwargs):
        """ """
        ...
    def paintEvent(self, *args, **kwargs):
        """ """
        ...
    def pixmap(self, *args, **kwargs):
        """ """
        ...
    def removePage(self, *args, **kwargs):
        """ """
        ...
    def resizeEvent(self, *args, **kwargs):
        """ """
        ...
    def restart(self, *args, **kwargs):
        """ """
        ...
    def setButton(self, *args, **kwargs):
        """ """
        ...
    def setButtonLayout(self, *args, **kwargs):
        """ """
        ...
    def setButtonText(self, *args, **kwargs):
        """ """
        ...
    def setDefaultProperty(self, *args, **kwargs):
        """ """
        ...
    def setField(self, *args, **kwargs):
        """ """
        ...
    def setOption(self, *args, **kwargs):
        """ """
        ...
    def setOptions(self, *args, **kwargs):
        """ """
        ...
    def setPage(self, *args, **kwargs):
        """ """
        ...
    def setPixmap(self, *args, **kwargs):
        """ """
        ...
    def setSideWidget(self, *args, **kwargs):
        """ """
        ...
    def setStartId(self, *args, **kwargs):
        """ """
        ...
    def setSubTitleFormat(self, *args, **kwargs):
        """ """
        ...
    def setTitleFormat(self, *args, **kwargs):
        """ """
        ...
    def setVisible(self, *args, **kwargs):
        """ """
        ...
    def setWizardStyle(self, *args, **kwargs):
        """ """
        ...
    def sideWidget(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def startId(self, *args, **kwargs):
        """ """
        ...
    def subTitleFormat(self, *args, **kwargs):
        """ """
        ...
    def testOption(self, *args, **kwargs):
        """ """
        ...
    def titleFormat(self, *args, **kwargs):
        """ """
        ...
    def validateCurrentPage(self, *args, **kwargs):
        """ """
        ...
    def visitedPages(self, *args, **kwargs):
        """ """
        ...
    def winEvent(self, *args, **kwargs):
        """ """
        ...
    def wizardStyle(self, *args, **kwargs):
        """ """
        ...
    ...

class QWizardPage(QWidget):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    completeChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def buttonText(self, *args, **kwargs):
        """ """
        ...
    def cleanupPage(self, *args, **kwargs):
        """ """
        ...
    def field(self, *args, **kwargs):
        """ """
        ...
    def initializePage(self, *args, **kwargs):
        """ """
        ...
    def isCommitPage(self, *args, **kwargs):
        """ """
        ...
    def isComplete(self, *args, **kwargs):
        """ """
        ...
    def isFinalPage(self, *args, **kwargs):
        """ """
        ...
    def nextId(self, *args, **kwargs):
        """ """
        ...
    def pixmap(self, *args, **kwargs):
        """ """
        ...
    def registerField(self, *args, **kwargs):
        """ """
        ...
    def setButtonText(self, *args, **kwargs):
        """ """
        ...
    def setCommitPage(self, *args, **kwargs):
        """ """
        ...
    def setField(self, *args, **kwargs):
        """ """
        ...
    def setFinalPage(self, *args, **kwargs):
        """ """
        ...
    def setPixmap(self, *args, **kwargs):
        """ """
        ...
    def setSubTitle(self, *args, **kwargs):
        """ """
        ...
    def setTitle(self, *args, **kwargs):
        """ """
        ...
    def subTitle(self, *args, **kwargs):
        """ """
        ...
    def title(self, *args, **kwargs):
        """ """
        ...
    def validatePage(self, *args, **kwargs):
        """ """
        ...
    def wizard(self, *args, **kwargs):
        """ """
        ...
    ...

__all__: ...
"""
['QAbstractButton', 'QAbstractGraphicsShapeItem', 'QAbstract...
"""
