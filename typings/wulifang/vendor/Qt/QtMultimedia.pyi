# -*- coding=UTF-8 -*-
# This typing file was generated by typing_from_help.py
"""
Qt.QtMultimedia
"""

import six
import typing
import PySide
import Shiboken

class QAbstractVideoBuffer(Shiboken.Object):
    CoreImageHandle: ...
    """
    PySide.QtMultimedia.QAbstractVideoBuffer.HandleType....
    """

    GLTextureHandle: ...
    """
    PySide.QtMultimedia.QAbstractVideoBuffer.HandleType....
    """

    HandleType: ...
    """
    <type 'PySide.QtMultimedia.QAbstractVideoBuffer.HandleTyp...
    """

    MapMode: ...
    """
    <type 'PySide.QtMultimedia.QAbstractVideoBuffer.MapMode'>
    """

    NoHandle: ...
    """
    PySide.QtMultimedia.QAbstractVideoBuffer.HandleType.NoHandl...
    """

    NotMapped: ... = PySide.QtMultimedia.QAbstractVideoBuffer.MapMode.NotMapped
    """
    """

    QPixmapHandle: ...
    """
    PySide.QtMultimedia.QAbstractVideoBuffer.HandleType.QP...
    """

    ReadOnly: ... = PySide.QtMultimedia.QAbstractVideoBuffer.MapMode.ReadOnly
    """
    """

    ReadWrite: ... = PySide.QtMultimedia.QAbstractVideoBuffer.MapMode.ReadWrite
    """
    """

    UserHandle: ...
    """
    PySide.QtMultimedia.QAbstractVideoBuffer.HandleType.UserH...
    """

    WriteOnly: ... = PySide.QtMultimedia.QAbstractVideoBuffer.MapMode.WriteOnly
    """
    """

    XvShmImageHandle: ...
    """
    PySide.QtMultimedia.QAbstractVideoBuffer.HandleType...
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def handle(self, *args, **kwargs):
        """ """
        ...
    def handleType(self, *args, **kwargs):
        """ """
        ...
    def mapMode(self, *args, **kwargs):
        """ """
        ...
    def unmap(self, *args, **kwargs):
        """ """
        ...
    ...

class QAbstractVideoSurface(PySide.QtCore.QObject):
    Error: ...
    """
    <type 'PySide.QtMultimedia.QAbstractVideoSurface.Error'>
    """

    IncorrectFormatError: ...
    """
    PySide.QtMultimedia.QAbstractVideoSurface.Error...
    """

    NoError: ... = PySide.QtMultimedia.QAbstractVideoSurface.Error.NoError
    """
    """

    ResourceError: ...
    """
    PySide.QtMultimedia.QAbstractVideoSurface.Error.Resour...
    """

    StoppedError: ...
    """
    PySide.QtMultimedia.QAbstractVideoSurface.Error.Stopped...
    """

    UnsupportedFormatError: ...
    """
    PySide.QtMultimedia.QAbstractVideoSurface.Err...
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    activeChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """

    supportedFormatsChanged: ...
    """
    Signal
    """

    surfaceFormatChanged: ...
    """
    Signal
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def error(self, *args, **kwargs):
        """ """
        ...
    def isActive(self, *args, **kwargs):
        """ """
        ...
    def isFormatSupported(self, *args, **kwargs):
        """ """
        ...
    def nearestFormat(self, *args, **kwargs):
        """ """
        ...
    def present(self, *args, **kwargs):
        """ """
        ...
    def setError(self, *args, **kwargs):
        """ """
        ...
    def start(self, *args, **kwargs):
        """ """
        ...
    def stop(self, *args, **kwargs):
        """ """
        ...
    def supportedPixelFormats(self, *args, **kwargs):
        """ """
        ...
    def surfaceFormat(self, *args, **kwargs):
        """ """
        ...
    ...

class QAudio(Shiboken.Object):
    ActiveState: ... = PySide.QtMultimedia.QAudio.State.ActiveState
    """
    """

    AudioInput: ... = PySide.QtMultimedia.QAudio.Mode.AudioInput
    """
    """

    AudioOutput: ... = PySide.QtMultimedia.QAudio.Mode.AudioOutput
    """
    """

    Error: ...
    """
    <type 'PySide.QtMultimedia.QAudio.Error'>
    """

    FatalError: ... = PySide.QtMultimedia.QAudio.Error.FatalError
    """
    """

    IOError: ... = PySide.QtMultimedia.QAudio.Error.IOError
    """
    """

    IdleState: ... = PySide.QtMultimedia.QAudio.State.IdleState
    """
    """

    Mode: ...
    """
    <type 'PySide.QtMultimedia.QAudio.Mode'>
    """

    NoError: ... = PySide.QtMultimedia.QAudio.Error.NoError
    """
    """

    OpenError: ... = PySide.QtMultimedia.QAudio.Error.OpenError
    """
    """

    State: ...
    """
    <type 'PySide.QtMultimedia.QAudio.State'>
    """

    StoppedState: ... = PySide.QtMultimedia.QAudio.State.StoppedState
    """
    """

    SuspendedState: ... = PySide.QtMultimedia.QAudio.State.SuspendedState
    """
    """

    UnderrunError: ... = PySide.QtMultimedia.QAudio.Error.UnderrunError
    """
    """

    ...

class QAudioDeviceInfo(Shiboken.Object):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    @staticmethod
    def availableDevices(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def defaultInputDevice(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def defaultOutputDevice(*args, **kwargs):
        """ """
        ...
    def __copy__(self, *args, **kwargs):
        """ """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def __nonzero__(self, *args, **kwargs):
        """
        x.__nonzero__() <==> x != 0
        """
        ...
    def deviceName(self, *args, **kwargs):
        """ """
        ...
    def isFormatSupported(self, *args, **kwargs):
        """ """
        ...
    def isNull(self, *args, **kwargs):
        """ """
        ...
    def nearestFormat(self, *args, **kwargs):
        """ """
        ...
    def preferredFormat(self, *args, **kwargs):
        """ """
        ...
    def supportedByteOrders(self, *args, **kwargs):
        """ """
        ...
    def supportedChannelCounts(self, *args, **kwargs):
        """ """
        ...
    def supportedChannels(self, *args, **kwargs):
        """ """
        ...
    def supportedCodecs(self, *args, **kwargs):
        """ """
        ...
    def supportedFrequencies(self, *args, **kwargs):
        """ """
        ...
    def supportedSampleRates(self, *args, **kwargs):
        """ """
        ...
    def supportedSampleSizes(self, *args, **kwargs):
        """ """
        ...
    def supportedSampleTypes(self, *args, **kwargs):
        """ """
        ...
    ...

class QAudioFormat(Shiboken.Object):
    BigEndian: ... = PySide.QtMultimedia.QAudioFormat.Endian.BigEndian
    """
    """

    Endian: ...
    """
    <type 'PySide.QtMultimedia.QAudioFormat.Endian'>
    """

    Float: ... = PySide.QtMultimedia.QAudioFormat.SampleType.Float
    """
    """

    LittleEndian: ... = PySide.QtMultimedia.QAudioFormat.Endian.LittleEndian
    """
    """

    SampleType: ...
    """
    <type 'PySide.QtMultimedia.QAudioFormat.SampleType'>
    """

    SignedInt: ... = PySide.QtMultimedia.QAudioFormat.SampleType.SignedInt
    """
    """

    UnSignedInt: ... = PySide.QtMultimedia.QAudioFormat.SampleType.UnSignedInt
    """
    """

    Unknown: ... = PySide.QtMultimedia.QAudioFormat.SampleType.Unknown
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __copy__(self, *args, **kwargs):
        """ """
        ...
    def __eq__(self, *args, **kwargs):
        """
        x.__eq__(y) <==> x==y
        """
        ...
    def __ge__(self, *args, **kwargs):
        """
        x.__ge__(y) <==> x>=y
        """
        ...
    def __gt__(self, *args, **kwargs):
        """
        x.__gt__(y) <==> x>y
        """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def __le__(self, *args, **kwargs):
        """
        x.__le__(y) <==> x<=y
        """
        ...
    def __lt__(self, *args, **kwargs):
        """
        x.__lt__(y) <==> x<y
        """
        ...
    def __ne__(self, *args, **kwargs):
        """
        x.__ne__(y) <==> x!=y
        """
        ...
    def byteOrder(self, *args, **kwargs):
        """ """
        ...
    def channelCount(self, *args, **kwargs):
        """ """
        ...
    def channels(self, *args, **kwargs):
        """ """
        ...
    def codec(self, *args, **kwargs):
        """ """
        ...
    def frequency(self, *args, **kwargs):
        """ """
        ...
    def isValid(self, *args, **kwargs):
        """ """
        ...
    def sampleRate(self, *args, **kwargs):
        """ """
        ...
    def sampleSize(self, *args, **kwargs):
        """ """
        ...
    def sampleType(self, *args, **kwargs):
        """ """
        ...
    def setByteOrder(self, *args, **kwargs):
        """ """
        ...
    def setChannelCount(self, *args, **kwargs):
        """ """
        ...
    def setChannels(self, *args, **kwargs):
        """ """
        ...
    def setCodec(self, *args, **kwargs):
        """ """
        ...
    def setFrequency(self, *args, **kwargs):
        """ """
        ...
    def setSampleRate(self, *args, **kwargs):
        """ """
        ...
    def setSampleSize(self, *args, **kwargs):
        """ """
        ...
    def setSampleType(self, *args, **kwargs):
        """ """
        ...
    ...

class QAudioInput(PySide.QtCore.QObject):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    notify: ...
    """
    Signal
    """

    stateChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def bufferSize(self, *args, **kwargs):
        """ """
        ...
    def bytesReady(self, *args, **kwargs):
        """ """
        ...
    def elapsedUSecs(self, *args, **kwargs):
        """ """
        ...
    def error(self, *args, **kwargs):
        """ """
        ...
    def format(self, *args, **kwargs):
        """ """
        ...
    def notifyInterval(self, *args, **kwargs):
        """ """
        ...
    def periodSize(self, *args, **kwargs):
        """ """
        ...
    def processedUSecs(self, *args, **kwargs):
        """ """
        ...
    def reset(self, *args, **kwargs):
        """ """
        ...
    def resume(self, *args, **kwargs):
        """ """
        ...
    def setBufferSize(self, *args, **kwargs):
        """ """
        ...
    def setNotifyInterval(self, *args, **kwargs):
        """ """
        ...
    def start(self, *args, **kwargs):
        """ """
        ...
    def state(self, *args, **kwargs):
        """ """
        ...
    def stop(self, *args, **kwargs):
        """ """
        ...
    def suspend(self, *args, **kwargs):
        """ """
        ...
    ...

class QAudioOutput(PySide.QtCore.QObject):
    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """

    notify: ...
    """
    Signal
    """

    stateChanged: ...
    """
    Signal
    """

    staticMetaObject: ...
    """
    <PySide.QtCore.QMetaObject object>
    """
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def bufferSize(self, *args, **kwargs):
        """ """
        ...
    def bytesFree(self, *args, **kwargs):
        """ """
        ...
    def elapsedUSecs(self, *args, **kwargs):
        """ """
        ...
    def error(self, *args, **kwargs):
        """ """
        ...
    def format(self, *args, **kwargs):
        """ """
        ...
    def notifyInterval(self, *args, **kwargs):
        """ """
        ...
    def periodSize(self, *args, **kwargs):
        """ """
        ...
    def processedUSecs(self, *args, **kwargs):
        """ """
        ...
    def reset(self, *args, **kwargs):
        """ """
        ...
    def resume(self, *args, **kwargs):
        """ """
        ...
    def setBufferSize(self, *args, **kwargs):
        """ """
        ...
    def setNotifyInterval(self, *args, **kwargs):
        """ """
        ...
    def start(self, *args, **kwargs):
        """ """
        ...
    def state(self, *args, **kwargs):
        """ """
        ...
    def stop(self, *args, **kwargs):
        """ """
        ...
    def suspend(self, *args, **kwargs):
        """ """
        ...
    ...

class QVideoFrame(Shiboken.Object):
    BottomField: ... = PySide.QtMultimedia.QVideoFrame.FieldType.BottomField
    """
    """

    FieldType: ...
    """
    <type 'PySide.QtMultimedia.QVideoFrame.FieldType'>
    """

    Format_ARGB32: ...
    """
    PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_ARG...
    """

    Format_ARGB32_Premultiplied: ...
    """
    PySide.QtMultimedia.QVideoFrame.PixelFor...
    """

    Format_ARGB8565_Premultiplied: ...
    """
    PySide.QtMultimedia.QVideoFrame.PixelF...
    """

    Format_AYUV444: ...
    """
    PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_AY...
    """

    Format_AYUV444_Premultiplied: ...
    """
    PySide.QtMultimedia.QVideoFrame.PixelFo...
    """

    Format_BGR24: ...
    """
    PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_BGR2...
    """

    Format_BGR32: ...
    """
    PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_BGR3...
    """

    Format_BGR555: ...
    """
    PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_BGR...
    """

    Format_BGR565: ...
    """
    PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_BGR...
    """

    Format_BGRA32: ...
    """
    PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_BGR...
    """

    Format_BGRA32_Premultiplied: ...
    """
    PySide.QtMultimedia.QVideoFrame.PixelFor...
    """

    Format_BGRA5658_Premultiplied: ...
    """
    PySide.QtMultimedia.QVideoFrame.PixelF...
    """

    Format_IMC1: ... = PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_IMC1
    """
    """

    Format_IMC2: ... = PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_IMC2
    """
    """

    Format_IMC3: ... = PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_IMC3
    """
    """

    Format_IMC4: ... = PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_IMC4
    """
    """

    Format_Invalid: ...
    """
    PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_In...
    """

    Format_NV12: ... = PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_NV12
    """
    """

    Format_NV21: ... = PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_NV21
    """
    """

    Format_RGB24: ...
    """
    PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_RGB2...
    """

    Format_RGB32: ...
    """
    PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_RGB3...
    """

    Format_RGB555: ...
    """
    PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_RGB...
    """

    Format_RGB565: ...
    """
    PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_RGB...
    """

    Format_UYVY: ... = PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_UYVY
    """
    """

    Format_User: ... = PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_User
    """
    """

    Format_Y16: ... = PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_Y16
    """
    """

    Format_Y8: ... = PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_Y8
    """
    """

    Format_YUV420P: ...
    """
    PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_YU...
    """

    Format_YUV444: ...
    """
    PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_YUV...
    """

    Format_YUYV: ... = PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_YUYV
    """
    """

    Format_YV12: ... = PySide.QtMultimedia.QVideoFrame.PixelFormat.Format_YV12
    """
    """

    InterlacedFrame: ...
    """
    PySide.QtMultimedia.QVideoFrame.FieldType.Interlaced...
    """

    PixelFormat: ...
    """
    <type 'PySide.QtMultimedia.QVideoFrame.PixelFormat'>
    """

    ProgressiveFrame: ...
    """
    PySide.QtMultimedia.QVideoFrame.FieldType.Progressi...
    """

    TopField: ... = PySide.QtMultimedia.QVideoFrame.FieldType.TopField
    """
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    @staticmethod
    def imageFormatFromPixelFormat(*args, **kwargs):
        """ """
        ...
    @staticmethod
    def pixelFormatFromImageFormat(*args, **kwargs):
        """ """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def bits(self, *args, **kwargs):
        """ """
        ...
    def bytesPerLine(self, *args, **kwargs):
        """ """
        ...
    def endTime(self, *args, **kwargs):
        """ """
        ...
    def fieldType(self, *args, **kwargs):
        """ """
        ...
    def handle(self, *args, **kwargs):
        """ """
        ...
    def handleType(self, *args, **kwargs):
        """ """
        ...
    def height(self, *args, **kwargs):
        """ """
        ...
    def isMapped(self, *args, **kwargs):
        """ """
        ...
    def isReadable(self, *args, **kwargs):
        """ """
        ...
    def isValid(self, *args, **kwargs):
        """ """
        ...
    def isWritable(self, *args, **kwargs):
        """ """
        ...
    def map(self, *args, **kwargs):
        """ """
        ...
    def mapMode(self, *args, **kwargs):
        """ """
        ...
    def mappedBytes(self, *args, **kwargs):
        """ """
        ...
    def pixelFormat(self, *args, **kwargs):
        """ """
        ...
    def setEndTime(self, *args, **kwargs):
        """ """
        ...
    def setFieldType(self, *args, **kwargs):
        """ """
        ...
    def setStartTime(self, *args, **kwargs):
        """ """
        ...
    def size(self, *args, **kwargs):
        """ """
        ...
    def startTime(self, *args, **kwargs):
        """ """
        ...
    def unmap(self, *args, **kwargs):
        """ """
        ...
    def width(self, *args, **kwargs):
        """ """
        ...
    ...

class QVideoSurfaceFormat(Shiboken.Object):
    BottomToTop: ...
    """
    PySide.QtMultimedia.QVideoSurfaceFormat.Direction.Bottom...
    """

    Direction: ...
    """
    <type 'PySide.QtMultimedia.QVideoSurfaceFormat.Direction'>
    """

    TopToBottom: ...
    """
    PySide.QtMultimedia.QVideoSurfaceFormat.Direction.TopToB...
    """

    YCbCrColorSpace: ...
    """
    <type 'PySide.QtMultimedia.QVideoSurfaceFormat.YCbCr...
    """

    YCbCr_BT601: ...
    """
    PySide.QtMultimedia.QVideoSurfaceFormat.YCbCrColorSpace....
    """

    YCbCr_BT709: ...
    """
    PySide.QtMultimedia.QVideoSurfaceFormat.YCbCrColorSpace....
    """

    YCbCr_CustomMatrix: ...
    """
    PySide.QtMultimedia.QVideoSurfaceFormat.YCbCrColo...
    """

    YCbCr_JPEG: ...
    """
    PySide.QtMultimedia.QVideoSurfaceFormat.YCbCrColorSpace.Y...
    """

    YCbCr_Undefined: ...
    """
    PySide.QtMultimedia.QVideoSurfaceFormat.YCbCrColorSp...
    """

    YCbCr_xvYCC601: ...
    """
    PySide.QtMultimedia.QVideoSurfaceFormat.YCbCrColorSpa...
    """

    YCbCr_xvYCC709: ...
    """
    PySide.QtMultimedia.QVideoSurfaceFormat.YCbCrColorSpa...
    """

    __new__: ...
    """
    T.__new__(S, ...) -> a new object with type S, a subtype of T
    """
    def __copy__(self, *args, **kwargs):
        """ """
        ...
    def __eq__(self, *args, **kwargs):
        """
        x.__eq__(y) <==> x==y
        """
        ...
    def __ge__(self, *args, **kwargs):
        """
        x.__ge__(y) <==> x>=y
        """
        ...
    def __gt__(self, *args, **kwargs):
        """
        x.__gt__(y) <==> x>y
        """
        ...
    def __init__(self, *args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def __le__(self, *args, **kwargs):
        """
        x.__le__(y) <==> x<=y
        """
        ...
    def __lt__(self, *args, **kwargs):
        """
        x.__lt__(y) <==> x<y
        """
        ...
    def __ne__(self, *args, **kwargs):
        """
        x.__ne__(y) <==> x!=y
        """
        ...
    def __repr__(self, *args, **kwargs):
        """
        x.__repr__() <==> repr(x)
        """
        ...
    def frameHeight(self, *args, **kwargs):
        """ """
        ...
    def frameRate(self, *args, **kwargs):
        """ """
        ...
    def frameSize(self, *args, **kwargs):
        """ """
        ...
    def frameWidth(self, *args, **kwargs):
        """ """
        ...
    def handleType(self, *args, **kwargs):
        """ """
        ...
    def isValid(self, *args, **kwargs):
        """ """
        ...
    def pixelAspectRatio(self, *args, **kwargs):
        """ """
        ...
    def pixelFormat(self, *args, **kwargs):
        """ """
        ...
    def property(self, *args, **kwargs):
        """ """
        ...
    def propertyNames(self, *args, **kwargs):
        """ """
        ...
    def scanLineDirection(self, *args, **kwargs):
        """ """
        ...
    def setFrameRate(self, *args, **kwargs):
        """ """
        ...
    def setFrameSize(self, *args, **kwargs):
        """ """
        ...
    def setPixelAspectRatio(self, *args, **kwargs):
        """ """
        ...
    def setProperty(self, *args, **kwargs):
        """ """
        ...
    def setScanLineDirection(self, *args, **kwargs):
        """ """
        ...
    def setViewport(self, *args, **kwargs):
        """ """
        ...
    def setYCbCrColorSpace(self, *args, **kwargs):
        """ """
        ...
    def sizeHint(self, *args, **kwargs):
        """ """
        ...
    def viewport(self, *args, **kwargs):
        """ """
        ...
    def yCbCrColorSpace(self, *args, **kwargs):
        """ """
        ...
    ...

__all__: ...
"""
['QAbstractVideoBuffer', 'QAbstractVideoSurface', 'QAudio', ...
"""
