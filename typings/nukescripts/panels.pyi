# pyright: reportMissingImports=false
"""
This type stub file was generated by pyright.
"""

from typing import Any, Callable, Optional
import pyui
from wulifang._compat.str import Str

import nuke

__panels = dict()

def registerPanel(id: Str, command: Callable[..., Any]) -> None: ...
def unregisterPanel(id: Str, command: Callable[..., Any]) -> None: ...
def restorePanel(id: Str) -> Optional[PythonPanel]: ...
def PythonPanelKnobChanged(widget): ...

class PythonPanel(pyui.Dialog):
    def __init__(
        self,
        title: Str = ...,
        id: Str = ...,
        scrollable: bool = ...,
    ) -> None: ...
    def addCallback(self): ...
    def removeCallback(self) -> None: ...
    def addKnob(self, k: nuke.Knob, /) -> None: ...
    def removeKnob(self, knob): ...
    def knobs(self) -> dict[Str, nuke.Knob]: ...
    def writeKnobs(self, flags): ...
    def readKnobs(self, s): ...
    def knobChangedCallback(self, knob): ...
    def knobChanged(self, knob): ...
    def finishModalDialog(self, result): ...
    def ok(self): ...
    def cancel(self): ...
    def create(self): ...
    def show(self) -> None: ...
    def hide(self) -> None: ...
    def showModalDialog(self, defaultKnobText: Str = ...) -> bool: ...
    def showModal(self, defaultKnobText: Str = ...) -> None: ...
    def addToPane(self, pane: nuke.Widget = ...) -> None: ...
    def accept(self): ...
    def reject(self) -> None: ...

class WidgetKnob:
    def __init__(self, widget) -> None: ...
    def makeUI(self): ...

def registerWidgetAsPanel(widget, name, id, create=...):
    """registerWidgetAsPanel(widget, name, id, create) -> PythonPanel

    Wraps and registers a widget to be used in a Nuke panel.

    widget - should be a string of the class for the widget
    name - is is the name as it will appear on the Pane menu
    id - should the the unique ID for this widget panel
    create - if this is set to true a new NukePanel will be returned that wraps this widget

    Example ( using PyQt )

    import nuke
    import PyQt4.QtCore as QtCore
    import PyQt4.QtGui as QtGui
    from nukescripts import panels

    class NukeTestWindow(QtGui.QWidget):
      def __init__(self, parent=None):
        QtGui.QWidget.__init__(self, parent)
        self.setLayout( QtGui.QVBoxLayout() )
        self.myTable	= QtGui.QTableWidget( )
        self.myTable.header = ['Date', 'Files', 'Size', 'Path' ]
        self.myTable.size = [ 75, 375, 85, 600 ]
        self.layout().addWidget( self.myTable )

    nukescripts.registerWidgetAsPanel('NukeTestWindow', 'NukeTestWindow', 'uk.co.thefoundry.NukeTestWindow' )

    """

    class Panel(PythonPanel): ...
