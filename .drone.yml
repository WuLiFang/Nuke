---
kind: pipeline
name: nuke10.0v4

steps:
  - name: test
    image: docker:stable-git
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      foundry_LICENSE:
        from_secret: foundry_LICENSE
    commands:
      - >-
        docker build
        --build-arg HTTP_PROXY
        --build-arg HTTPS_PROXY
        --build-arg PIP_INDEX_URL
        --build-arg PIP_TRUSTED_HOST
        --build-arg "VERSION=10.0v4"
        --build-arg foundry_LICENSE
        --file test.Dockerfile
        .
volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
---
kind: pipeline
name: nuke10.5v7

steps:
  - name: test
    image: docker:stable-git
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      PIP_NO_BUILD_ISOLATION: false
      foundry_LICENSE:
        from_secret: foundry_LICENSE
    commands:
      - >-
        docker build
        --build-arg HTTP_PROXY
        --build-arg HTTPS_PROXY
        --build-arg PIP_INDEX_URL
        --build-arg PIP_TRUSTED_HOST
        --build-arg "VERSION=10.5v7"
        --build-arg foundry_LICENSE
        --file test.Dockerfile
        .
volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
---
kind: pipeline
name: nuke11

steps:
  - name: test
    image: docker:stable-git
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      PIP_NO_BUILD_ISOLATION: false
      foundry_LICENSE:
        from_secret: foundry_LICENSE
    commands:
      - >-
        docker build
        --build-arg HTTP_PROXY
        --build-arg HTTPS_PROXY
        --build-arg PIP_INDEX_URL
        --build-arg PIP_TRUSTED_HOST
        --build-arg "VERSION=11"
        --build-arg foundry_LICENSE
        --file test.Dockerfile
        .
volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
---
kind: pipeline
name: docs

steps:
  - name: build
    image: python:3
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - pip install -U pip
      - pip install -r ./dev-requirements.txt
      - git config --global user.name 'CI User'
      - git config --global user.email '<>'
      - >-
        if [ "${DRONE_BRANCH}" == "master" ]; then 
          make -C docs deploy;
        else 
          make -C docs html;
        fi
  - name: deploy to github
    image: node:lts
    environment:
      GITHUB_DEPLOY_KEY:
        from_secret: GITHUB_DEPLOY_KEY
      REMOTE_URL: git@github.com:WuLiFang/Nuke.git
    commands:
      - mkdir ~/.ssh/
      - "cp ./scripts/known_hosts ~/.ssh/"
      - chmod 644 ~/.ssh/known_hosts
      - echo "$${GITHUB_DEPLOY_KEY}" > ~/.ssh/id_rsa
      - chmod 600 ~/.ssh/id_rsa
      - |-
        if [ -n "$SSH_PROXY" ]; then
          sed -i "s@http://.\+\.debian\.org/debian@http://ftp.cn.debian.org/debian@g" /etc/apt/sources.list
          apt-get update
          apt-get -y install connect-proxy
          echo "ProxyCommand connect -H $SSH_PROXY %h %p" > ~/.ssh/config
        fi
      - cd docs/_build/html
      - git fetch ${REMOTE_URL} gh-pages
      - if [ -z "$(git diff --shortstat FETCH_HEAD)" ]; exit 0; fi
      - git push -f git@github.com:WuLiFang/Nuke.git HEAD:gh-pages
    when:
      branch:
        - master
---
kind: pipeline
name: notification

clone:
  disable: true
steps:
  - name: youdu
    image: registry.wlf.com/drone-youdu
    failure: ignore
    settings:
      url:
        from_secret: YOUDU_URL
      buin:
        from_secret: YOUDU_BUIN
      app_id:
        from_secret: YOUDU_APP_ID
      aes_key:
        from_secret: YOUDU_AES_KEY
      from:
        from_secret: YOUDU_FROM
      to:
        from_secret: YOUDU_TO
depends_on:
  - nuke10.0v4
  - nuke10.5v7
  - nuke11
  - docs
trigger:
  status:
    - success
    - failure
